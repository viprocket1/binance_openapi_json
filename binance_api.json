{
  "openapi": "3.0.2",
  "info": {
    "title": "Binance Public Spot API",
    "description": "OpenAPI Specifications for the Binance Public Spot API\n\nAPI documents:\n  - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)\n  - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.binance.com"
    },
    {
      "url": "https://testnet.binance.vision"
    }
  ],
  "tags": [
    {
      "name": "Market",
      "description": "Market Data"
    },
    {
      "name": "Trade",
      "description": "Account/Trade"
    },
    {
      "name": "Margin",
      "description": "Margin Account/Trade"
    },
    {
      "name": "Wallet",
      "description": "Wallet Endpoints"
    },
    {
      "name": "Sub-Account",
      "description": "Sub-account Endpoints"
    },
    {
      "name": "Stream",
      "description": "User Data Stream"
    },
    {
      "name": "Margin Stream",
      "description": "Margin User Data Stream"
    },
    {
      "name": "Isolated Margin Stream",
      "description": "Isolated User Data Stream"
    },
    {
      "name": "Savings",
      "description": "Savings Endpoints"
    },
    {
      "name": "Staking",
      "description": "Staking Endpoints"
    },
    {
      "name": "Mining",
      "description": "Mining Endpoints"
    },
    {
      "name": "Futures",
      "description": "Futures Endpoints"
    },
    {
      "name": "Futures Algo",
      "description": "Futures Algo Endpoints"
    },
    {
      "name": "Portfolio Margin",
      "description": "Portfolio Margin Endpoints"
    },
    {
      "name": "BLVT",
      "description": "Binance Leveraged Tokens Endpoints"
    },
    {
      "name": "BSwap",
      "description": "Binance Swap Endpoints"
    },
    {
      "name": "Fiat",
      "description": "Fiat Endpoints"
    },
    {
      "name": "C2C",
      "description": "Consumer-To-Consumer Endpoints"
    },
    {
      "name": "VIP Loans",
      "description": "VIP Loans Endpoints"
    },
    {
      "name": "Crypto Loans",
      "description": "Crypto Loans Endpoints"
    },
    {
      "name": "Pay",
      "description": "Pay Endpoints"
    },
    {
      "name": "Convert",
      "description": "Convert Endpoints"
    },
    {
      "name": "Rebate",
      "description": "Rebate Endpoints"
    },
    {
      "name": "NFT",
      "description": "NFT Endpoints"
    },
    {
      "name": "Gift Card",
      "description": "Gift Card Endpoints"
    }
  ],
  "paths": {
    "/api/v3/ping": {
      "get": {
        "tags": [
          "Market"
        ],
        "summary": "Test Connectivity",
        "description": "Test connectivity to the Rest API.\n\nWeight(IP): 1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/time": {
      "get": {
        "tags": [
          "Market"
        ],
        "summary": "Check Server Time",
        "description": "Test connectivity to the Rest API and get the current server time.\n\nWeight(IP): 1",
        "responses": {
          "200": {
            "description": "Binance server UTC timestamp",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/exchangeInfo": {
      "get": {
        "tags": [
          "Market"
        ],
        "summary": "Exchange Information",
        "description": "Current exchange trading rules and symbol information\n\n- If any symbol provided in either symbol or symbols do not exist, the endpoint will throw an error.\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "symbols",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "[\"BTCUSDT\",\"BNBBTC\"]"
            }
          },
          {
            "name": "permissions",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "'SPOT' or ['MARGIN','LEVERAGED']"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Current exchange trading rules and symbol information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/depth": {
      "get": {
        "tags": [
          "Market"
        ],
        "summary": "Order Book",
        "description": "| Limit               | Weight(IP)  |\n|---------------------|-------------|\n| 1-100               | 1           |\n| 101-500             | 5           |\n| 501-1000            | 10          |\n| 1001-5000           | 50          |",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "If limit > 5000, then the response will truncate to 5000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 5000,
              "type": "integer",
              "format": "int32",
              "example": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                },
                "example": {
                  "lastUpdateId": 1027024,
                  "bids": [
                    [
                      "4.00000000",
                      "431.00000000"
                    ]
                  ],
                  "asks": [
                    [
                      "4.00000200",
                      "12.00000000"
                    ]
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/trades": {
      "get": {
        "tags": [
          "Market"
        ],
        "summary": "Recent Trades List",
        "description": "Get recent trades.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trade list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trade"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/historicalTrades": {
      "get": {
        "tags": [
          "Market"
        ],
        "summary": "Old Trade Lookup (MARKET_DATA)",
        "description": "Get older market trades.\n\nWeight(IP): 5",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          },
          {
            "name": "fromId",
            "in": "query",
            "description": "Trade id to fetch from. Default gets most recent trades.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trade list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trade"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/v3/aggTrades": {
      "get": {
        "tags": [
          "Market"
        ],
        "summary": "Compressed/Aggregate Trades List",
        "description": "Get compressed, aggregate trades. Trades that fill at the time, from the same order, with the same price will have the quantity aggregated.\n- If `fromId`, `startTime`, and `endTime` are not sent, the most recent aggregate trades will be returned.\n- Note that if a trade has the following values, this was a duplicate aggregate trade and marked as invalid:\n\n  p = '0' // price\n  \n  q = '0' // qty\n  \n  f = -1 // ﬁrst_trade_id\n  \n  l = -1 // last_trade_id\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "fromId",
            "in": "query",
            "description": "Trade id to fetch from. Default gets most recent trades.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trade list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/aggTrade"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/klines": {
      "get": {
        "tags": [
          "Market"
        ],
        "summary": "Kline/Candlestick Data",
        "description": "Kline/candlestick bars for a symbol.\nKlines are uniquely identified by their open time.\n\n- If `startTime` and `endTime` are not sent, the most recent klines are returned.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "description": "kline intervals",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "1s",
                "1m",
                "3m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "4h",
                "6h",
                "8h",
                "12h",
                "1d",
                "3d",
                "1w",
                "1M"
              ]
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Kline data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "example": [
                      1499040000000,
                      "0.01634790",
                      "0.80000000",
                      "0.01575800",
                      "0.01577100",
                      "148976.11427815",
                      1499644799999,
                      "2434.19055334",
                      308,
                      "1756.87402397",
                      "28.46694368",
                      "17928899.62484339"
                    ],
                    "items": {
                      "maxItems": 12,
                      "minItems": 12,
                      "oneOf": [
                        {
                          "type": "integer",
                          "format": "int64"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/uiKlines": {
      "get": {
        "tags": [
          "Market"
        ],
        "summary": "UIKlines",
        "description": "The request is similar to klines having the same parameters and response.\n\nuiKlines return modified kline data, optimized for presentation of candlestick charts.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "description": "kline intervals",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "1s",
                "1m",
                "3m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "4h",
                "6h",
                "8h",
                "12h",
                "1d",
                "3d",
                "1w",
                "1M"
              ]
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          }
        ],
        "responses": {
          "200": {
            "description": "UIKline data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "example": [
                      1499040000000,
                      "0.01634790",
                      "0.80000000",
                      "0.01575800",
                      "0.01577100",
                      "148976.11427815",
                      1499644799999,
                      "2434.19055334",
                      308,
                      "1756.87402397",
                      "28.46694368",
                      "0"
                    ],
                    "items": {
                      "maxItems": 12,
                      "minItems": 12,
                      "oneOf": [
                        {
                          "type": "integer",
                          "format": "int64"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/avgPrice": {
      "get": {
        "tags": [
          "Market"
        ],
        "summary": "Current Average Price",
        "description": "Current average price for a symbol.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Average price",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/ticker/24hr": {
      "get": {
        "tags": [
          "Market"
        ],
        "summary": "24hr Ticker Price Change Statistics",
        "description": "24 hour rolling window price change statistics. Careful when accessing this with no symbol.\n\n- If the symbol is not sent, tickers for all symbols will be returned in an array.\n\nWeight(IP):\n- `1` for a single symbol;\n- `40` when the symbol parameter is omitted;",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "symbols",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "[\"BTCUSDT\",\"BNBBTC\"]"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Supported values: FULL or MINI.\nIf none provided, the default is FULL",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "24hr ticker",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_4"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/ticker/price": {
      "get": {
        "tags": [
          "Market"
        ],
        "summary": "Symbol Price Ticker",
        "description": "Latest price for a symbol or symbols.\n\n- If the symbol is not sent, prices for all symbols will be returned in an array.\n\nWeight(IP):\n- `1` for a single symbol;\n- `2` when the symbol parameter is omitted;",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "symbols",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "[\"BTCUSDT\",\"BNBBTC\"]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Price ticker",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_5"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/ticker/bookTicker": {
      "get": {
        "tags": [
          "Market"
        ],
        "summary": "Symbol Order Book Ticker",
        "description": "Best price/qty on the order book for a symbol or symbols.\n\n- If the symbol is not sent, bookTickers for all symbols will be returned in an array.\n\nWeight(IP):\n- `1` for a single symbol;\n- `2` when the symbol parameter is omitted;",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "symbols",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "[\"BTCUSDT\",\"BNBBTC\"]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order book ticker",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_6"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/ticker": {
      "get": {
        "tags": [
          "Market"
        ],
        "summary": "Rolling window price change statistics",
        "description": "The window used to compute statistics is typically slightly wider than requested windowSize.\n\nopenTime for /api/v3/ticker always starts on a minute, while the closeTime is the current time of the request. As such, the effective window might be up to 1 minute wider than requested.\n\nE.g. If the closeTime is 1641287867099 (January 04, 2022 09:17:47:099 UTC) , and the windowSize is 1d. the openTime will be: 1641201420000 (January 3, 2022, 09:17:00 UTC)\n\nWeight(IP): 2 for each requested symbol regardless of windowSize.\n\nThe weight for this request will cap at 100 once the number of symbols in the request is more than 50.",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "symbols",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "[\"BTCUSDT\",\"BNBBTC\"]"
            }
          },
          {
            "name": "windowSize",
            "in": "query",
            "description": "Defaults to 1d if no parameter provided.\nSupported windowSize values:\n1m,2m....59m for minutes\n1h, 2h....23h - for hours\n1d...7d - for days.\n\nUnits cannot be combined (e.g. 1d2h is not allowed)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Supported values: FULL or MINI.\nIf none provided, the default is FULL",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rolling price ticker",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_7"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/order/test": {
      "post": {
        "tags": [
          "Trade"
        ],
        "summary": "Test New Order (TRADE)",
        "description": "Test new order creation and signature/recvWindow long.\nCreates and validates a new order but does not send it into the matching engine.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "side",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SELL",
              "enum": [
                "SELL",
                "BUY"
              ]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Order type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "LIMIT",
                "MARKET",
                "STOP_LOSS",
                "STOP_LOSS_LIMIT",
                "TAKE_PROFIT",
                "TAKE_PROFIT_LIMIT",
                "LIMIT_MAKER"
              ]
            }
          },
          {
            "name": "timeInForce",
            "in": "query",
            "description": "Order time in force",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "GTC",
                "IOC",
                "FOK"
              ]
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Order quantity",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "quoteOrderQty",
            "in": "query",
            "description": "Quote quantity",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "price",
            "in": "query",
            "description": "Order price",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "newClientOrderId",
            "in": "query",
            "description": "Used to uniquely identify this cancel. Automatically generated by default",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strategyId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "strategyType",
            "in": "query",
            "description": "The value cannot be less than 1000000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "stopPrice",
            "in": "query",
            "description": "Used with STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, and TAKE_PROFIT_LIMIT orders.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 20.01
            }
          },
          {
            "name": "trailingDelta",
            "in": "query",
            "description": "Used with STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, and TAKE_PROFIT_LIMIT orders.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "icebergQty",
            "in": "query",
            "description": "Used with LIMIT, STOP_LOSS_LIMIT, and TAKE_PROFIT_LIMIT to create an iceberg order.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "newOrderRespType",
            "in": "query",
            "description": "Set the response JSON. MARKET and LIMIT order types default to FULL, all other orders default to ACK.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ACK",
                "RESULT",
                "FULL"
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/v3/order": {
      "get": {
        "tags": [
          "Trade"
        ],
        "summary": "Query Order (USER_DATA)",
        "description": "Check an order's status.\n\n- Either `orderId` or `origClientOrderId` must be sent.\n- For some historical orders `cummulativeQuoteQty` will be < 0, meaning the data is not available at this time.\n\nWeight(IP): 2",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "origClientOrderId",
            "in": "query",
            "description": "Order id from client",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Trade"
        ],
        "summary": "New Order (TRADE)",
        "description": "Send in a new order.\n\n- `LIMIT_MAKER` are `LIMIT` orders that will be rejected if they would immediately match and trade as a taker.\n- `STOP_LOSS` and `TAKE_PROFIT` will execute a `MARKET` order when the `stopPrice` is reached.\n- Any `LIMIT` or `LIMIT_MAKER` type order can be made an iceberg order by sending an `icebergQty`.\n- Any order with an `icebergQty` MUST have `timeInForce` set to `GTC`.\n- `MARKET` orders using `quantity` specifies how much a user wants to buy or sell based on the market price.\n- `MARKET` orders using `quoteOrderQty` specifies the amount the user wants to spend (when buying) or receive (when selling) of the quote asset; the correct quantity will be determined based on the market liquidity and `quoteOrderQty`.\n- `MARKET` orders using `quoteOrderQty` will not break `LOT_SIZE` filter rules; the order will execute a quantity that will have the notional value as close as possible to `quoteOrderQty`.\n- same `newClientOrderId` can be accepted only when the previous one is filled, otherwise the order will be rejected.\n\nTrigger order price rules against market price for both `MARKET` and `LIMIT` versions:\n\n- Price above market price: `STOP_LOSS` `BUY`, `TAKE_PROFIT` `SELL`\n- Price below market price: `STOP_LOSS` `SELL`, `TAKE_PROFIT` `BUY`\n\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "side",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SELL",
              "enum": [
                "SELL",
                "BUY"
              ]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Order type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "LIMIT",
                "MARKET",
                "STOP_LOSS",
                "STOP_LOSS_LIMIT",
                "TAKE_PROFIT",
                "TAKE_PROFIT_LIMIT",
                "LIMIT_MAKER"
              ]
            }
          },
          {
            "name": "timeInForce",
            "in": "query",
            "description": "Order time in force",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "GTC",
                "IOC",
                "FOK"
              ]
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Order quantity",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "quoteOrderQty",
            "in": "query",
            "description": "Quote quantity",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "price",
            "in": "query",
            "description": "Order price",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "newClientOrderId",
            "in": "query",
            "description": "Used to uniquely identify this cancel. Automatically generated by default",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strategyId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "strategyType",
            "in": "query",
            "description": "The value cannot be less than 1000000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "stopPrice",
            "in": "query",
            "description": "Used with STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, and TAKE_PROFIT_LIMIT orders.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 20.01
            }
          },
          {
            "name": "trailingDelta",
            "in": "query",
            "description": "Used with STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, and TAKE_PROFIT_LIMIT orders.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "icebergQty",
            "in": "query",
            "description": "Used with LIMIT, STOP_LOSS_LIMIT, and TAKE_PROFIT_LIMIT to create an iceberg order.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "newOrderRespType",
            "in": "query",
            "description": "Set the response JSON. MARKET and LIMIT order types default to FULL, all other orders default to ACK.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ACK",
                "RESULT",
                "FULL"
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_8"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Trade"
        ],
        "summary": "Cancel Order (TRADE)",
        "description": "Cancel an active order.\n\nEither `orderId` or `origClientOrderId` must be sent.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "origClientOrderId",
            "in": "query",
            "description": "Order id from client",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newClientOrderId",
            "in": "query",
            "description": "Used to uniquely identify this cancel. Automatically generated by default",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cancelled order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/order"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/v3/order/cancelReplace": {
      "post": {
        "tags": [
          "Trade"
        ],
        "summary": "Cancel an Existing Order and Send a New Order (Trade)",
        "description": "Cancels an existing order and places a new order on the same symbol.\n\nFilters and Order Count are evaluated before the processing of the cancellation and order placement occurs.\n\nA new order that was not attempted (i.e. when newOrderResult: NOT_ATTEMPTED), will still increase the order count by 1.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "side",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SELL",
              "enum": [
                "SELL",
                "BUY"
              ]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Order type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "LIMIT",
                "MARKET",
                "STOP_LOSS",
                "STOP_LOSS_LIMIT",
                "TAKE_PROFIT",
                "TAKE_PROFIT_LIMIT",
                "LIMIT_MAKER"
              ]
            }
          },
          {
            "name": "cancelReplaceMode",
            "in": "query",
            "description": "- `STOP_ON_FAILURE` If the cancel request fails, the new order placement will not be attempted.\n- `ALLOW_FAILURES` If new order placement will be attempted even if cancel request fails.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "STOP_ON_FAILURE"
            }
          },
          {
            "name": "timeInForce",
            "in": "query",
            "description": "Order time in force",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "GTC",
                "IOC",
                "FOK"
              ]
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Order quantity",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "quoteOrderQty",
            "in": "query",
            "description": "Quote quantity",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "price",
            "in": "query",
            "description": "Order price",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "cancelNewClientOrderId",
            "in": "query",
            "description": "Used to uniquely identify this cancel. Automatically generated by default",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cancelOrigClientOrderId",
            "in": "query",
            "description": "Either the cancelOrigClientOrderId or cancelOrderId must be provided. If both are provided, cancelOrderId takes precedence.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cancelOrderId",
            "in": "query",
            "description": "Either the cancelOrigClientOrderId or cancelOrderId must be provided. If both are provided, cancelOrderId takes precedence.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 12
            }
          },
          {
            "name": "newClientOrderId",
            "in": "query",
            "description": "Used to uniquely identify this cancel. Automatically generated by default",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strategyId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "strategyType",
            "in": "query",
            "description": "The value cannot be less than 1000000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "stopPrice",
            "in": "query",
            "description": "Used with STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, and TAKE_PROFIT_LIMIT orders.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 20.01
            }
          },
          {
            "name": "trailingDelta",
            "in": "query",
            "description": "Used with STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, and TAKE_PROFIT_LIMIT orders.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "icebergQty",
            "in": "query",
            "description": "Used with LIMIT, STOP_LOSS_LIMIT, and TAKE_PROFIT_LIMIT to create an iceberg order.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "newOrderRespType",
            "in": "query",
            "description": "Set the response JSON. MARKET and LIMIT order types default to FULL, all other orders default to ACK.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ACK",
                "RESULT",
                "FULL"
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_9"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/v3/openOrders": {
      "get": {
        "tags": [
          "Trade"
        ],
        "summary": "Current Open Orders (USER_DATA)",
        "description": "Get all open orders on a symbol. Careful when accessing this with no symbol.\n\nWeight(IP):\n- `3` for a single symbol;\n- `40` when the symbol parameter is omitted;",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Current open orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/orderDetails"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Trade"
        ],
        "summary": "Cancel all Open Orders on a Symbol (TRADE)",
        "description": "Cancels all active orders on a symbol.\nThis includes OCO orders.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cancelled orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/order"
                      },
                      {
                        "$ref": "#/components/schemas/ocoOrder"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/v3/allOrders": {
      "get": {
        "tags": [
          "Trade"
        ],
        "summary": "All Orders (USER_DATA)",
        "description": "Get all account orders; active, canceled, or filled..\n\n- If `orderId` is set, it will get orders >= that `orderId`. Otherwise most recent orders are returned.\n- For some historical orders `cummulativeQuoteQty` will be < 0, meaning the data is not available at this time.\n- If `startTime` and/or `endTime` provided, `orderId` is not required\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Current open orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/orderDetails"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/v3/order/oco": {
      "post": {
        "tags": [
          "Trade"
        ],
        "summary": "New OCO (TRADE)",
        "description": "Send in a new OCO\n\n- Price Restrictions:\n  - `SELL`: Limit Price > Last Price > Stop Price\n  - `BUY`: Limit Price < Last Price < Stop Price\n- Quantity Restrictions:\n    - Both legs must have the same quantity\n    - `ICEBERG` quantities however do not have to be the same\n- Order Rate Limit\n    - `OCO` counts as 2 orders against the order rate limit.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "listClientOrderId",
            "in": "query",
            "description": "A unique Id for the entire orderList",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "side",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SELL",
              "enum": [
                "SELL",
                "BUY"
              ]
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "limitClientOrderId",
            "in": "query",
            "description": "A unique Id for the limit order",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitStrategyId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limitStrategyType",
            "in": "query",
            "description": "The value cannot be less than 1000000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "price",
            "in": "query",
            "description": "Order price",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "limitIcebergQty",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "trailingDelta",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "stopClientOrderId",
            "in": "query",
            "description": "A unique Id for the stop loss/stop loss limit leg",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stopPrice",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "stopStrategyId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "stopStrategyType",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "stopLimitPrice",
            "in": "query",
            "description": "If provided, stopLimitTimeInForce is required.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "stopIcebergQty",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "stopLimitTimeInForce",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "GTC",
                "FOK",
                "IOC"
              ]
            }
          },
          {
            "name": "newOrderRespType",
            "in": "query",
            "description": "Set the response JSON.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ACK",
                "RESULT",
                "FULL"
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New OCO details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_10"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/v3/orderList": {
      "get": {
        "tags": [
          "Trade"
        ],
        "summary": "Query OCO (USER_DATA)",
        "description": "Retrieves a specific OCO based on provided optional parameters\n\nWeight(IP): 2",
        "parameters": [
          {
            "name": "orderListId",
            "in": "query",
            "description": "Order list id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "origClientOrderId",
            "in": "query",
            "description": "Order id from client",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OCO details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_11"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Trade"
        ],
        "summary": "Cancel OCO (TRADE)",
        "description": "Cancel an entire Order List\n\nCanceling an individual leg will cancel the entire OCO\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "orderListId",
            "in": "query",
            "description": "Order list id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "listClientOrderId",
            "in": "query",
            "description": "A unique Id for the entire orderList",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newClientOrderId",
            "in": "query",
            "description": "Used to uniquely identify this cancel. Automatically generated by default",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report on deleted OCO",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ocoOrder"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/v3/allOrderList": {
      "get": {
        "tags": [
          "Trade"
        ],
        "summary": "Query all OCO (USER_DATA)",
        "description": "Retrieves all OCO based on provided optional parameters\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "fromId",
            "in": "query",
            "description": "Trade id to fetch from. Default gets most recent trades.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of OCO orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_12"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/v3/openOrderList": {
      "get": {
        "tags": [
          "Trade"
        ],
        "summary": "Query Open OCO (USER_DATA)",
        "description": "Weight(IP): 3",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of OCO orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_13"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/v3/account": {
      "get": {
        "tags": [
          "Trade"
        ],
        "summary": "Account Information (USER_DATA)",
        "description": "Get current account information.\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/v3/myTrades": {
      "get": {
        "tags": [
          "Trade"
        ],
        "summary": "Account Trade List (USER_DATA)",
        "description": "Get trades for a specific account and symbol.\n\nIf `fromId` is set, it will get id >= that `fromId`. Otherwise most recent orders are returned.\n\nThe time between startTime and endTime can't be longer than 24 hours.\nThese are the supported combinations of all parameters:\n\n  symbol\n\n  symbol + orderId\n\n  symbol + startTime\n\n  symbol + endTime\n\n  symbol + fromId\n\n  symbol + startTime + endTime\n\n  symbol+ orderId + fromId\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "This can only be used in combination with symbol.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fromId",
            "in": "query",
            "description": "Trade id to fetch from. Default gets most recent trades.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of trades",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/myTrade"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/v3/rateLimit/order": {
      "get": {
        "tags": [
          "Trade"
        ],
        "summary": "Query Current Order Count Usage (TRADE)",
        "description": "Displays the user's current order count usage for all intervals.\n\nWeight(IP): 20",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order rate limits",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": [
                    {
                      "rateLimitType": "ORDERS",
                      "interval": "SECOND",
                      "intervalNum": 10,
                      "limit": 10000,
                      "count": 0
                    },
                    {
                      "rateLimitType": "ORDERS",
                      "interval": "DAY",
                      "intervalNum": 1,
                      "limit": 20000,
                      "count": 0
                    }
                  ],
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_14"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/transfer": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Get Cross Margin Transfer History (USER_DATA)",
        "description": "- Response in descending order\n- Returns data for last 7 days by default\n- Set `archived` to `true` to query data from 6 months ago\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Transfer Type",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ROLL_IN",
                "ROLL_OUT"
              ]
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Default: false. Set to true for archived data from 6 months ago",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Margin account transfer history, response in descending order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_15"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Margin"
        ],
        "summary": "Cross Margin Account Transfer (MARGIN)",
        "description": "Execute transfer between spot account and cross margin account.\n\nWeight(IP): 600",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "* `1` - transfer from main account to margin account\n* `2` - transfer from margin account to main account",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                1,
                2
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transfer Id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transaction"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/loan": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Loan Record (USER_DATA)",
        "description": "- `txId` or `startTime` must be sent. `txId` takes precedence.\n- Response in descending order\n- If `isolatedSymbol` is not sent, crossed margin data will be returned\n- Set `archived` to `true` to query data from 6 months ago\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "isolatedSymbol",
            "in": "query",
            "description": "Isolated symbol",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "txId",
            "in": "query",
            "description": "the tranId in  `POST /sapi/v1/margin/loan`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 123456789
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Default: false. Set to true for archived data from 6 months ago",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loan records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_16"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Margin"
        ],
        "summary": "Margin Account Borrow (MARGIN)",
        "description": "Apply for a loan.\n\n- If \"isIsolated\" = \"TRUE\", \"symbol\" must be sent\n- \"isIsolated\" = \"FALSE\" for crossed margin loan\n\nWeight(UID): 3000",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "isIsolated",
            "in": "query",
            "description": "* `TRUE` - For isolated margin\n* `FALSE` - Default, not for isolated margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "TRUE",
                "FALSE"
              ]
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transaction"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/repay": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Repay Record (USER_DATA)",
        "description": "- `txId` or `startTime` must be sent. `txId` takes precedence.\n- Response in descending order\n- If `isolatedSymbol` is not sent, crossed margin data will be returned\n- Set `archived` to `true` to query data from 6 months ago\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "isolatedSymbol",
            "in": "query",
            "description": "Isolated symbol",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "txId",
            "in": "query",
            "description": "the tranId in  `POST /sapi/v1/margin/repay`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 2970933056
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Default: false. Set to true for archived data from 6 months ago",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Load records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_17"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Margin"
        ],
        "summary": "Margin Account Repay (MARGIN)",
        "description": "Repay loan for margin account.\n\n- If \"isIsolated\" = \"TRUE\", \"symbol\" must be sent\n- \"isIsolated\" = \"FALSE\" for crossed margin repay\n\nWeight(IP): 3000",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "isIsolated",
            "in": "query",
            "description": "* `TRUE` - For isolated margin\n* `FALSE` - Default, not for isolated margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "TRUE",
                "FALSE"
              ]
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transaction"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/asset": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Margin Asset (MARKET_DATA)",
        "description": "Weight(IP): 10",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_18"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/pair": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Cross Margin Pair (MARKET_DATA)",
        "description": "Weight(IP): 10",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Margin pair details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_19"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/allAssets": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Get All Margin Assets (MARKET_DATA)",
        "description": "Weight(IP): 1",
        "responses": {
          "200": {
            "description": "Assets details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_20"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/allPairs": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Get All Cross Margin Pairs (MARKET_DATA)",
        "description": "Weight(IP): 1",
        "responses": {
          "200": {
            "description": "Margin pairs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_21"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/priceIndex": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Margin PriceIndex (MARKET_DATA)",
        "description": "Weight(IP): 10",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Price index",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_22"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/order": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Margin Account's Order (USER_DATA)",
        "description": "- Either `orderId` or `origClientOrderId` must be sent.\n- For some historical orders `cummulativeQuoteQty` will be < 0, meaning the data is not available at this time.\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "isIsolated",
            "in": "query",
            "description": "* `TRUE` - For isolated margin\n* `FALSE` - Default, not for isolated margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "TRUE",
                "FALSE"
              ]
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "origClientOrderId",
            "in": "query",
            "description": "Order id from client",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Interest History, response in descending order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/marginOrderDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Margin"
        ],
        "summary": "Margin Account New Order (TRADE)",
        "description": "Post a new order for margin account.\n\nWeight(UID): 6",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "isIsolated",
            "in": "query",
            "description": "* `TRUE` - For isolated margin\n* `FALSE` - Default, not for isolated margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "TRUE",
                "FALSE"
              ]
            }
          },
          {
            "name": "side",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SELL",
              "enum": [
                "SELL",
                "BUY"
              ]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Order type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "LIMIT",
                "MARKET",
                "STOP_LOSS",
                "STOP_LOSS_LIMIT",
                "TAKE_PROFIT",
                "TAKE_PROFIT_LIMIT",
                "LIMIT_MAKER"
              ]
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "quoteOrderQty",
            "in": "query",
            "description": "Quote quantity",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "price",
            "in": "query",
            "description": "Order price",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "stopPrice",
            "in": "query",
            "description": "Used with STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, and TAKE_PROFIT_LIMIT orders.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 20.01
            }
          },
          {
            "name": "newClientOrderId",
            "in": "query",
            "description": "Used to uniquely identify this cancel. Automatically generated by default",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "icebergQty",
            "in": "query",
            "description": "Used with LIMIT, STOP_LOSS_LIMIT, and TAKE_PROFIT_LIMIT to create an iceberg order.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "newOrderRespType",
            "in": "query",
            "description": "Set the response JSON.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ACK",
                "RESULT",
                "FULL"
              ]
            }
          },
          {
            "name": "sideEffectType",
            "in": "query",
            "description": "Default `NO_SIDE_EFFECT`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "NO_SIDE_EFFECT",
                "MARGIN_BUY",
                "AUTO_REPAY"
              ]
            }
          },
          {
            "name": "timeInForce",
            "in": "query",
            "description": "Order time in force",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "GTC",
                "IOC",
                "FOK"
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Margin order info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_23"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Margin"
        ],
        "summary": "Margin Account Cancel Order (TRADE)",
        "description": "Cancel an active order for margin account.\n\nEither `orderId` or `origClientOrderId` must be sent.\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "isIsolated",
            "in": "query",
            "description": "* `TRUE` - For isolated margin\n* `FALSE` - Default, not for isolated margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "TRUE",
                "FALSE"
              ]
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "origClientOrderId",
            "in": "query",
            "description": "Order id from client",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newClientOrderId",
            "in": "query",
            "description": "Used to uniquely identify this cancel. Automatically generated by default",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cancelled margin order details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/marginOrder"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/interestHistory": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Get Interest History (USER_DATA)",
        "description": "- Response in descending order\n- If `isolatedSymbol` is not sent, crossed margin data will be returned\n- Set `archived` to `true` to query data from 6 months ago\n- `type` in response has 4 enums:\n  - `PERIODIC` interest charged per hour\n  - `ON_BORROW` first interest charged on borrow\n  - `PERIODIC_CONVERTED` interest charged per hour converted into BNB\n  - `ON_BORROW_CONVERTED` first interest charged on borrow converted into BNB\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "isolatedSymbol",
            "in": "query",
            "description": "Isolated symbol",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Default: false. Set to true for archived data from 6 months ago",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Interest History, response in descending order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_24"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/forceLiquidationRec": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Get Force Liquidation Record (USER_DATA)",
        "description": "- Response in descending order\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "isolatedSymbol",
            "in": "query",
            "description": "Isolated symbol",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Force Liquidation History, response in descending order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_25"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/account": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Cross Margin Account Details (USER_DATA)",
        "description": "Weight(IP): 10",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Margin account details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_26"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/openOrders": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Margin Account's Open Orders (USER_DATA)",
        "description": "- If the `symbol` is not sent, orders for all symbols will be returned in an array.\n- When all symbols are returned, the number of requests counted against the rate limiter is equal to the number of symbols currently trading on the exchange\n- If isIsolated =\"TRUE\", symbol must be sent.\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "isIsolated",
            "in": "query",
            "description": "* `TRUE` - For isolated margin\n* `FALSE` - Default, not for isolated margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "TRUE",
                "FALSE"
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Margin open orders list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/marginOrderDetail"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Margin"
        ],
        "summary": "Margin Account Cancel all Open Orders on a Symbol (TRADE)",
        "description": "- Cancels all active orders on a symbol for margin account.\n- This includes OCO orders.\n\nWeight(IP): 1\n",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "isIsolated",
            "in": "query",
            "description": "* `TRUE` - For isolated margin\n* `FALSE` - Default, not for isolated margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "TRUE",
                "FALSE"
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cancelled margin orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/canceledMarginOrderDetail"
                      },
                      {
                        "$ref": "#/components/schemas/marginOcoOrder"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/allOrders": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Margin Account's All Orders (USER_DATA)",
        "description": "- If `orderId` is set, it will get orders >= that orderId. Otherwise most recent orders are returned.\n- For some historical orders `cummulativeQuoteQty` will be < 0, meaning the data is not available at this time.\n\nWeight(IP): 200\n\nRequest Limit: 60 times/min per IP",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "isIsolated",
            "in": "query",
            "description": "* `TRUE` - For isolated margin\n* `FALSE` - Default, not for isolated margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "TRUE",
                "FALSE"
              ]
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Margin order list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/marginOrderDetail"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/order/oco": {
      "post": {
        "tags": [
          "Margin"
        ],
        "summary": "Margin Account New OCO (TRADE)",
        "description": "Send in a new OCO for a margin account\n\n- Price Restrictions:\n  - SELL: Limit Price > Last Price > Stop Price\n  - BUY: Limit Price < Last Price < Stop Price\n- Quantity Restrictions:\n  - Both legs must have the same quantity\n  - ICEBERG quantities however do not have to be the same.\n- Order Rate Limit\n  - OCO counts as 2 orders against the order rate limit.\n\nWeight(UID): 6",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "isIsolated",
            "in": "query",
            "description": "* `TRUE` - For isolated margin\n* `FALSE` - Default, not for isolated margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "TRUE",
                "FALSE"
              ]
            }
          },
          {
            "name": "listClientOrderId",
            "in": "query",
            "description": "A unique Id for the entire orderList",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "side",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SELL",
              "enum": [
                "SELL",
                "BUY"
              ]
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "limitClientOrderId",
            "in": "query",
            "description": "A unique Id for the limit order",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price",
            "in": "query",
            "description": "Order price",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "limitIcebergQty",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "stopClientOrderId",
            "in": "query",
            "description": "A unique Id for the stop loss/stop loss limit leg",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stopPrice",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "stopLimitPrice",
            "in": "query",
            "description": "If provided, stopLimitTimeInForce is required.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "stopIcebergQty",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "stopLimitTimeInForce",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "GTC",
                "FOK",
                "IOC"
              ]
            }
          },
          {
            "name": "newOrderRespType",
            "in": "query",
            "description": "Set the response JSON.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ACK",
                "RESULT",
                "FULL"
              ]
            }
          },
          {
            "name": "sideEffectType",
            "in": "query",
            "description": "Default `NO_SIDE_EFFECT`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "NO_SIDE_EFFECT",
                "MARGIN_BUY",
                "AUTO_REPAY"
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New Margin OCO details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_27"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/orderList": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Margin Account's OCO (USER_DATA)",
        "description": "Retrieves a specific OCO based on provided optional parameters\n\n- Either `orderListId` or `origClientOrderId` must be provided\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "isIsolated",
            "in": "query",
            "description": "* `TRUE` - For isolated margin\n* `FALSE` - Default, not for isolated margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "TRUE",
                "FALSE"
              ]
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Mandatory for isolated margin, not supported for cross margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderListId",
            "in": "query",
            "description": "Order list id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "origClientOrderId",
            "in": "query",
            "description": "Order id from client",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Margin OCO details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_28"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Margin"
        ],
        "summary": "Margin Account Cancel OCO (TRADE)",
        "description": "Cancel an entire Order List for a margin account\n\n- Canceling an individual leg will cancel the entire OCO\n- Either `orderListId` or `listClientOrderId` must be provided\n\nWeight(UID): 1",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "isIsolated",
            "in": "query",
            "description": "* `TRUE` - For isolated margin\n* `FALSE` - Default, not for isolated margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "TRUE",
                "FALSE"
              ]
            }
          },
          {
            "name": "orderListId",
            "in": "query",
            "description": "Order list id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "listClientOrderId",
            "in": "query",
            "description": "A unique Id for the entire orderList",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newClientOrderId",
            "in": "query",
            "description": "Used to uniquely identify this cancel. Automatically generated by default",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Margin OCO details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/marginOcoOrder"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/allOrderList": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Margin Account's all OCO (USER_DATA)",
        "description": "Retrieves all OCO for a specific margin account based on provided optional parameters\n\nWeight(IP): 200",
        "parameters": [
          {
            "name": "isIsolated",
            "in": "query",
            "description": "* `TRUE` - For isolated margin\n* `FALSE` - Default, not for isolated margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "TRUE",
                "FALSE"
              ]
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Mandatory for isolated margin, not supported for cross margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromId",
            "in": "query",
            "description": "If supplied, neither `startTime` or `endTime` can be provided",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default Value: 500; Max Value: 1000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Margin OCO orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_12"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/openOrderList": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Margin Account's Open OCO (USER_DATA)",
        "description": "Weight(IP): 10",
        "parameters": [
          {
            "name": "isIsolated",
            "in": "query",
            "description": "* `TRUE` - For isolated margin\n* `FALSE` - Default, not for isolated margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "TRUE",
                "FALSE"
              ]
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Mandatory for isolated margin, not supported for cross margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Open Margin OCO orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_29"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/myTrades": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Margin Account's Trade List (USER_DATA)",
        "description": "- If `fromId` is set, it will get orders >= that `fromId`. Otherwise most recent trades are returned.\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "isIsolated",
            "in": "query",
            "description": "* `TRUE` - For isolated margin\n* `FALSE` - Default, not for isolated margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "TRUE",
                "FALSE"
              ]
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fromId",
            "in": "query",
            "description": "Trade id to fetch from. Default gets most recent trades.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of margin trades",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/marginTrade"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/maxBorrowable": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Max Borrow (USER_DATA)",
        "description": "- If `isolatedSymbol` is not sent, crossed margin data will be sent.\n- `borrowLimit` is also available from https://www.binance.com/en/margin-fee\n\nWeight(IP): 50",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "isolatedSymbol",
            "in": "query",
            "description": "Isolated symbol",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details on max borrow amount",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_30"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/maxTransferable": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Max Transfer-Out Amount (USER_DATA)",
        "description": "- If `isolatedSymbol` is not sent, crossed margin data will be sent.\n\nWeight(IP): 50",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "isolatedSymbol",
            "in": "query",
            "description": "Isolated symbol",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details on max transferable amount",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_31"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/tradeCoeff": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Get Summary of Margin account (USER_DATA)",
        "description": "Get personal margin level information\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Email Address",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "me@email.com"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Summary of Margin Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_32"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/isolated/transfer": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Get Isolated Margin Transfer History (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "transFrom",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SPOT",
              "enum": [
                "SPOT",
                "ISOLATED_MARGIN"
              ]
            }
          },
          {
            "name": "transTo",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "ISOLATED_MARGIN",
              "enum": [
                "SPOT",
                "ISOLATED_MARGIN"
              ]
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Isolated Margin Transfer History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/marginTransferDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Margin"
        ],
        "summary": "Isolated Margin Account Transfer (MARGIN)",
        "description": "Weight(UID): 600",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "transFrom",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SPOT",
              "enum": [
                "SPOT",
                "ISOLATED_MARGIN"
              ]
            }
          },
          {
            "name": "transTo",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "ISOLATED_MARGIN",
              "enum": [
                "SPOT",
                "ISOLATED_MARGIN"
              ]
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "tranId": 100000001
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/isolated/account": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Isolated Margin Account Info (USER_DATA)",
        "description": "- If \"symbols\" is not sent, all isolated assets will be returned.\n- If \"symbols\" is sent, only the isolated assets of the sent symbols will be returned.\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "symbols",
            "in": "query",
            "description": "Max 5 symbols can be sent; separated by ','",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTCUSDT,BNBUSDT,ADAUSDT"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Isolated Margin Account Info when \"symbols\" is not sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/isolatedMarginAccountInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Margin"
        ],
        "summary": "Enable Isolated Margin Account (TRADE)",
        "description": "Enable isolated margin account for a specific symbol.\n\nWeight(UID): 300",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Isolated Margin Account status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_33"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Margin"
        ],
        "summary": "Disable Isolated Margin Account (TRADE)",
        "description": "Disable isolated margin account for a specific symbol. Each trading pair can only be deactivated once every 24 hours .\n\nWeight(UID): 300",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Isolated Margin Account status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_33"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/isolated/accountLimit": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Enabled Isolated Margin Account Limit (USER_DATA)",
        "description": "Query enabled isolated margin account limit.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Number of enabled Isolated Margin Account and its limit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_34"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/isolated/pair": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Isolated Margin Symbol (USER_DATA)",
        "description": "Weight(IP): 10",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Isolated Margin Symbol",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_35"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/isolated/allPairs": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Get All Isolated Margin Symbol(USER_DATA)",
        "description": "Weight(IP): 10",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All Isolated Margin Symbols",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_35"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/bnbBurn": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Get All Isolated Margin Symbol(USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status on BNB to pay for trading fees",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bnbBurnStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Margin"
        ],
        "summary": "Toggle BNB Burn On Spot Trade And Margin Interest (USER_DATA)",
        "description": "- \"spotBNBBurn\" and \"interestBNBBurn\" should be sent at least one.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "spotBNBBurn",
            "in": "query",
            "description": "Determines whether to use BNB to pay for trading fees on SPOT",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "true",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "interestBNBBurn",
            "in": "query",
            "description": "Determines whether to use BNB to pay for margin loan's interest",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "false",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status on BNB to pay for trading fees",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bnbBurnStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/interestRateHistory": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Margin Interest Rate History (USER_DATA)",
        "description": "The max interval between startTime and endTime is 30 days.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "vipLevel",
            "in": "query",
            "description": "Defaults to user's vip level",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Margin Interest Rate History",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_36"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/crossMarginData": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Cross Margin Fee Data (USER_DATA)",
        "description": "Get cross margin fee data collection with any vip level or user's current specific data as https://www.binance.com/en/margin-fee\n\nWeight(IP): 1 when coin is specified; 5 when the coin parameter is omitted",
        "parameters": [
          {
            "name": "vipLevel",
            "in": "query",
            "description": "Defaults to user's vip level",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "coin",
            "in": "query",
            "description": "Coin name",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cross Margin Fee Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_37"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/isolatedMarginData": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Isolated Margin Fee Data (USER_DATA)",
        "description": "Get isolated margin fee data collection with any vip level or user's current specific data as https://www.binance.com/en/margin-fee\n\nWeight(IP): 1 when a single is specified; 10 when the symbol parameter is omitted",
        "parameters": [
          {
            "name": "vipLevel",
            "in": "query",
            "description": "Defaults to user's vip level",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Isolated Margin Fee Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_38"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/isolatedMarginTier": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Isolated Margin Tier Data (USER_DATA)",
        "description": "Get isolated margin tier data collection with any tier as https://www.binance.com/en/margin-data\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "tier",
            "in": "query",
            "description": "All margin tier data will be returned if tier is omitted",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Isolated Margin Tier Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_39"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/rateLimit/order": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Query Current Margin Order Count Usage (TRADE)",
        "description": "Displays the user's current margin order count usage for all intervals.\n\nWeight(IP): 20",
        "parameters": [
          {
            "name": "isIsolated",
            "in": "query",
            "description": "* `TRUE` - For isolated margin\n* `FALSE` - Default, not for isolated margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "isolated symbol, mandatory for isolated margin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usage.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_40"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/margin/dribblet": {
      "get": {
        "tags": [
          "Margin"
        ],
        "summary": "Margin Dustlog (USER_DATA)",
        "description": "Query the historical information of user's margin account small-value asset conversion BNB.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dust Log",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/system/status": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "System Status (System)",
        "description": "Fetch system status.\n\nWeight(IP): 1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_42"
                }
              }
            }
          }
        }
      }
    },
    "/sapi/v1/capital/config/getall": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "All Coins' Information (USER_DATA)",
        "description": "Get information of coins (available for deposit and withdraw) for user.\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All coins details information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_43"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/accountSnapshot": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Daily Account Snapshot (USER_DATA)",
        "description": "- The query time period must be less than 30 days\n- Support query within the last one month only\n- If startTimeand endTime not sent, return records of the last 7 days by default\n\nWeight(IP): 2400",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "SPOT",
                "MARGIN",
                "FUTURES"
              ]
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 30,
              "minimum": 7,
              "type": "integer",
              "format": "int32",
              "default": 7
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account Snapshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_44"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/account/disableFastWithdrawSwitch": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Disable Fast Withdraw Switch (USER_DATA)",
        "description": "- This request will disable fastwithdraw switch under your account.\n- You need to enable \"trade\" option for the api key which requests this endpoint.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/account/enableFastWithdrawSwitch": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Enable Fast Withdraw Switch (USER_DATA)",
        "description": "- This request will enable fastwithdraw switch under your account. You need to enable \"trade\" option for the api key which requests this endpoint.\n- When Fast Withdraw Switch is on, transferring funds to a Binance account will be done instantly. There is no on-chain transaction, no transaction ID and no withdrawal fee.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/capital/withdraw/apply": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Withdraw (USER_DATA)",
        "description": "Submit a withdraw request.\n\n- If `network` not send, return with default network of the coin.\n- You can get `network` and `isDefault` in `networkList` of a coin in the response of `Get /sapi/v1/capital/config/getall (HMAC SHA256)`.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "coin",
            "in": "query",
            "description": "Coin name",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "withdrawOrderId",
            "in": "query",
            "description": "Client id for withdraw",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network",
            "in": "query",
            "description": "Get the value from `GET /sapi/v1/capital/config/getall`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressTag",
            "in": "query",
            "description": "Secondary address identifier for coins like XRP,XMR etc.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "transactionFeeFlag",
            "in": "query",
            "description": "When making internal transfer\n- `true` ->  returning the fee to the destination account;\n- `false` -> returning the fee back to the departure account.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "walletType",
            "in": "query",
            "description": "The wallet type for withdraw，0-Spot wallet, 1- Funding wallet. Default is Spot wallet",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transafer Id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_45"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/capital/deposit/hisrec": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Deposit History（supporting network） (USER_DATA)",
        "description": "Fetch deposit history.\n\n- Please notice the default `startTime` and `endTime` to make sure that time interval is within 0-90 days.\n- If both `startTime` and `endTime` are sent, time between `startTime` and `endTime` must be less than 90 days.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "coin",
            "in": "query",
            "description": "Coin name",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "* `0` - pending\n* `6` - credited but cannot withdraw\n* `1` - success",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                0,
                6,
                1
              ]
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of deposits",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_46"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/capital/withdraw/history": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Withdraw History (supporting network) (USER_DATA)",
        "description": "Fetch withdraw history.\n\n- `network` may not be in the response for old withdraw.\n- Please notice the default `startTime` and `endTime` to make sure that time interval is within 0-90 days.\n- If both `startTime` and `endTime` are sent, time between `startTime` and `endTime` must be less than 90 days\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "coin",
            "in": "query",
            "description": "Coin name",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "withdrawOrderId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "* `0` - Email Sent\n* `1` - Cancelled\n* `2` - Awaiting Approval\n* `3` - Rejected\n* `4` - Processing\n* `5` - Failure\n* `6` - Completed",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of withdraw history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_47"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/capital/deposit/address": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Deposit Address (supporting network) (USER_DATA)",
        "description": "Fetch deposit address with network.\n\n- If network is not send, return with default network of the coin.\n- You can get network and isDefault in networkList in the response of Get /sapi/v1/capital/config/getall (HMAC SHA256).\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "coin",
            "in": "query",
            "description": "Coin name",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "network",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "ETH"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deposit address info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_48"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/account/status": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Account Status (USER_DATA)",
        "description": "Fetch account status detail.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_49"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/account/apiTradingStatus": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Account API Trading Status (USER_DATA)",
        "description": "Fetch account API trading status with details.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account API trading status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_50"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/asset/dribblet": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "DustLog(USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dust log records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_51"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/asset/dust-btc": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Get Assets That Can Be Converted Into BNB (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account assets available to be converted to BNB",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_52"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/asset/dust": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Dust Transfer (USER_DATA)",
        "description": "Convert dust assets to BNB.\n\nWeight(UID): 10",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "description": "The asset being converted. For example, asset=BTC&asset=USDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dust log records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_53"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/asset/assetDividend": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Asset Dividend Record (USER_DATA)",
        "description": "Query asset Dividend Record\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 500,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Records of asset devidend",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_54"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/asset/assetDetail": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Asset Detail (USER_DATA)",
        "description": "Fetch details of assets supported on Binance.\n\n- Please get network and other deposit or withdraw details from `GET /sapi/v1/capital/config/getall`.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_55"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/asset/tradeFee": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Trade Fee (USER_DATA)",
        "description": "Fetch trade fee\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trade fee info per symbol",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_56"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/asset/transfer": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Query User Universal Transfer History (USER_DATA)",
        "description": "- `fromSymbol` must be sent when type are ISOLATEDMARGIN_MARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN\n- `toSymbol` must be sent when type are MARGIN_ISOLATEDMARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN\n- Support query within the last 6 months only\n- If `startTime` and `endTime` not sent, return records of the last 7 days by default\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Universal transfer type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "MAIN_C2C",
              "enum": [
                "MAIN_C2C",
                "MAIN_UMFUTURE",
                "MAIN_CMFUTURE",
                "MAIN_MARGIN",
                "MAIN_MINING",
                "C2C_MAIN",
                "C2C_UMFUTURE",
                "C2C_MINING",
                "C2C_MARGIN",
                "UMFUTURE_MAIN",
                "UMFUTURE_C2C",
                "UMFUTURE_MARGIN",
                "CMFUTURE_MAIN",
                "CMFUTURE_MARGIN",
                "MARGIN_MAIN",
                "MARGIN_UMFUTURE",
                "MARGIN_CMFUTURE",
                "MARGIN_MINING",
                "MARGIN_C2C",
                "MINING_MAIN",
                "MINING_UMFUTURE",
                "MINING_C2C",
                "MINING_MARGIN",
                "MAIN_PAY",
                "PAY_MAIN",
                "ISOLATEDMARGIN_MARGIN",
                "MARGIN_ISOLATEDMARGIN",
                "ISOLATEDMARGIN_ISOLATEDMARGIN"
              ]
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "fromSymbol",
            "in": "query",
            "description": "Must be sent when type are ISOLATEDMARGIN_MARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "toSymbol",
            "in": "query",
            "description": "Must be sent when type are MARGIN_ISOLATEDMARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Universal transfer history",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_57"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "User Universal Transfer (USER_DATA)",
        "description": "You need to enable `Permits Universal Transfer` option for the api key which requests this endpoint.\n\n- `fromSymbol` must be sent when type are ISOLATEDMARGIN_MARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN\n- `toSymbol` must be sent when type are MARGIN_ISOLATEDMARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN\n\nENUM of transfer types:\n- MAIN_UMFUTURE Spot account transfer to USDⓈ-M Futures account\n- MAIN_CMFUTURE Spot account transfer to COIN-M Futures account\n- MAIN_MARGIN Spot account transfer to Margin（cross）account\n- UMFUTURE_MAIN USDⓈ-M Futures account transfer to Spot account\n- UMFUTURE_MARGIN USDⓈ-M Futures account transfer to Margin（cross）account\n- CMFUTURE_MAIN COIN-M Futures account transfer to Spot account\n- CMFUTURE_MARGIN COIN-M Futures account transfer to Margin(cross) account\n- MARGIN_MAIN Margin（cross）account transfer to Spot account\n- MARGIN_UMFUTURE Margin（cross）account transfer to USDⓈ-M Futures\n- MARGIN_CMFUTURE Margin（cross）account transfer to COIN-M Futures\n- ISOLATEDMARGIN_MARGIN Isolated margin account transfer to Margin(cross) account\n- MARGIN_ISOLATEDMARGIN Margin(cross) account transfer to Isolated margin account\n- ISOLATEDMARGIN_ISOLATEDMARGIN Isolated margin account transfer to Isolated margin account\n- MAIN_FUNDING Spot account transfer to Funding account\n- FUNDING_MAIN Funding account transfer to Spot account\n- FUNDING_UMFUTURE Funding account transfer to UMFUTURE account\n- UMFUTURE_FUNDING UMFUTURE account transfer to Funding account\n- MARGIN_FUNDING MARGIN account transfer to Funding account\n- FUNDING_MARGIN Funding account transfer to Margin account\n- FUNDING_CMFUTURE Funding account transfer to CMFUTURE account\n- CMFUTURE_FUNDING CMFUTURE account transfer to Funding account\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Universal transfer type",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "MAIN_C2C",
              "enum": [
                "MAIN_C2C",
                "MAIN_UMFUTURE",
                "MAIN_CMFUTURE",
                "MAIN_MARGIN",
                "MAIN_MINING",
                "C2C_MAIN",
                "C2C_UMFUTURE",
                "C2C_MINING",
                "C2C_MARGIN",
                "UMFUTURE_MAIN",
                "UMFUTURE_C2C",
                "UMFUTURE_MARGIN",
                "CMFUTURE_MAIN",
                "CMFUTURE_MARGIN",
                "MARGIN_MAIN",
                "MARGIN_UMFUTURE",
                "MARGIN_CMFUTURE",
                "MARGIN_MINING",
                "MARGIN_C2C",
                "MINING_MAIN",
                "MINING_UMFUTURE",
                "MINING_C2C",
                "MINING_MARGIN",
                "MAIN_PAY",
                "PAY_MAIN",
                "ISOLATEDMARGIN_MARGIN",
                "MARGIN_ISOLATEDMARGIN",
                "ISOLATEDMARGIN_ISOLATEDMARGIN"
              ]
            }
          },
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "fromSymbol",
            "in": "query",
            "description": "Must be sent when type are ISOLATEDMARGIN_MARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "toSymbol",
            "in": "query",
            "description": "Must be sent when type are MARGIN_ISOLATEDMARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transfer id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_58"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/asset/get-funding-asset": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Funding Wallet (USER_DATA)",
        "description": "- Currently supports querying the following business assets：Binance Pay, Binance Card, Binance Gift Card, Stock Token\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "needBtcValuation",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Funding asset detail",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_59"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v3/asset/getUserAsset": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "User Asset (USER_DATA)",
        "description": "Get user assets, just for positive data.\n\nWeight(IP): 5",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "needBtcValuation",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User assets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_60"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/asset/convert-transfer": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Convert Transfer (USER_DATA)",
        "description": "Convert transfer, convert between BUSD and stablecoins.\nIf the clientId has been used before, will not do the convert transfer, the original transfer will be returned.\n\nWeight(UID): 5",
        "parameters": [
          {
            "name": "clientTranId",
            "in": "query",
            "description": "The unique flag, the min length is 20",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "targetAsset",
            "in": "query",
            "description": "Target asset you want to convert",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conversion Information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_61"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/asset/convert-transfer/queryByPage": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Query Convert Transfer (USER_DATA)",
        "description": "Weight(UID): 5",
        "parameters": [
          {
            "name": "tranId",
            "in": "query",
            "description": "The transaction id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 118263615991
            }
          },
          {
            "name": "asset",
            "in": "query",
            "description": "If it is blank, we will match deducted asset and target asset.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "accountType",
            "in": "query",
            "description": "MAIN: main account. CARD: funding account. If it is blank, we will query spot and card wallet, otherwise, we just query the corresponding wallet",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "MAIN",
                "CARD"
              ]
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Query Convert Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_62"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/asset/ledger-transfer/cloud-mining/queryByPage": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Get Cloud-Mining payment and refund history (USER_DATA)",
        "description": "The query of Cloud-Mining payment and refund history\n\nWeight(UID): 600",
        "parameters": [
          {
            "name": "tranId",
            "in": "query",
            "description": "The transaction id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 118263615991
            }
          },
          {
            "name": "clientTranId",
            "in": "query",
            "description": "The unique flag",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset",
            "in": "query",
            "description": "If it is blank, we will query all assets",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cloud Mining Payment and Refund History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_63"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/account/apiRestrictions": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Get API Key Permission (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API Key permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_64"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/capital/contract/convertible-coins": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Query auto-converting stable coins (USER_DATA)",
        "description": "Get a user's auto-conversion settings in deposit/withdrawal\n\nWeight(UID): 600'",
        "responses": {
          "200": {
            "description": "User's auto-conversion settings i",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_65"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Switch on/off BUSD and stable coins conversion (USER_DATA) (USER_DATA)",
        "description": "User can use it to turn on or turn off the BUSD auto-conversion from/to a specific stable coin.\n\nWeight(UID): 600'",
        "parameters": [
          {
            "name": "coin",
            "in": "query",
            "description": "Must be USDC, USDP or TUSD",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enable",
            "in": "query",
            "description": "true: turn on the auto-conversion. false: turn off the auto-conversion",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/virtualSubAccount": {
      "post": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Create a Virtual Sub-account(For Master Account)",
        "description": "- This request will generate a virtual sub account under your master account.\n- You need to enable \"trade\" option for the api key which requests this endpoint.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "subAccountString",
            "in": "query",
            "description": "Please input a string. We will create a virtual email using that string for you to register",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the created virtual email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_66"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/list": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Query Sub-account List (For Master Account)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isFreeze",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Default 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 1; max 200",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of sub-accounts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_67"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/sub/transfer/history": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Sub-account Spot Asset Transfer History (For Master Account)",
        "description": "- fromEmail and toEmail cannot be sent at the same time.\n- Return fromEmail equal master account email by default.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "fromEmail",
            "in": "query",
            "description": "Sub-account email",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toEmail",
            "in": "query",
            "description": "Sub-account email",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Default 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sub-account Spot Asset Transfer History",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_68"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/futures/internalTransfer": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Sub-account Futures Asset Transfer History (For Master Account)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "futuresType",
            "in": "query",
            "description": "1:USDT-margined Futures, 2: Coin-margined Futures",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Default 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default value: 50, Max value: 500",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sub-account Futures Asset Transfer History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_69"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Sub-account Futures Asset Transfer (For Master Account)",
        "description": "- Master account can transfer max 2000 times a minute\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "fromEmail",
            "in": "query",
            "description": "Sender email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toEmail",
            "in": "query",
            "description": "Recipient email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "futuresType",
            "in": "query",
            "description": "1:USDT-margined Futures,2: Coin-margined Futures",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2
            }
          },
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Futures Asset Transfer Info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_70"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v3/sub-account/assets": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Sub-account Assets (For Master Account)",
        "description": "Fetch sub-account assets\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of assets balances",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_71"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/spotSummary": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Sub-account Spot Assets Summary (For Master Account)",
        "description": "Get BTC valued asset summary of subaccounts.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Default 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:20",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Summary of Sub-account Spot Assets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_72"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/capital/deposit/subAddress": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Sub-account Spot Assets Summary (For Master Account)",
        "description": "Fetch sub-account deposit address\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "coin",
            "in": "query",
            "description": "Coin name",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "network",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deposit address info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_73"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/capital/deposit/subHisrec": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Sub-account Deposit History (For Master Account)",
        "description": "Fetch sub-account deposit history\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "coin",
            "in": "query",
            "description": "Coin name",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "0(0:pending,6: credited but cannot withdraw, 1:success)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sub-account deposit history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_74"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/status": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Sub-account's Status on Margin/Futures (For Master Account)",
        "description": "- If no `email` sent, all sub-accounts' information will be returned.\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status on Margin/Futures",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_75"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/margin/enable": {
      "post": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Enable Margin for Sub-account (For Master Account)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Margin status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_76"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/margin/account": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Detail on Sub-account's Margin Account (For Master Account)",
        "description": "Weight(IP): 10",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Margin sub-account details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_77"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/margin/accountSummary": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Summary of Sub-account's Margin Account (For Master Account)",
        "description": "Weight(IP): 10",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Margin sub-account details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_78"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/futures/enable": {
      "post": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Enable Futures for Sub-account (For Master Account)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Futures status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_79"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/futures/account": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Detail on Sub-account's Futures Account (For Master Account)",
        "description": "Weight(IP): 10",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Futures account details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_80"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/futures/accountSummary": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Summary of Sub-account's Futures Account (For Master Account)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Futures account summary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_81"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/futures/positionRisk": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Futures Position-Risk of Sub-account (For Master Account)",
        "description": "Weight(IP): 10",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Futures account summary",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_82"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/futures/transfer": {
      "post": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Transfer for Sub-account (For Master Account)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "* `1` - transfer from subaccount's spot account to its USDT-margined futures account\n* `2` - transfer from subaccount's USDT-margined futures account to its spot account\n* `3` - transfer from subaccount's spot account to its COIN-margined futures account\n* `4` - transfer from subaccount's COIN-margined futures account to its spot account",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transfer id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_83"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/margin/transfer": {
      "post": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Margin Transfer for Sub-account (For Master Account)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "* `1` - transfer from subaccount's spot account to margin account\n* `2` - transfer from subaccount's margin account to its spot account",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                1,
                2
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transfer id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_83"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/transfer/subToSub": {
      "post": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Transfer to Sub-account of Same Master (For Sub-account)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "toEmail",
            "in": "query",
            "description": "Recipient email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transfer id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_83"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/transfer/subToMaster": {
      "post": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Transfer to Master (For Sub-account)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transfer id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_83"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/transfer/subUserHistory": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Sub-account Transfer History (For Sub-account)",
        "description": "- If `type` is not sent, the records of type 2: transfer out will be returned by default.\n- If `startTime` and `endTime` are not sent, the recent 30-day data will be returned.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "* `1` - transfer in\n* `2` - transfer out",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                1,
                2
              ]
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transfer id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_84"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/universalTransfer": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Universal Transfer History (For Master Account)",
        "description": "- `fromEmail` and `toEmail` cannot be sent at the same time.\n- Return `fromEmail` equal master account email by default.\n- The query time period must be less then 30 days.\n- If startTime and endTime not sent, return records of the last 30 days by default.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "fromEmail",
            "in": "query",
            "description": "Sub-account email",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toEmail",
            "in": "query",
            "description": "Sub-account email",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientTranId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Default 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500, Max 500",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transfer History",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_85"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Universal Transfer (For Master Account)",
        "description": "- You need to enable \"internal transfer\" option for the api key which requests this endpoint.\n- Transfer from master account by default if fromEmail is not sent.\n- Transfer to master account by default if toEmail is not sent.\n- Supported transfer scenarios:\n  - Master account SPOT transfer to sub-account SPOT,USDT_FUTURE,COIN_FUTURE,MARGIN(Cross),ISOLATED_MARGIN\n  - Sub-account SPOT,USDT_FUTURE,COIN_FUTURE,MARGIN(Cross),ISOLATED_MARGIN transfer to master account SPOT\n  - Transfer between two sub-account SPOT accounts\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "fromEmail",
            "in": "query",
            "description": "Sub-account email",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toEmail",
            "in": "query",
            "description": "Sub-account email",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromAccountType",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "SPOT",
                "USDT_FUTURE",
                "COIN_FUTURE",
                "MARGIN",
                "ISOLATED_MARGIN"
              ]
            }
          },
          {
            "name": "toAccountType",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "SPOT",
                "USDT_FUTURE",
                "COIN_FUTURE",
                "MARGIN",
                "ISOLATED_MARGIN"
              ]
            }
          },
          {
            "name": "clientTranId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Only supported under ISOLATED_MARGIN type",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transfer id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_86"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v2/sub-account/futures/account": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Detail on Sub-account's Futures Account V2 (For Master Account)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "futuresType",
            "in": "query",
            "description": "* `1` - USDT Margined Futures\n* `2` - COIN Margined Futures",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                1,
                2
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "USDT or COIN Margined Futures Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_87"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v2/sub-account/futures/accountSummary": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Summary of Sub-account's Futures Account V2 (For Master Account)",
        "description": "Weight(IP): 10",
        "parameters": [
          {
            "name": "futuresType",
            "in": "query",
            "description": "* `1` - USDT Margined Futures\n* `2` - COIN Margined Futures",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                1,
                2
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Default 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 10, Max 20",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "USDT or COIN Margined Futures Summary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_88"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v2/sub-account/futures/positionRisk": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Futures Position-Risk of Sub-account V2 (For Master Account)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "futuresType",
            "in": "query",
            "description": "* `1` - USDT Margined Futures\n* `2` - COIN Margined Futures",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                1,
                2
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "USDT or COIN Margined Futures Position Risk",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_89"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/blvt/enable": {
      "post": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Enable Leverage Token for Sub-account (For Master Account)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enableBlvt",
            "in": "query",
            "description": "Only true for now",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BLVT status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_90"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/managed-subaccount/deposit": {
      "post": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Deposit assets into the managed sub-account（For Investor Master Account）",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "toEmail",
            "in": "query",
            "description": "Recipient email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transfer id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_91"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/managed-subaccount/asset": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Managed sub-account asset details（For Investor Master Account)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of asset details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_92"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/managed-subaccount/withdraw": {
      "post": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Withdrawl assets from the managed sub-account（For Investor Master Account)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "fromEmail",
            "in": "query",
            "description": "Sender email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "transferDate",
            "in": "query",
            "description": "Withdrawals is automatically occur on the transfer date(UTC0). If a date is not selected, the withdrawal occurs right now",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transfer id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_91"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/managed-subaccount/accountSnapshot": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Managed sub-account snapshot (For Investor Master Account)",
        "description": "- The query time period must be less then 30 days\n- Support query within the last one month only\n- If `startTime` and `endTime` not sent, return records of the last 7 days by default\n\nWeight(IP): 2400",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "\"SPOT\", \"MARGIN\"(cross), \"FUTURES\"(UM)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SPOT"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "min 7, max 30, default 7",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sub-account spot snapshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_93"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sapi/v1/sub-account/subAccountApi/ipRestriction": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Get IP Restriction for a Sub-account API Key (For Master Account)",
        "description": "Weight(UID): 3000",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subAccountApiKey",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "IP Restriction information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_94"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/subAccountApi/ipRestriction/ipList": {
      "delete": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Delete IP List for a Sub-account API Key (For Master Account)",
        "description": "Weight(UID): 3000",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subAccountApiKey",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ipAddress",
            "in": "query",
            "description": "Can be added in batches, separated by commas",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "thirdPartyName",
            "in": "query",
            "description": "third party IP list name",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete IP information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_95"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/sub-account/apiRestrictions/ipRestriction/thirdPartyList": {
      "get": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Query Sub-Account API key Third Party IP whitelist (For Master Account)",
        "description": "Get Third Party IP whitelist for API key\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Third Party IP whitelist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_96"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v2/sub-account/subAccountApi/ipRestriction": {
      "post": {
        "tags": [
          "Sub-Account"
        ],
        "summary": "Update IP Restriction for Sub-Account API key (For Master Account)",
        "description": "Update IP Restriction for Sub-Account API key\n\nWeight(UID): 3000",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Sub-account email",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subAccountApiKey",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "IP Restriction status. 1 = IP Unrestricted. 2 = Restrict access to trusted IPs only. 3 = Restrict access to users' trusted third party IPs only",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "thirdPartyName",
            "in": "query",
            "description": "third party IP list name",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update IP Restriction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_97"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/v3/userDataStream": {
      "put": {
        "tags": [
          "Stream"
        ],
        "summary": "Ping/Keep-alive a ListenKey (USER_STREAM)",
        "description": "Keepalive a user data stream to prevent a time out. User data streams will close after 60 minutes. It's recommended to send a ping about every 30 minutes.\n\nWeight: 1",
        "parameters": [
          {
            "name": "listenKey",
            "in": "query",
            "description": "User websocket listen key",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "pqia91ma19a5s61cv6a81va65sdf19v8a65a1a5s61cv6a81va65sdf19v8a65a1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Stream"
        ],
        "summary": "Create a ListenKey (USER_STREAM)",
        "description": "Start a new user data stream.\nThe stream will close after 60 minutes unless a keepalive is sent. If the account has an active `listenKey`, that `listenKey` will be returned and its validity will be extended for 60 minutes.\n\nWeight: 1",
        "responses": {
          "200": {
            "description": "Listen key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_98"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Stream"
        ],
        "summary": "Close a ListenKey (USER_STREAM)",
        "description": "Close out a user data stream.\n\nWeight: 1",
        "parameters": [
          {
            "name": "listenKey",
            "in": "query",
            "description": "User websocket listen key",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "pqia91ma19a5s61cv6a81va65sdf19v8a65a1a5s61cv6a81va65sdf19v8a65a1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/userDataStream": {
      "put": {
        "tags": [
          "Margin Stream"
        ],
        "summary": "Ping/Keep-alive a ListenKey (USER_STREAM)",
        "description": "Keepalive a user data stream to prevent a time out. User data streams will close after 60 minutes. It's recommended to send a ping about every 30 minutes.\n\nWeight: 1",
        "parameters": [
          {
            "name": "listenKey",
            "in": "query",
            "description": "User websocket listen key",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "pqia91ma19a5s61cv6a81va65sdf19v8a65a1a5s61cv6a81va65sdf19v8a65a1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Margin Stream"
        ],
        "summary": "Create a ListenKey (USER_STREAM)",
        "description": "Start a new user data stream.\nThe stream will close after 60 minutes unless a keepalive is sent. If the account has an active `listenKey`, that `listenKey` will be returned and its validity will be extended for 60 minutes.\n\nWeight: 1",
        "responses": {
          "200": {
            "description": "Margin listen key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_98"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Margin Stream"
        ],
        "summary": "Close a ListenKey (USER_STREAM)",
        "description": "Close out a user data stream.\n\nWeight: 1",
        "parameters": [
          {
            "name": "listenKey",
            "in": "query",
            "description": "User websocket listen key",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "pqia91ma19a5s61cv6a81va65sdf19v8a65a1a5s61cv6a81va65sdf19v8a65a1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/userDataStream/isolated": {
      "put": {
        "tags": [
          "Isolated Margin Stream"
        ],
        "summary": "Ping/Keep-alive a Listen Key (USER_STREAM)",
        "description": "Keepalive a user data stream to prevent a time out. User data streams will close after 60 minutes. It's recommended to send a ping about every 30 minutes.\n\nWeight: 1",
        "parameters": [
          {
            "name": "listenKey",
            "in": "query",
            "description": "User websocket listen key",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "pqia91ma19a5s61cv6a81va65sdf19v8a65a1a5s61cv6a81va65sdf19v8a65a1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Isolated Margin Stream"
        ],
        "summary": "Generate a Listen Key (USER_STREAM)",
        "description": "Start a new user data stream.\nThe stream will close after 60 minutes unless a keepalive is sent. If the account has an active `listenKey`, that `listenKey` will be returned and its validity will be extended for 60 minutes.\n\nWeight: 1",
        "responses": {
          "200": {
            "description": "Isolated margin listen key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_99"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Isolated Margin Stream"
        ],
        "summary": "Close a ListenKey (USER_STREAM)",
        "description": "Close out a user data stream.\n\nWeight: 1",
        "parameters": [
          {
            "name": "listenKey",
            "in": "query",
            "description": "User websocket listen key",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "pqia91ma19a5s61cv6a81va65sdf19v8a65a1a5s61cv6a81va65sdf19v8a65a1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/fiat/orders": {
      "get": {
        "tags": [
          "Fiat"
        ],
        "summary": "Fiat Deposit/Withdraw History (USER_DATA)",
        "description": "- If beginTime and endTime are not sent, the recent 30-day data will be returned.\n\nWeight(UID): 90000",
        "parameters": [
          {
            "name": "transactionType",
            "in": "query",
            "description": "* `0` - deposit\n* `1` - withdraw",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "0",
              "enum": [
                "0",
                "1"
              ]
            }
          },
          {
            "name": "beginTime",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1626144956000
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Default 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "rows",
            "in": "query",
            "description": "Default 100, max 500",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 300
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "History of deposit/withdraw orders",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_100"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/fiat/payments": {
      "get": {
        "tags": [
          "Fiat"
        ],
        "summary": "Fiat Payments History (USER_DATA)",
        "description": "- If beginTime and endTime are not sent, the recent 30-day data will be returned.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "transactionType",
            "in": "query",
            "description": "* `0` - deposit\n* `1` - withdraw",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "0",
              "enum": [
                "0",
                "1"
              ]
            }
          },
          {
            "name": "beginTime",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1626144956000
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Default 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "rows",
            "in": "query",
            "description": "Default 100, max 500",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 300
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "History of fiat payments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_101"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/lending/daily/product/list": {
      "get": {
        "tags": [
          "Savings"
        ],
        "summary": "Get Flexible Product List (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Default `ALL`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "SUBSCRIBABLE",
                "UNSUBSCRIBABLE"
              ]
            }
          },
          {
            "name": "featured",
            "in": "query",
            "description": "Default `ALL`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "TRUE"
              ]
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of flexible products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_102"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/lending/daily/userLeftQuota": {
      "get": {
        "tags": [
          "Savings"
        ],
        "summary": "Get Left Daily Purchase Quota of Flexible Product (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Daily purchase quote of flexible product left",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_103"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/lending/daily/purchase": {
      "post": {
        "tags": [
          "Savings"
        ],
        "summary": "Purchase Flexible Product (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Generated Purchase Id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_104"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/lending/daily/userRedemptionQuota": {
      "get": {
        "tags": [
          "Savings"
        ],
        "summary": "Get Left Daily Redemption Quota of Flexible Product (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "FAST",
                "NORMAL"
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Daily redemption quota of flexible product left",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_105"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/lending/daily/redeem": {
      "post": {
        "tags": [
          "Savings"
        ],
        "summary": "Redeem Flexible Product (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "FAST",
                "NORMAL"
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/lending/daily/token/position": {
      "get": {
        "tags": [
          "Savings"
        ],
        "summary": "Get Flexible Product Position (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of flexible product positions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_106"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/lending/project/list": {
      "get": {
        "tags": [
          "Savings"
        ],
        "summary": "Get Fixed/Activity Project List(USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVITY",
                "CUSTOMIZED_FIXED"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Default `ALL`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "SUBSCRIBABLE",
                "UNSUBSCRIBABLE"
              ]
            }
          },
          {
            "name": "isSortAsc",
            "in": "query",
            "description": "default \"true\"",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Default `START_TIME`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "START_TIME",
                "LOT_SIZE",
                "INTEREST_RATE",
                "DURATION"
              ]
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of fixed projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_107"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/lending/customizedFixed/purchase": {
      "post": {
        "tags": [
          "Savings"
        ],
        "summary": "Purchase Fixed/Activity Project (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lot",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Generated Purchase Id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_108"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/lending/project/position/list": {
      "get": {
        "tags": [
          "Savings"
        ],
        "summary": "Get Fixed/Activity Project Position (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Default `ALL`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "SUBSCRIBABLE",
                "UNSUBSCRIBABLE"
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of fixed project positions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_109"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/lending/union/account": {
      "get": {
        "tags": [
          "Savings"
        ],
        "summary": "Lending Account (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lending account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_110"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/lending/union/purchaseRecord": {
      "get": {
        "tags": [
          "Savings"
        ],
        "summary": "Get Purchase Record (USER_DATA)",
        "description": "- The time between startTime and endTime cannot be longer than 30 days.\n- If startTime and endTime are both not sent, then the last 30 days' data will be returned.\n\nWeigh(IP): 1",
        "parameters": [
          {
            "name": "lendingType",
            "in": "query",
            "description": "* `DAILY` - for flexible\n* `ACTIVITY` - for activity\n* `CUSTOMIZED_FIXED` for fixed",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "DAILY",
                "ACTIVITY",
                "CUSTOMIZED_FIXED"
              ]
            }
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of flexible or Fixed/Activity products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_111"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/lending/union/redemptionRecord": {
      "get": {
        "tags": [
          "Savings"
        ],
        "summary": "Get Redemption Record (USER_DATA)",
        "description": "- The time between startTime and endTime cannot be longer than 30 days.\n- If startTime and endTime are both not sent, then the last 30 days' data will be returned.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "lendingType",
            "in": "query",
            "description": "* `DAILY` - for flexible\n* `ACTIVITY` - for activity\n* `CUSTOMIZED_FIXED` for fixed",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "DAILY",
                "ACTIVITY",
                "CUSTOMIZED_FIXED"
              ]
            }
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "History of Flexible or Fixed/Activity Redemptions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_112"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/lending/union/interestHistory": {
      "get": {
        "tags": [
          "Savings"
        ],
        "summary": "Get Interest History (USER_DATA)",
        "description": "- The time between startTime and endTime cannot be longer than 30 days.\n- If startTime and endTime are both not sent, then the last 30 days' data will be returned.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "lendingType",
            "in": "query",
            "description": "* `DAILY` - for flexible\n* `ACTIVITY` - for activity\n* `CUSTOMIZED_FIXED` for fixed",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "DAILY",
                "ACTIVITY",
                "CUSTOMIZED_FIXED"
              ]
            }
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "History of interest",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_113"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/lending/positionChanged": {
      "post": {
        "tags": [
          "Savings"
        ],
        "summary": "Change Fixed/Activity Position to Daily Position (USER_DATA)",
        "description": "- PositionId is mandatory parameter for fixed position.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lot",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "positionId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Purchase information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_114"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/staking/productList": {
      "get": {
        "tags": [
          "Staking"
        ],
        "summary": "Get Staking Product List (USER_DATA)",
        "description": "Get available Staking product list.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "product",
            "in": "query",
            "description": "* `STAKING` - for Locked Staking\n* `F_DEFI` - for flexible DeFi Staking\n* `L_DEFI` - for locked DeFi Staking",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_115"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/staking/purchase": {
      "post": {
        "tags": [
          "Staking"
        ],
        "summary": "Purchase Staking Product (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "product",
            "in": "query",
            "description": "* `STAKING` - for Locked Staking\n* `F_DEFI` - for flexible DeFi Staking\n* `L_DEFI` - for locked DeFi Staking",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "renewable",
            "in": "query",
            "description": "true or false, default false. Active if product is `STAKING` or `L_DEFI`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Position Id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_116"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/staking/redeem": {
      "post": {
        "tags": [
          "Staking"
        ],
        "summary": "Redeem Staking Product (USER_DATA)",
        "description": "Redeem Staking product. Locked staking and Locked DeFI staking belong to early redemption, redeeming in advance will result in loss of interest that you have earned.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "product",
            "in": "query",
            "description": "* `STAKING` - for Locked Staking\n* `F_DEFI` - for flexible DeFi Staking\n* `L_DEFI` - for locked DeFi Staking",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "positionId",
            "in": "query",
            "description": "Mandatory if product is `STAKING` or `L_DEFI`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Mandatory if product is `F_DEFI`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_117"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/staking/position": {
      "get": {
        "tags": [
          "Staking"
        ],
        "summary": "Get Staking Product Position (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "product",
            "in": "query",
            "description": "* `STAKING` - for Locked Staking\n* `F_DEFI` - for flexible DeFi Staking\n* `L_DEFI` - for locked DeFi Staking",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Position.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_118"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/staking/stakingRecord": {
      "get": {
        "tags": [
          "Staking"
        ],
        "summary": "Get Staking History (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "product",
            "in": "query",
            "description": "* `STAKING` - for Locked Staking\n* `F_DEFI` - for flexible DeFi Staking\n* `L_DEFI` - for locked DeFi Staking",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "txnType",
            "in": "query",
            "description": "`SUBSCRIPTION`, `REDEMPTION`, `INTEREST`",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Staking History.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_119"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/staking/setAutoStaking": {
      "post": {
        "tags": [
          "Staking"
        ],
        "summary": "Set Auto Staking (USER_DATA)",
        "description": "Set auto staking on Locked Staking or Locked DeFi Staking\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "product",
            "in": "query",
            "description": "* `STAKING` - for Locked Staking\n* `L_DEFI` - for locked DeFi Staking",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "positionId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "renewable",
            "in": "query",
            "description": "true or false",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_117"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/staking/personalLeftQuota": {
      "get": {
        "tags": [
          "Staking"
        ],
        "summary": "Get Personal Left Quota of Staking Product (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "product",
            "in": "query",
            "description": "* `STAKING` - for Locked Staking\n* `F_DEFI` - for flexible DeFi Staking\n* `L_DEFI` - for locked DeFi Staking",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Quota.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_120"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/mining/pub/algoList": {
      "get": {
        "tags": [
          "Mining"
        ],
        "summary": "Acquiring Algorithm (MARKET_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Algorithm information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_121"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/mining/pub/coinList": {
      "get": {
        "tags": [
          "Mining"
        ],
        "summary": "Acquiring CoinName (MARKET_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coin information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_122"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/mining/worker/detail": {
      "get": {
        "tags": [
          "Mining"
        ],
        "summary": "Request for Detail Miner List (USER_DATA)",
        "description": "Weight(IP): 5",
        "parameters": [
          {
            "name": "algo",
            "in": "query",
            "description": "Algorithm(sha256)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "Mining Account",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workerName",
            "in": "query",
            "description": "Miner’s name",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of workers' hashrates'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_123"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/mining/worker/list": {
      "get": {
        "tags": [
          "Mining"
        ],
        "summary": "Request for Miner List (USER_DATA)",
        "description": "Weight(IP): 5",
        "parameters": [
          {
            "name": "algo",
            "in": "query",
            "description": "Algorithm(sha256)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "Mining Account",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page number, default is first page, start form 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort sequence（default=0）0 positive sequence, 1 negative sequence",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Sort by( default 1): 1: miner name, 2: real-time computing power, 3: daily average computing power, 4: real-time rejection rate, 5: last submission time",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "workerStatus",
            "in": "query",
            "description": "miners status（default=0）0 all, 1 valid, 2 invalid, 3 failure",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of workers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_124"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/mining/payment/list": {
      "get": {
        "tags": [
          "Mining"
        ],
        "summary": "Earnings List (USER_DATA)",
        "description": "Weight(IP): 5",
        "parameters": [
          {
            "name": "algo",
            "in": "query",
            "description": "Algorithm(sha256)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "Mining Account",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "coin",
            "in": "query",
            "description": "Coin name",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Search date, millisecond timestamp, while empty query all",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Search date, millisecond timestamp, while empty query all",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page number, default is first page, start form 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of pages, minimum 10, maximum 200",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of earnings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_125"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/mining/payment/other": {
      "get": {
        "tags": [
          "Mining"
        ],
        "summary": "Extra Bonus List (USER_DATA)",
        "description": "Weight(IP): 5",
        "parameters": [
          {
            "name": "algo",
            "in": "query",
            "description": "Algorithm(sha256)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "Mining Account",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "coin",
            "in": "query",
            "description": "Coin name",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Search date, millisecond timestamp, while empty query all",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Search date, millisecond timestamp, while empty query all",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page number, default is first page, start form 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of pages, minimum 10, maximum 200",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of extra bonuses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_126"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/mining/hash-transfer/config/details/list": {
      "get": {
        "tags": [
          "Mining"
        ],
        "summary": "Hashrate Resale List (USER_DATA)",
        "description": "Weight(IP): 5",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page number, default is first page, start form 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of pages, minimum 10, maximum 200",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of hashrate resales",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_127"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/mining/hash-transfer/profit/details": {
      "get": {
        "tags": [
          "Mining"
        ],
        "summary": "Hashrate Resale Details (USER_DATA)",
        "description": "Weight(IP): 5",
        "parameters": [
          {
            "name": "configId",
            "in": "query",
            "description": "Mining ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "Mining Account",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page number, default is first page, start form 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of pages, minimum 10, maximum 200",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of hashrate resale details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_128"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/mining/hash-transfer/config": {
      "post": {
        "tags": [
          "Mining"
        ],
        "summary": "Hashrate Resale Request (USER_DATA)",
        "description": "Weight(IP): 5",
        "parameters": [
          {
            "name": "userName",
            "in": "query",
            "description": "Mining Account",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "algo",
            "in": "query",
            "description": "Algorithm(sha256)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Search date, millisecond timestamp, while empty query all",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Search date, millisecond timestamp, while empty query all",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toPoolUser",
            "in": "query",
            "description": "Mining Account",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hashRate",
            "in": "query",
            "description": "Resale hashrate h/s must be transferred (BTC is greater than 500000000000 ETH is greater than 500000)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mining Account Id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_129"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/mining/hash-transfer/config/cancel": {
      "post": {
        "tags": [
          "Mining"
        ],
        "summary": "Cancel Hashrate Resale configuration (USER_DATA)",
        "description": "Weight(IP): 5",
        "parameters": [
          {
            "name": "configId",
            "in": "query",
            "description": "Mining ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "Mining Account",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success flag",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_130"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/mining/statistics/user/status": {
      "get": {
        "tags": [
          "Mining"
        ],
        "summary": "Statistic List (USER_DATA)",
        "description": "Weight(IP): 5",
        "parameters": [
          {
            "name": "algo",
            "in": "query",
            "description": "Algorithm(sha256)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "Mining Account",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mining account statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_131"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/mining/statistics/user/list": {
      "get": {
        "tags": [
          "Mining"
        ],
        "summary": "Account List (USER_DATA)",
        "description": "Weight(IP): 5",
        "parameters": [
          {
            "name": "algo",
            "in": "query",
            "description": "Algorithm(sha256)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "Mining Account",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of mining accounts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_132"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/mining/payment/uid": {
      "get": {
        "tags": [
          "Mining"
        ],
        "summary": "Mining Account Earning (USER_DATA)",
        "description": "Weight(IP): 5",
        "parameters": [
          {
            "name": "algo",
            "in": "query",
            "description": "Algorithm(sha256)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Search date, millisecond timestamp, while empty query all",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Search date, millisecond timestamp, while empty query all",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page number, default is first page, start form 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of pages, minimum 10, maximum 200",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mining account earnings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_133"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/futures/transfer": {
      "get": {
        "tags": [
          "Futures"
        ],
        "summary": "Get Future Account Transaction History List (USER_DATA)",
        "description": "Weight(IP): 10",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Default:10 Max:100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Futures Transfer Query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_134"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Futures"
        ],
        "summary": "New Future Account Transfer (USER_DATA)",
        "description": "Execute transfer between spot account and futures account.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "1: transfer from spot account to USDT-Ⓜ futures account. 2: transfer from USDT-Ⓜ futures account to spot account. 3: transfer from spot account to COIN-Ⓜ futures account. 4: transfer from COIN-Ⓜ futures account to spot account.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Futures Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_135"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/futures/loan/borrow/history": {
      "get": {
        "tags": [
          "Futures"
        ],
        "summary": "Cross-Collateral Borrow History (USER_DATA)",
        "description": "Weight(IP): 10",
        "parameters": [
          {
            "name": "coin",
            "in": "query",
            "description": "Coin name",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cross-Collateral Borrow History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_136"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/futures/loan/repay/history": {
      "get": {
        "tags": [
          "Futures"
        ],
        "summary": "Cross-Collateral Repayment History (USER_DATA)",
        "description": "Weight(IP): 10",
        "parameters": [
          {
            "name": "coin",
            "in": "query",
            "description": "Coin name",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cross-Collateral Repayment History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_137"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v2/futures/loan/wallet": {
      "get": {
        "tags": [
          "Futures"
        ],
        "summary": "Cross-Collateral Wallet V2 (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cross-Collateral Wallet Information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_138"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/futures/loan/adjustCollateral/history": {
      "get": {
        "tags": [
          "Futures"
        ],
        "summary": "Adjust Cross-Collateral LTV History (USER_DATA)",
        "description": "All data will be returned if loanCoin or collateralCoin is not sent\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "loanCoin",
            "in": "query",
            "description": "Coin loaned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BUSD"
            }
          },
          {
            "name": "collateralCoin",
            "in": "query",
            "description": "Coin used as collateral",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Adjust Cross-Collateral LTV History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_139"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/futures/loan/liquidationHistory": {
      "get": {
        "tags": [
          "Futures"
        ],
        "summary": "Cross-Collateral Liquidation History (USER_DATA)",
        "description": "All data will be returned if loanCoin or collateralCoin is not sent\n\nWeight(IP): 10",
        "parameters": [
          {
            "name": "loanCoin",
            "in": "query",
            "description": "Coin loaned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BUSD"
            }
          },
          {
            "name": "collateralCoin",
            "in": "query",
            "description": "Coin used as collateral",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cross-Collateral Liquidation History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_140"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/futures/loan/interestHistory": {
      "get": {
        "tags": [
          "Futures"
        ],
        "summary": "Cross-Collateral Interest History (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "collateralCoin",
            "in": "query",
            "description": "Coin used as collateral",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cross-Collateral Interest History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_141"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/algo/futures/newOrderVp": {
      "post": {
        "tags": [
          "Futures Algo"
        ],
        "summary": "Volume Participation(VP) New Order (TRADE)",
        "description": "Send in a VP new order. Only support on USDⓈ-M Contracts.\n\n- You need to enable `Futures Trading Permission` for the api key which requests this endpoint.\n- Base URL: https://api.binance.com\n\n- Total Algo open orders max allowed: 10 orders.\n- Leverage of symbols and position mode will be the same as your futures account settings. You can set up through the trading page or fapi.\n- Receiving \"success\": true does not mean that your order will be executed. Please use the query order endpoints（GET sapi/v1/algo/futures/openOrders or GET sapi/v1/algo/futures/historicalOrders） to check the order status. For example: Your futures balance is insufficient, or open position with reduce only or position side is inconsistent with your own setting. In these cases you will receive \"success\": true, but the order status will be expired after we check it.\n\nWeight(UID): 3000",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "side",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SELL",
              "enum": [
                "SELL",
                "BUY"
              ]
            }
          },
          {
            "name": "positionSide",
            "in": "query",
            "description": "Default BOTH for One-way Mode ; LONG or SHORT for Hedge Mode. It must be sent in Hedge Mode.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BOTH",
              "enum": [
                "BOTH",
                "LONG",
                "SHORT"
              ]
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Quantity of base asset; The notional (quantity * mark price(base asset)) must be more than the equivalent of 10,000 USDT and less than the equivalent of 1,000,000 USDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "urgency",
            "in": "query",
            "description": "Represent the relative speed of the current execution; ENUM: LOW, MEDIUM, HIGH",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "LOW",
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ]
            }
          },
          {
            "name": "clientAlgoId",
            "in": "query",
            "description": "A unique id among Algo orders (length should be 32 characters)， If it is not sent, we will give default value",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "00358ce6a268403398bd34eaa36dffe7"
            }
          },
          {
            "name": "reduceOnly",
            "in": "query",
            "description": "'true' or 'false'. Default 'false'; Cannot be sent in Hedge Mode; Cannot be sent when you open a position",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limitPrice",
            "in": "query",
            "description": "Limit price of the order; If it is not sent, will place order by market price by default",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Volume Participation(VP) Order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_142"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/algo/futures/newOrderTwap": {
      "post": {
        "tags": [
          "Futures Algo"
        ],
        "summary": "Time-Weighted Average Price(Twap) New Order (TRADE)",
        "description": "Send in a Twap new order. Only support on USDⓈ-M Contracts.\n\nYou need to enable Futures Trading Permission for the api key which requests this endpoint.\nBase URL: https://api.binance.com\n\n- Total Algo open orders max allowed: 10 orders.\n- Leverage of symbols and position mode will be the same as your futures account settings. You can set up through the trading page or fapi.\n- Receiving \"success\": true does not mean that your order will be executed. Please use the query order endpoints（GET sapi/v1/algo/futures/openOrders or GET sapi/v1/algo/futures/historicalOrders） to check the order status. For example: Your futures balance is insufficient, or open position with reduce only or position side is inconsistent with your own setting. In these cases you will receive \"success\": true, but the order status will be expired after we check it.\n- quantity * 60 / duration should be larger than minQty\n- duration cannot be less than 5 mins or more than 24 hours.\n- For delivery contracts, TWAP end time should be one hour earlier than the delivery time of the symbol.\n\nWeight(UID): 3000",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "side",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SELL",
              "enum": [
                "SELL",
                "BUY"
              ]
            }
          },
          {
            "name": "positionSide",
            "in": "query",
            "description": "Default BOTH for One-way Mode ; LONG or SHORT for Hedge Mode. It must be sent in Hedge Mode.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BOTH",
              "enum": [
                "BOTH",
                "LONG",
                "SHORT"
              ]
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Quantity of base asset; The notional (quantity * mark price(base asset)) must be more than the equivalent of 10,000 USDT and less than the equivalent of 1,000,000 USDT",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "duration",
            "in": "query",
            "description": "Duration for TWAP orders in seconds. [300, 86400];Less than 5min => defaults to 5 min; Greater than 24h => defaults to 24h",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 300
            }
          },
          {
            "name": "clientAlgoId",
            "in": "query",
            "description": "A unique id among Algo orders (length should be 32 characters)， If it is not sent, we will give default value",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "00358ce6a268403398bd34eaa36dffe7"
            }
          },
          {
            "name": "reduceOnly",
            "in": "query",
            "description": "'true' or 'false'. Default 'false'; Cannot be sent in Hedge Mode; Cannot be sent when you open a position",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limitPrice",
            "in": "query",
            "description": "Limit price of the order; If it is not sent, will place order by market price by default",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Time-Weighted Average Price(Twap) New Order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_142"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/algo/futures/order": {
      "delete": {
        "tags": [
          "Futures Algo"
        ],
        "summary": "Cancel Algo Order(TRADE)",
        "description": "Cancel an active order.\n- You need to enable Futures Trading Permission for the api key which requests this endpoint.\n- Base URL: https://api.binance.com\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "algoId",
            "in": "query",
            "description": "Eg. 14511",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cancelled order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_143"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/algo/futures/openOrders": {
      "get": {
        "tags": [
          "Futures Algo"
        ],
        "summary": "Query Current Algo Open Orders (USER_DATA)",
        "description": "- You need to enable Futures Trading Permission for the api key which requests this endpoint.\n- Base URL: https://api.binance.com\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Open Algo Orders",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_144"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/algo/futures/historicalOrders": {
      "get": {
        "tags": [
          "Futures Algo"
        ],
        "summary": "Query Historical Algo Orders (USER_DATA)",
        "description": "- You need to enable Futures Trading Permission for the api key which requests this endpoint.\n- Base URL: https://api.binance.com\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "Trading symbol, e.g. BNBUSDT",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNBUSDT"
            }
          },
          {
            "name": "side",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SELL",
              "enum": [
                "SELL",
                "BUY"
              ]
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Default 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, minimum 1, maximum 100, default 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Historical Algo Orders",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_145"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/algo/futures/subOrders": {
      "get": {
        "tags": [
          "Futures Algo"
        ],
        "summary": "Query Sub Orders (USER_DATA)",
        "description": "- You need to enable Futures Trading Permission for the api key which requests this endpoint.\n- Base URL: https://api.binance.com\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "algoId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Default 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, minimum 1, maximum 100, default 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Adjust Cross-Collateral LTV History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_146"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/portfolio/account": {
      "get": {
        "tags": [
          "Portfolio Margin"
        ],
        "summary": "Get Portfolio Margin Account Info (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Portfolio account.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_147"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/portfolio/collateralRate": {
      "get": {
        "tags": [
          "Portfolio Margin"
        ],
        "summary": "Portfolio Margin Collateral Rate (MARKET_DATA)",
        "description": "Portfolio Margin Collateral Rate.\n\nWeight(IP): 50",
        "responses": {
          "200": {
            "description": "Portfolio Margin Collateral Rate.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_148"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/portfolio/pmLoan": {
      "get": {
        "tags": [
          "Portfolio Margin"
        ],
        "summary": "Query Portfolio Margin Bankruptcy Loan Amount (USER_DATA)",
        "description": "Query Portfolio Margin Bankruptcy Loan Amount.\n\nWeight(UID): 500",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Portfolio Margin Bankruptcy Loan Amount.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_149"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/portfolio/repay": {
      "post": {
        "tags": [
          "Portfolio Margin"
        ],
        "summary": "Portfolio Margin Bankruptcy Loan Repay (USER_DATA)",
        "description": "Repay Portfolio Margin Bankruptcy Loan.\n\nWeight(UID): 3000",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_150"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/blvt/tokenInfo": {
      "get": {
        "tags": [
          "BLVT"
        ],
        "summary": "BLVT Info (MARKET_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "tokenName",
            "in": "query",
            "description": "BTCDOWN, BTCUP",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of token information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_151"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/blvt/subscribe": {
      "post": {
        "tags": [
          "BLVT"
        ],
        "summary": "Subscribe BLVT (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "tokenName",
            "in": "query",
            "description": "BTCDOWN, BTCUP",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cost",
            "in": "query",
            "description": "Spot balance",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription Info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_152"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/blvt/subscribe/record": {
      "get": {
        "tags": [
          "BLVT"
        ],
        "summary": "Query Subscription Record (USER_DATA)",
        "description": "- Only the data of the latest 90 days is available\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "tokenName",
            "in": "query",
            "description": "BTCDOWN, BTCUP",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of subscription record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_153"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/blvt/redeem": {
      "post": {
        "tags": [
          "BLVT"
        ],
        "summary": "Redeem BLVT (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "tokenName",
            "in": "query",
            "description": "BTCDOWN, BTCUP",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Redemption record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_154"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/blvt/redeem/record": {
      "get": {
        "tags": [
          "BLVT"
        ],
        "summary": "Redemption Record (USER_DATA)",
        "description": "- Only the data of the latest 90 days is available\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "tokenName",
            "in": "query",
            "description": "BTCDOWN, BTCUP",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "default 1000, max 1000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of redemption record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_155"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/blvt/userLimit": {
      "get": {
        "tags": [
          "BLVT"
        ],
        "summary": "BLVT User Limit Info (USER_DATA)",
        "description": "Weight(IP): 1",
        "parameters": [
          {
            "name": "tokenName",
            "in": "query",
            "description": "BTCDOWN, BTCUP",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of token limits",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_156"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/bswap/pools": {
      "get": {
        "tags": [
          "BSwap"
        ],
        "summary": "List All Swap Pools (MARKET_DATA)",
        "description": "Get metadata about all swap pools.\n\nWeight(IP): 1",
        "responses": {
          "200": {
            "description": "List of Swap Pools",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_157"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/bswap/liquidity": {
      "get": {
        "tags": [
          "BSwap"
        ],
        "summary": "Liquidity information of a pool (USER_DATA)",
        "description": "Get liquidity information and user share of a pool.\n\nWeight(IP):\n- `1` for one pool;\n- `10` when the poolId parameter is omitted;",
        "parameters": [
          {
            "name": "poolId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pool Liquidation information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_158"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/bswap/liquidityAdd": {
      "post": {
        "tags": [
          "BSwap"
        ],
        "summary": "Add Liquidity (TRADE)",
        "description": "Add liquidity to a pool.\n\nWeight(UID): 1000 (Additional: 3 times one second)",
        "parameters": [
          {
            "name": "poolId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "* `Single` - to add a single token\n* `Combination` - to add dual tokens",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Single",
              "enum": [
                "Single",
                "Combination"
              ]
            }
          },
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_159"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/bswap/liquidityRemove": {
      "post": {
        "tags": [
          "BSwap"
        ],
        "summary": "Remove Liquidity (TRADE)",
        "description": "Remove liquidity from a pool, `type` include `SINGLE` and `COMBINATION`, asset is mandatory for single asset removal\n\nWeight(UID): 1000 (Additional: 3 times one second)",
        "parameters": [
          {
            "name": "poolId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "* `SINGLE` - for single asset removal\n* `COMBINATION` - for combination of all coins removal",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SINGLE",
              "enum": [
                "SINGLE",
                "COMBINATION"
              ]
            }
          },
          {
            "name": "asset",
            "in": "query",
            "description": "Mandatory for single asset removal",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "shareAmount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_159"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/bswap/liquidityOps": {
      "get": {
        "tags": [
          "BSwap"
        ],
        "summary": "Liquidity Operation Record (USER_DATA)",
        "description": "Get liquidity operation (add/remove) records.\n\nWeight(UID): 3000",
        "parameters": [
          {
            "name": "operationId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "poolId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ADD",
                "REMOVE"
              ]
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 500; max 1000.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 500
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liquidity Operation Record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_160"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/bswap/quote": {
      "get": {
        "tags": [
          "BSwap"
        ],
        "summary": "Request Quote (USER_DATA)",
        "description": "Request a quote for swap quote asset (selling asset) for base asset (buying asset), essentially price/exchange rates.\n\nquoteQty is quantity of quote asset (to sell).\n\nPlease be noted the quote is for reference only, the actual price will change as the liquidity changes, it's recommended to swap immediate after request a quote for slippage prevention.\n\nWeight(UID): 150",
        "parameters": [
          {
            "name": "quoteAsset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "USDT"
            }
          },
          {
            "name": "baseAsset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BUSD"
            }
          },
          {
            "name": "quoteQty",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Quote Info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_161"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/bswap/swap": {
      "get": {
        "tags": [
          "BSwap"
        ],
        "summary": "Swap History (USER_DATA)",
        "description": "Get swap history.\n\nWeight(UID): 3000",
        "parameters": [
          {
            "name": "swapId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "* `0` - pending for swap\n* `1` - success\n* `2` - failed",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "enum": [
                0,
                1,
                2
              ]
            }
          },
          {
            "name": "quoteAsset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "USDT"
            }
          },
          {
            "name": "baseAsset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BUSD"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "default 3, max 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Swap History",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_162"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "BSwap"
        ],
        "summary": "Swap (TRADE)",
        "description": "Swap `quoteAsset` for `baseAsset`.\n\nWeight(UID): 1000 (Additional: 3 times one second)",
        "parameters": [
          {
            "name": "quoteAsset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "USDT"
            }
          },
          {
            "name": "baseAsset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BUSD"
            }
          },
          {
            "name": "quoteQty",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Swap Id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_163"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/bswap/poolConfigure": {
      "get": {
        "tags": [
          "BSwap"
        ],
        "summary": "Pool Configure (USER_DATA)",
        "description": "Weight(IP): 150",
        "parameters": [
          {
            "name": "poolId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 2
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pool Information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_164"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/bswap/addLiquidityPreview": {
      "get": {
        "tags": [
          "BSwap"
        ],
        "summary": "Add Liquidity Preview (USER_DATA)",
        "description": "Calculate expected share amount for adding liquidity in single or dual token.\n\nWeight(IP): 150",
        "parameters": [
          {
            "name": "poolId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 2
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "* `SINGLE` - for adding a single token\n* `COMBINATION` - for adding dual tokens",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SINGLE",
              "enum": [
                "SINGLE",
                "COMBINATION"
              ]
            }
          },
          {
            "name": "quoteAsset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "USDT"
            }
          },
          {
            "name": "quoteQty",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Add Liquidity Preview",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_165"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/bswap/removeLiquidityPreview": {
      "get": {
        "tags": [
          "BSwap"
        ],
        "summary": "Remove Liquidity Preview (USER_DATA)",
        "description": "Calculate the expected asset amount of single token redemption or dual token redemption.\n\nWeight(IP): 150",
        "parameters": [
          {
            "name": "poolId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 2
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "* `SINGLE` - remove and obtain a single token\n* `COMBINATION` - remove and obtain dual token",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "SINGLE",
              "enum": [
                "SINGLE",
                "COMBINATION"
              ]
            }
          },
          {
            "name": "quoteAsset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "USDT"
            }
          },
          {
            "name": "shareAmount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Remove Liquidity Preview",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_166"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/bswap/unclaimedRewards": {
      "get": {
        "tags": [
          "BSwap"
        ],
        "summary": "Get Unclaimed Rewards Record (USER_DATA)",
        "description": "Get unclaimed rewards record.\n\nWeight(UID): 1000",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "0: Swap rewards, 1: Liquidity rewards, default to 0",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 0
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unclaimed rewards record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_167"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/bswap/claimRewards": {
      "post": {
        "tags": [
          "BSwap"
        ],
        "summary": "Claim rewards (TRADE)",
        "description": "Claim swap rewards or liquidity rewards\n\nWeight(UID): 1000",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "0: Swap rewards, 1: Liquidity rewards, default to 0",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 0
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result of claim",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_168"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/bswap/claimedHistory": {
      "get": {
        "tags": [
          "BSwap"
        ],
        "summary": "Get Claimed History (USER_DATA)",
        "description": "Get history of claimed rewards.\n\nWeight(UID): 1000",
        "parameters": [
          {
            "name": "poolId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "assetRewards",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "0: Swap rewards, 1: Liquidity rewards, default to 0",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 0
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 3, max 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Claimed History",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_169"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/c2c/orderMatch/listUserOrderHistory": {
      "get": {
        "tags": [
          "C2C"
        ],
        "summary": "Get C2C Trade History (USER_DATA)",
        "description": "- If startTimestamp and endTimestamp are not sent, the recent 30-day data will be returned.\n- The max interval between startTimestamp and endTimestamp is 30 days.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "tradeType",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "BUY",
                "SELL"
              ]
            }
          },
          {
            "name": "startTimestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTimestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Default 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "rows",
            "in": "query",
            "description": "default 100, max 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trades history",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_170"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/loan/vip/ongoing/orders": {
      "get": {
        "tags": [
          "VIP Loans"
        ],
        "summary": "Get VIP Loan Ongoing Orders (USER_DATA)",
        "description": "VIP loan is available for VIP users only.\n\nWeight(IP): 400",
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "collateralAccountId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "loanCoin",
            "in": "query",
            "description": "Coin loaned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BUSD"
            }
          },
          {
            "name": "collateralCoin",
            "in": "query",
            "description": "Coin used as collateral",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 10; max 100.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ongoing VIP Loan Orders",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_171"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/loan/vip/repay": {
      "post": {
        "tags": [
          "VIP Loans"
        ],
        "summary": "VIP Loan Repay (TRADE)",
        "description": "VIP loan is available for VIP users only.\n\nWeight(UID): 6000",
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1.01
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "VIP Loan Repayment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_172"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/loan/vip/repay/history": {
      "get": {
        "tags": [
          "VIP Loans"
        ],
        "summary": "Get VIP Loan Repayment History (USER_DATA)",
        "description": "VIP loan is available for VIP users only.\n\nWeight(IP): 400",
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "loanCoin",
            "in": "query",
            "description": "Coin loaned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BUSD"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 10; max 100.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "VIP Loan Repayment History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_173"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/loan/vip/collateral/account": {
      "get": {
        "tags": [
          "VIP Loans"
        ],
        "summary": "Check Locked Value of VIP Collateral Account (USER_DATA)",
        "description": "VIP loan is available for VIP users only.\n\nWeight(IP): 6000",
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "collateralAccountId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "VIP Locked Value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_174"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/loan/income": {
      "get": {
        "tags": [
          "Crypto Loans"
        ],
        "summary": "Get Crypto Loans Income History (USER_DATA)",
        "description": "- If startTime and endTime are not sent, the recent 7-day data will be returned.\n- The max interval between startTime and endTime is 30 days.\n\nWeight(UID): 6000",
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "All types will be returned by default.\n* `borrowIn`\n* `collateralSpent`\n* `repayAmount`\n* `collateralReturn` - Collateral return after repayment\n* `addCollateral`\n* `removeCollateral`\n* `collateralReturnAfterLiquidation`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "borrowIn",
                "collateralSpent",
                "repayAmount",
                "collateralReturn",
                "addCollateral",
                "removeCollateral",
                "collateralReturnAfterLiquidation"
              ]
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "default 20, max 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 20
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loan History",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_175"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/loan/borrow": {
      "post": {
        "tags": [
          "Crypto Loans"
        ],
        "summary": "Crypto Loan Borrow (TRADE)",
        "description": "Weight(UID): 6000",
        "parameters": [
          {
            "name": "loanCoin",
            "in": "query",
            "description": "Coin loaned",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BUSD"
            }
          },
          {
            "name": "loanAmount",
            "in": "query",
            "description": "Mandatory when collateralAmount is empty",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 100.5
            }
          },
          {
            "name": "collateralCoin",
            "in": "query",
            "description": "Coin used as collateral",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "collateralAmount",
            "in": "query",
            "description": "Mandatory when loanAmount is empty",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 50.5
            }
          },
          {
            "name": "loanTerm",
            "in": "query",
            "description": "7/14/30/90/180 days",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 30
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Borrow Information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_176"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/loan/borrow/history": {
      "get": {
        "tags": [
          "Crypto Loans"
        ],
        "summary": "Get Crypto Loans Borrow History (USER_DATA)",
        "description": "- If startTime and endTime are not sent, the recent 90-day data will be returned.\n- The max interval between startTime and endTime is 180 days.\n\nWeight(IP): 400",
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId in POST /sapi/v1/loan/borrow",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 10
            }
          },
          {
            "name": "loanCoin",
            "in": "query",
            "description": "Coin loaned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BUSD"
            }
          },
          {
            "name": "collateralCoin",
            "in": "query",
            "description": "Coin used as collateral",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "default 10, max 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 10
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Borrow History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_177"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/loan/ongoing/orders": {
      "get": {
        "tags": [
          "Crypto Loans"
        ],
        "summary": "Get Loan Ongoing Orders (USER_DATA)",
        "description": "Weight(IP): 400",
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId in POST /sapi/v1/loan/borrow",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 10
            }
          },
          {
            "name": "loanCoin",
            "in": "query",
            "description": "Coin loaned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BUSD"
            }
          },
          {
            "name": "collateralCoin",
            "in": "query",
            "description": "Coin used as collateral",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1; default:1, max:1000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "default 10, max 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 10
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ongoing Orders",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_178"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/loan/repay": {
      "post": {
        "tags": [
          "Crypto Loans"
        ],
        "summary": "Crypto Loan Repay (TRADE)",
        "description": "Weight(UID): 6000",
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Order ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 123456789
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Repayment Amount",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 100.5
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Default: 1. 1 for 'repay with borrowed coin'; 2 for 'repay with collateral'.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "collateralReturn",
            "in": "query",
            "description": "Default: TRUE. TRUE: Return extra collateral to spot account; FALSE: Keep extra collateral in the order.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Repayment Information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_179"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/loan/repay/history": {
      "get": {
        "tags": [
          "Crypto Loans"
        ],
        "summary": "Get Loan Repayment History (USER_DATA)",
        "description": "If startTime and endTime are not sent, the recent 90-day data will be returned.\nThe max interval between startTime and endTime is 180 days.\n\nWeight(IP): 400",
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Order ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 10
            }
          },
          {
            "name": "loanCoin",
            "in": "query",
            "description": "Coin loaned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BUSD"
            }
          },
          {
            "name": "collateralCoin",
            "in": "query",
            "description": "Coin used as collateral",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "default 10, max 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 10
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loan Repayment History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_180"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/loan/adjust/ltv": {
      "post": {
        "tags": [
          "Crypto Loans"
        ],
        "summary": "Crypto Loan Adjust LTV (TRADE)",
        "description": "Weight(UID): 6000",
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Order ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 123456789
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Amount",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 100.5
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "'ADDITIONAL', 'REDUCED'",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "ADDITIONAL",
              "enum": [
                "ADDITIONAL",
                "REDUCED"
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "LTV Adjust",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_181"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/loan/ltv/adjustment/history": {
      "get": {
        "tags": [
          "Crypto Loans"
        ],
        "summary": "Get Loan LTV Adjustment History (USER_DATA)",
        "description": "If startTime and endTime are not sent, the recent 90-day data will be returned.\nThe max interval between startTime and endTime is 180 days.\n\nWeight(IP): 400",
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Order ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 10
            }
          },
          {
            "name": "loanCoin",
            "in": "query",
            "description": "Coin loaned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BUSD"
            }
          },
          {
            "name": "collateralCoin",
            "in": "query",
            "description": "Coin used as collateral",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "Current querying page. Start from 1. Default:1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "default 10, max 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 10
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "LTV Adjustment History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_182"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/loan/loanable/data": {
      "get": {
        "tags": [
          "Crypto Loans"
        ],
        "summary": "Get Loanable Assets Data (USER_DATA)",
        "description": "Get interest rate and borrow limit of loanable assets. The borrow limit is shown in USD value.\n\nWeight(IP): 400",
        "parameters": [
          {
            "name": "loanCoin",
            "in": "query",
            "description": "Coin loaned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BUSD"
            }
          },
          {
            "name": "vipLevel",
            "in": "query",
            "description": "Defaults to user's vip level",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loanable Assets Data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_183"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/loan/collateral/data": {
      "get": {
        "tags": [
          "Crypto Loans"
        ],
        "summary": "Get Collateral Assets Data (USER_DATA)",
        "description": "Get LTV information and collateral limit of collateral assets. The collateral limit is shown in USD value.\n\nWeight(IP): 400",
        "parameters": [
          {
            "name": "collateralCoin",
            "in": "query",
            "description": "Coin used as collateral",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "vipLevel",
            "in": "query",
            "description": "Defaults to user's vip level",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collateral Assets Data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_184"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/loan/repay/collateral/rate": {
      "get": {
        "tags": [
          "Crypto Loans"
        ],
        "summary": "Check Collateral Repay Rate (USER_DATA)",
        "description": "Get the the rate of collateral coin / loan coin when using collateral repay, the rate will be valid within 8 second.\n\nWeight(IP): 6000",
        "parameters": [
          {
            "name": "loanCoin",
            "in": "query",
            "description": "Coin loaned",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BUSD"
            }
          },
          {
            "name": "collateralCoin",
            "in": "query",
            "description": "Coin used as collateral",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "repayAmount",
            "in": "query",
            "description": "repay amount of loanCoin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collateral Assets Data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_185"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/loan/customize/margin_call": {
      "post": {
        "tags": [
          "Crypto Loans"
        ],
        "summary": "Crypto Loan Customize Margin Call (TRADE)",
        "description": "Customize margin call for ongoing orders only.\n\nWeight(UID): 6000",
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Mandatory when collateralCoin is empty. Send either orderId or collateralCoin, if both parameters are sent, take orderId only.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "collateralCoin",
            "in": "query",
            "description": "Coin used as collateral",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BNB"
            }
          },
          {
            "name": "marginCall",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collateral Assets Data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_186"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/pay/transactions": {
      "get": {
        "tags": [
          "Pay"
        ],
        "summary": "Get Pay Trade History (USER_DATA)",
        "description": "- If startTime and endTime are not sent, the recent 90 days' data will be returned.\n- The max interval between startTime and endTime is 90 days.\n- Support for querying orders within the last 18 months.\n\nWeight(UID): 3000",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "default 100, max 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pay History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_187"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/convert/exchangeInfo": {
      "get": {
        "tags": [
          "Convert"
        ],
        "summary": "List All Convert Pairs (USER_DATA)",
        "description": "Query for all convertible token pairs and the tokens’ respective upper/lower limits\n\nWeight(IP): 500",
        "parameters": [
          {
            "name": "fromAsset",
            "in": "query",
            "description": "User spends coin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "toAsset",
            "in": "query",
            "description": "User receives coin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "USDT"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Convert Pairs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_188"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/convert/assetInfo": {
      "get": {
        "tags": [
          "Convert"
        ],
        "summary": "Query order quantity precision per asset (USER_DATA)",
        "description": "Query for supported asset’s precision information\n\nWeight(IP): 100",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset Precision Information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200_189"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/convert/getQuote": {
      "post": {
        "tags": [
          "Convert"
        ],
        "summary": "Send quote request (USER_DATA)",
        "description": "Request a quote for the requested token pairs\n\nWeight(UID): 3000",
        "parameters": [
          {
            "name": "fromAsset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BTC"
            }
          },
          {
            "name": "toAsset",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "USDT"
            }
          },
          {
            "name": "fromAmount",
            "in": "query",
            "description": "When specified, it is the amount you will be debited after the conversion",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          },
          {
            "name": "toAmount",
            "in": "query",
            "description": "When specified, it is the amount you will be debited after the conversion",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          },
          {
            "name": "validTime",
            "in": "query",
            "description": "10s, 30s, 1m, 2m, default 10s",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "10s",
                "30s",
                "1m",
                "2m"
              ]
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Quote Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_190"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/convert/acceptQuote": {
      "post": {
        "tags": [
          "Convert"
        ],
        "summary": "Accept Quote (TRADE)",
        "description": "Accept the offered quote by quote ID.\n\nWeight(UID): 500",
        "parameters": [
          {
            "name": "quoteId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accept Quote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_191"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/convert/orderStatus": {
      "get": {
        "tags": [
          "Convert"
        ],
        "summary": "Order status (USER_DATA)",
        "description": "Query order status by order ID.\n\nWeight(UID): 100",
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_192"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/convert/tradeFlow": {
      "get": {
        "tags": [
          "Convert"
        ],
        "summary": "Get Convert Trade History (USER_DATA)",
        "description": "- The max interval between startTime and endTime is 30 days.\n\nWeight(UID): 100",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "default 100, max 1000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Convert Trade History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_193"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/rebate/taxQuery": {
      "get": {
        "tags": [
          "Rebate"
        ],
        "summary": "Get Spot Rebate History Records (USER_DATA)",
        "description": "- The max interval between startTime and endTime is 90 days.\n- If startTime and endTime are not sent, the recent 7 days' data will be returned.\n- The earliest startTime is supported on June 10, 2020\n\nWeight(UID): 3000",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "default 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rebate History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_194"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/nft/history/transactions": {
      "get": {
        "tags": [
          "NFT"
        ],
        "summary": "Get NFT Transaction History (USER_DATA)",
        "description": "- The max interval between startTime and endTime is 90 days.\n- If startTime and endTime are not sent, the recent 7 days' data will be returned.\n\nWeight(UID): 3000",
        "parameters": [
          {
            "name": "orderType",
            "in": "query",
            "description": "0: purchase order, 1: sell order, 2: royalty income, 3: primary market order, 4: mint fee",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 50, Max 50",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Default 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NFT Transaction History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_195"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/nft/history/deposit": {
      "get": {
        "tags": [
          "NFT"
        ],
        "summary": "Get NFT Deposit History(USER_DATA)",
        "description": "- The max interval between startTime and endTime is 90 days.\n- If startTime and endTime are not sent, the recent 7 days' data will be returned.\n\nWeight(UID): 3000",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 50, Max 50",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Default 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NFT Deposit History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_196"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/nft/history/withdraw": {
      "get": {
        "tags": [
          "NFT"
        ],
        "summary": "Get NFT Withdraw History (USER_DATA)",
        "description": "- The max interval between startTime and endTime is 90 days.\n- If startTime and endTime are not sent, the recent 7 days' data will be returned.\n\nWeight(UID): 3000",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Default 50, Max 50",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Default 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NFT Withdraw History",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_197"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/nft/user/getAsset": {
      "get": {
        "tags": [
          "NFT"
        ],
        "summary": "Get NFT Asset (USER_DATA)",
        "description": "Weight(UID): 3000",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Default 50, Max 50",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Default 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset Information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_198"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/giftcard/createCode": {
      "post": {
        "tags": [
          "Gift Card"
        ],
        "summary": "Create a Binance Code (USER_DATA)",
        "description": "This API is for creating a Binance Code. To get started with, please make sure:\n\n- You have a Binance account\n- You have passed kyc\n- You have a sufficient balance in your Binance funding wallet\n- You need Enable Withdrawals for the API Key which requests this endpoint.\n\nDaily creation volume: 2 BTC / 24H Daily creation times: 200 Codes / 24H\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "The coin type contained in the Binance Code",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "The amount of the coin",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Code creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_199"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/giftcard/redeemCode": {
      "post": {
        "tags": [
          "Gift Card"
        ],
        "summary": "Redeem a Binance Code (USER_DATA)",
        "description": "This API is for redeeming the Binance Code. Once redeemed, the coins will be deposited in your funding wallet.\n\nPlease note that if you enter the wrong code 5 times within 24 hours, you will no longer be able to redeem any Binance Code that day.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Binance Code",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalUid",
            "in": "query",
            "description": "Each external unique ID represents a unique user on the partner platform. The function helps you to identify the redemption behavior of different users, such as redemption frequency and amount. It also helps risk and limit control of a single account, such as daily limit on redemption volume, frequency, and incorrect number of entries. This will also prevent a single user account reach the partner's daily redemption limits. We strongly recommend you to use this feature and transfer us the User ID of your users if you have different users redeeming Binance codes on your platform. To protect user data privacy, you may choose to transfer the user id in any desired format (max. 400 characters).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Redeemed Information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/giftcard/verify": {
      "get": {
        "tags": [
          "Gift Card"
        ],
        "summary": "Verify a Binance Code (USER_DATA)",
        "description": "This API is for verifying whether the Binance Code is valid or not by entering Binance Code or reference number.\n\nPlease note that if you enter the wrong binance code 5 times within an hour, you will no longer be able to verify any binance code for that hour.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "referenceNo",
            "in": "query",
            "description": "reference number",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Code Verification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_201"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/giftcard/cryptography/rsa-public-key": {
      "get": {
        "tags": [
          "Gift Card"
        ],
        "summary": "Fetch RSA Public Key (USER_DATA)",
        "description": "This API is for fetching the RSA Public Key.\nThis RSA Public key will be used to encrypt the card code.\nPlease note that the RSA Public key fetched is valid only for the current day.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RSA Public Key.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_202"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/giftcard/buyCode": {
      "post": {
        "tags": [
          "Gift Card"
        ],
        "summary": "Buy a Binance Code (TRADE)",
        "description": "This API is for buying a fixed-value Binance Code, which means your Binance Code will be redeemable to a token that is different to the token that you are paying in. If the token you’re paying and the redeemable token are the same, please use the Create Binance Code endpoint.\nYou can use supported crypto currency or fiat token as baseToken to buy Binance Code that is redeemable to your chosen faceToken.\nOnce successfully purchased, the amount of baseToken would be deducted from your funding wallet.\n\nTo get started with, please make sure:\n- You have a Binance account\n- You have passed kyc\n- You have a sufficient balance in your Binance funding wallet\n- You need Enable Withdrawals for the API Key which requests this endpoint.\n\nDaily creation volume: 2 BTC / 24H Daily creation times: 200 Codes / 24H\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "baseToken",
            "in": "query",
            "description": "The token you want to pay, example BUSD",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "faceToken",
            "in": "query",
            "description": "The token you want to buy, example BNB. If faceToken = baseToken, it's the same as createCode endpoint.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "baseTokenAmount",
            "in": "query",
            "description": "The base token asset quantity, example  1.002",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Code creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_199"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/sapi/v1/giftcard/buyCode/token-limit": {
      "get": {
        "tags": [
          "Gift Card"
        ],
        "summary": "Fetch Token Limit (USER_DATA)",
        "description": "This API is to help you verify which tokens are available for you to purchase fixed-value gift cards as mentioned in section 2 and it's limitation.\n\nWeight(IP): 1",
        "parameters": [
          {
            "name": "baseToken",
            "in": "query",
            "description": "The token you want to pay, example BUSD",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recvWindow",
            "in": "query",
            "description": "The value cannot be greater than 60000",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 5000
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "UTC timestamp in ms",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signature",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token limit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_203"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "account": {
        "required": [
          "accountType",
          "balances",
          "brokered",
          "buyerCommission",
          "canDeposit",
          "canTrade",
          "canWithdraw",
          "commissionRates",
          "makerCommission",
          "requireSelfTradePrevention",
          "sellerCommission",
          "takerCommission",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "makerCommission": {
            "type": "integer",
            "format": "int64",
            "example": 15
          },
          "takerCommission": {
            "type": "integer",
            "format": "int64",
            "example": 15
          },
          "buyerCommission": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "sellerCommission": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "commissionRates": {
            "$ref": "#/components/schemas/account_commissionRates"
          },
          "canTrade": {
            "type": "boolean"
          },
          "canWithdraw": {
            "type": "boolean"
          },
          "canDeposit": {
            "type": "boolean"
          },
          "brokered": {
            "type": "boolean",
            "example": false
          },
          "requireSelfTradePrevention": {
            "type": "boolean",
            "example": false
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 123456789
          },
          "accountType": {
            "type": "string",
            "example": "SPOT"
          },
          "balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/account_balances"
            }
          }
        }
      },
      "order": {
        "required": [
          "clientOrderId",
          "cummulativeQuoteQty",
          "executedQty",
          "orderId",
          "orderListId",
          "origClientOrderId",
          "origQty",
          "price",
          "selfTradePreventionMode",
          "side",
          "status",
          "symbol",
          "timeInForce",
          "type"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BNBBTC"
          },
          "origClientOrderId": {
            "type": "string",
            "example": "msXkySR3u5uYwpvRMFsi3u"
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 28
          },
          "orderListId": {
            "type": "integer",
            "description": "Unless OCO, value will be -1",
            "format": "int64",
            "example": -1
          },
          "clientOrderId": {
            "type": "string",
            "example": "6gCrw2kRUAF9CvJDGP16IP"
          },
          "price": {
            "type": "string",
            "example": "1.00000000"
          },
          "origQty": {
            "type": "string",
            "example": "10.00000000"
          },
          "executedQty": {
            "type": "string",
            "example": "10.00000000"
          },
          "cummulativeQuoteQty": {
            "type": "string",
            "example": "10.00000000"
          },
          "status": {
            "type": "string",
            "example": "FILLED"
          },
          "timeInForce": {
            "type": "string",
            "example": "GTC"
          },
          "type": {
            "type": "string",
            "example": "LIMIT"
          },
          "side": {
            "type": "string",
            "example": "SELL"
          },
          "selfTradePreventionMode": {
            "type": "string",
            "example": "NONE"
          }
        }
      },
      "ocoOrder": {
        "required": [
          "contingencyType",
          "listClientOrderId",
          "listOrderStatus",
          "listStatusType",
          "orderListId",
          "orderReports",
          "orders",
          "symbol",
          "transactionTime"
        ],
        "type": "object",
        "properties": {
          "orderListId": {
            "type": "integer",
            "format": "int64",
            "example": 1929
          },
          "contingencyType": {
            "type": "string",
            "example": "OCO"
          },
          "listStatusType": {
            "type": "string",
            "example": "ALL_DONE"
          },
          "listOrderStatus": {
            "type": "string",
            "example": "ALL_DONE"
          },
          "listClientOrderId": {
            "type": "string",
            "example": "C3wyj4WVEktd7u9aVBRXcN"
          },
          "transactionTime": {
            "type": "integer",
            "format": "int64",
            "example": 1574040868128
          },
          "symbol": {
            "type": "string",
            "example": "BNBBTC"
          },
          "orders": {
            "type": "array",
            "example": [
              {
                "symbol": "BNBBTC",
                "orderId": 2,
                "clientOrderId": "pO9ufTiFGg3nw2fOdgeOXa"
              },
              {
                "symbol": "BNBBTC",
                "orderId": 3,
                "clientOrderId": "TXOvglzXuaubXAaENpaRCB"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ocoOrder_orders"
            }
          },
          "orderReports": {
            "type": "array",
            "example": [
              {
                "symbol": "BNBBTC",
                "origClientOrderId": "pO9ufTiFGg3nw2fOdgeOXa",
                "orderId": 2,
                "orderListId": 0,
                "clientOrderId": "unfWT8ig8i0uj6lPuYLez6",
                "price": "1.00000000",
                "origQty": "10.00000000",
                "executedQty": "0.00000000",
                "cummulativeQuoteQty": "0.00000000",
                "status": "CANCELED",
                "timeInForce": "GTC",
                "type": "STOP_LOSS_LIMIT",
                "side": "SELL",
                "stopPrice": "1.00000000"
              },
              {
                "symbol": "BNBBTC",
                "origClientOrderId": "TXOvglzXuaubXAaENpaRCB",
                "orderId": 3,
                "orderListId": 0,
                "clientOrderId": "unfWT8ig8i0uj6lPuYLez6",
                "price": "3.00000000",
                "origQty": "10.00000000",
                "executedQty": "0.00000000",
                "cummulativeQuoteQty": "0.00000000",
                "status": "CANCELED",
                "timeInForce": "GTC",
                "type": "LIMIT_MAKER",
                "side": "SELL",
                "selfTradePreventionMode": "NONE"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ocoOrder_orderReports"
            }
          }
        }
      },
      "marginOcoOrder": {
        "required": [
          "contingencyType",
          "isIsolated",
          "listClientOrderId",
          "listOrderStatus",
          "listStatusType",
          "orderListId",
          "orderReports",
          "orders",
          "symbol",
          "transactionTime"
        ],
        "type": "object",
        "properties": {
          "orderListId": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "contingencyType": {
            "type": "string",
            "example": "OCO"
          },
          "listStatusType": {
            "type": "string",
            "example": "ALL_DONE"
          },
          "listOrderStatus": {
            "type": "string",
            "example": "ALL_DONE"
          },
          "listClientOrderId": {
            "type": "string",
            "example": "C3wyj4WVEktd7u9aVBRXcN"
          },
          "transactionTime": {
            "type": "integer",
            "format": "int64",
            "example": 1574040868128
          },
          "symbol": {
            "type": "string",
            "example": "BNBUSDT"
          },
          "isIsolated": {
            "type": "boolean",
            "example": false
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/marginOcoOrder_orders"
            }
          },
          "orderReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/marginOcoOrder_orderReports"
            }
          }
        }
      },
      "orderDetails": {
        "required": [
          "clientOrderId",
          "cummulativeQuoteQty",
          "executedQty",
          "icebergQty",
          "isWorking",
          "orderId",
          "orderListId",
          "origQty",
          "origQuoteOrderQty",
          "price",
          "selfTradePreventionMode",
          "side",
          "status",
          "stopPrice",
          "symbol",
          "time",
          "timeInForce",
          "type",
          "updateTime",
          "workingTime"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "LTCBTC"
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "orderListId": {
            "type": "integer",
            "description": "Unless OCO, value will be -1",
            "format": "int64",
            "example": -1
          },
          "clientOrderId": {
            "type": "string",
            "example": "myOrder1"
          },
          "price": {
            "type": "string",
            "example": "0.1"
          },
          "origQty": {
            "type": "string",
            "example": "1.0"
          },
          "executedQty": {
            "type": "string",
            "example": "0.0"
          },
          "cummulativeQuoteQty": {
            "type": "string",
            "example": "0.0"
          },
          "status": {
            "type": "string",
            "example": "NEW"
          },
          "timeInForce": {
            "type": "string",
            "example": "GTC"
          },
          "type": {
            "type": "string",
            "example": "LIMIT"
          },
          "side": {
            "type": "string",
            "example": "BUY"
          },
          "stopPrice": {
            "type": "string",
            "example": "0.0"
          },
          "icebergQty": {
            "type": "string",
            "example": "0.0"
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "example": 1499827319559
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1499827319559
          },
          "isWorking": {
            "type": "boolean"
          },
          "workingTime": {
            "type": "integer",
            "format": "int64",
            "example": 1499827319559
          },
          "origQuoteOrderQty": {
            "type": "string",
            "example": "0.00000000"
          },
          "selfTradePreventionMode": {
            "type": "string",
            "example": "NONE"
          }
        }
      },
      "orderResponseAck": {
        "required": [
          "clientOrderId",
          "orderId",
          "orderListId",
          "symbol",
          "transactTime"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 28
          },
          "orderListId": {
            "type": "integer",
            "format": "int64",
            "example": -1
          },
          "clientOrderId": {
            "type": "string",
            "example": "6gCrw2kRUAF9CvJDGP16IP"
          },
          "transactTime": {
            "type": "integer",
            "format": "int64",
            "example": 1507725176595
          }
        }
      },
      "orderResponseResult": {
        "required": [
          "clientOrderId",
          "cummulativeQuoteQty",
          "executedQty",
          "orderId",
          "orderListId",
          "origQty",
          "price",
          "selfTradePreventionMode",
          "side",
          "status",
          "symbol",
          "timeInForce",
          "transactTime",
          "type",
          "workingTime"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 28
          },
          "orderListId": {
            "type": "integer",
            "format": "int64",
            "example": -1
          },
          "clientOrderId": {
            "type": "string",
            "example": "6gCrw2kRUAF9CvJDGP16IP"
          },
          "transactTime": {
            "type": "integer",
            "format": "int64",
            "example": 1507725176595
          },
          "price": {
            "type": "string",
            "example": "0.00000000"
          },
          "origQty": {
            "type": "string",
            "example": "10.00000000"
          },
          "executedQty": {
            "type": "string",
            "example": "10.00000000"
          },
          "cummulativeQuoteQty": {
            "type": "string",
            "example": "10.00000000"
          },
          "status": {
            "type": "string",
            "example": "FILLED"
          },
          "timeInForce": {
            "type": "string",
            "example": "GTC"
          },
          "type": {
            "type": "string",
            "example": "MARKET"
          },
          "side": {
            "type": "string",
            "example": "SELL"
          },
          "strategyId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "strategyType": {
            "type": "integer",
            "format": "int64",
            "example": 1000000
          },
          "workingTime": {
            "type": "integer",
            "format": "int64",
            "example": 1507725176595
          },
          "selfTradePreventionMode": {
            "type": "string",
            "example": "NONE"
          }
        }
      },
      "orderResponseFull": {
        "required": [
          "clientOrderId",
          "cummulativeQuoteQty",
          "executedQty",
          "fills",
          "orderId",
          "orderListId",
          "origQty",
          "price",
          "selfTradePreventionMode",
          "side",
          "status",
          "symbol",
          "timeInForce",
          "transactTime",
          "type",
          "workingTime"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 28
          },
          "orderListId": {
            "type": "integer",
            "format": "int64",
            "example": -1
          },
          "clientOrderId": {
            "type": "string",
            "example": "6gCrw2kRUAF9CvJDGP16IP"
          },
          "transactTime": {
            "type": "integer",
            "format": "int64",
            "example": 1507725176595
          },
          "price": {
            "type": "string",
            "example": "0.00000000"
          },
          "origQty": {
            "type": "string",
            "example": "10.00000000"
          },
          "executedQty": {
            "type": "string",
            "example": "10.00000000"
          },
          "cummulativeQuoteQty": {
            "type": "string",
            "example": "10.00000000"
          },
          "status": {
            "type": "string",
            "example": "FILLED"
          },
          "timeInForce": {
            "type": "string",
            "example": "GTC"
          },
          "type": {
            "type": "string",
            "example": "MARKET"
          },
          "side": {
            "type": "string",
            "example": "SELL"
          },
          "strategyId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "strategyType": {
            "type": "integer",
            "format": "int64",
            "example": 1000000
          },
          "workingTime": {
            "type": "integer",
            "format": "int64",
            "example": 1507725176595
          },
          "selfTradePreventionMode": {
            "type": "string",
            "example": "NONE"
          },
          "fills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderResponseFull_fills"
            }
          }
        }
      },
      "marginOrder": {
        "required": [
          "clientOrderId",
          "cummulativeQuoteQty",
          "executedQty",
          "orderId",
          "origClientOrderId",
          "origQty",
          "price",
          "side",
          "status",
          "symbol",
          "timeInForce",
          "type"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "LTCBTC"
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 28
          },
          "origClientOrderId": {
            "type": "string",
            "example": "msXkySR3u5uYwpvRMFsi3u"
          },
          "clientOrderId": {
            "type": "string",
            "example": "6gCrw2kRUAF9CvJDGP16IP"
          },
          "price": {
            "type": "string",
            "example": "1.00000000"
          },
          "origQty": {
            "type": "string",
            "example": "10.00000000"
          },
          "executedQty": {
            "type": "string",
            "example": "8.00000000"
          },
          "cummulativeQuoteQty": {
            "type": "string",
            "example": "8.00000000"
          },
          "status": {
            "type": "string",
            "example": "CANCELED"
          },
          "timeInForce": {
            "type": "string",
            "example": "GTC"
          },
          "type": {
            "type": "string",
            "example": "LIMIT"
          },
          "side": {
            "type": "string",
            "example": "SELL"
          }
        }
      },
      "marginOrderDetail": {
        "required": [
          "clientOrderId",
          "cummulativeQuoteQty",
          "executedQty",
          "icebergQty",
          "isIsolated",
          "isWorking",
          "orderId",
          "origQty",
          "price",
          "side",
          "status",
          "stopPrice",
          "symbol",
          "time",
          "timeInForce",
          "type",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "clientOrderId": {
            "type": "string",
            "example": "ZwfQzuDIGpceVhKW5DvCmO"
          },
          "cummulativeQuoteQty": {
            "type": "string",
            "example": "0.00000000"
          },
          "executedQty": {
            "type": "string",
            "example": "0.00000000"
          },
          "icebergQty": {
            "type": "string",
            "example": "0.00000000"
          },
          "isWorking": {
            "type": "boolean"
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 213205622
          },
          "origQty": {
            "type": "string",
            "example": "0.30000000"
          },
          "price": {
            "type": "string",
            "example": "0.00493630"
          },
          "side": {
            "type": "string",
            "example": "SELL"
          },
          "status": {
            "type": "string",
            "example": "NEW"
          },
          "stopPrice": {
            "type": "string",
            "example": "0.00000000"
          },
          "symbol": {
            "type": "string",
            "example": "BNBBTC"
          },
          "isIsolated": {
            "type": "boolean"
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "example": 1562133008725
          },
          "timeInForce": {
            "type": "string",
            "example": "GTC"
          },
          "type": {
            "type": "string",
            "example": "LIMIT"
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1562133008725
          }
        }
      },
      "canceledMarginOrderDetail": {
        "required": [
          "clientOrderId",
          "cummulativeQuoteQty",
          "executedQty",
          "isIsolated",
          "orderId",
          "orderListId",
          "origClientOrderId",
          "origQty",
          "price",
          "side",
          "status",
          "symbol",
          "timeInForce",
          "type"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BNBUSDT"
          },
          "isIsolated": {
            "type": "boolean"
          },
          "origClientOrderId": {
            "type": "string",
            "example": "E6APeyTJvkMvLMYMqu1KQ4"
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 11
          },
          "orderListId": {
            "type": "integer",
            "format": "int64",
            "example": -1
          },
          "clientOrderId": {
            "type": "string",
            "example": "pXLV6Hz6mprAcVYpVMTGgx"
          },
          "price": {
            "type": "string",
            "example": "0.089853"
          },
          "origQty": {
            "type": "string",
            "example": "0.178622"
          },
          "executedQty": {
            "type": "string",
            "example": "0.000000"
          },
          "cummulativeQuoteQty": {
            "type": "string",
            "example": "0.000000"
          },
          "status": {
            "type": "string",
            "example": "CANCELED"
          },
          "timeInForce": {
            "type": "string",
            "example": "GTC"
          },
          "type": {
            "type": "string",
            "example": "LIMIT"
          },
          "side": {
            "type": "string",
            "example": "BUY"
          }
        }
      },
      "marginOrderResponseAck": {
        "required": [
          "clientOrderId",
          "isIsolated",
          "orderId",
          "symbol",
          "transactTime"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 28
          },
          "clientOrderId": {
            "type": "string",
            "example": "6gCrw2kRUAF9CvJDGP16IP"
          },
          "isIsolated": {
            "type": "boolean"
          },
          "transactTime": {
            "type": "integer",
            "format": "int64",
            "example": 1507725176595
          }
        }
      },
      "marginOrderResponseResult": {
        "required": [
          "clientOrderId",
          "cummulativeQuoteQty",
          "executedQty",
          "isIsolated",
          "orderId",
          "origQty",
          "price",
          "side",
          "status",
          "symbol",
          "timeInForce",
          "transactTime",
          "type"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 28
          },
          "clientOrderId": {
            "type": "string",
            "example": "6gCrw2kRUAF9CvJDGP16IP"
          },
          "transactTime": {
            "type": "integer",
            "format": "int64",
            "example": 1507725176595
          },
          "price": {
            "type": "string",
            "example": "1.00000000"
          },
          "origQty": {
            "type": "string",
            "example": "10.00000000"
          },
          "executedQty": {
            "type": "string",
            "example": "10.00000000"
          },
          "cummulativeQuoteQty": {
            "type": "string",
            "example": "10.00000000"
          },
          "status": {
            "type": "string",
            "example": "FILLED"
          },
          "timeInForce": {
            "type": "string",
            "example": "GTC"
          },
          "type": {
            "type": "string",
            "example": "MARKET"
          },
          "isIsolated": {
            "type": "boolean"
          },
          "side": {
            "type": "string",
            "example": "SELL"
          }
        }
      },
      "marginOrderResponseFull": {
        "required": [
          "clientOrderId",
          "cummulativeQuoteQty",
          "executedQty",
          "fills",
          "isIsolated",
          "marginBuyBorrowAmount",
          "marginBuyBorrowAsset",
          "orderId",
          "origQty",
          "price",
          "side",
          "status",
          "symbol",
          "timeInForce",
          "transactTime",
          "type"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 28
          },
          "clientOrderId": {
            "type": "string",
            "example": "6gCrw2kRUAF9CvJDGP16IP"
          },
          "transactTime": {
            "type": "integer",
            "format": "int64",
            "example": 1507725176595
          },
          "price": {
            "type": "string",
            "example": "1.00000000"
          },
          "origQty": {
            "type": "string",
            "example": "10.00000000"
          },
          "executedQty": {
            "type": "string",
            "example": "10.00000000"
          },
          "cummulativeQuoteQty": {
            "type": "string",
            "example": "10.00000000"
          },
          "status": {
            "type": "string",
            "example": "FILLED"
          },
          "timeInForce": {
            "type": "string",
            "example": "GTC"
          },
          "type": {
            "type": "string",
            "example": "MARKET"
          },
          "side": {
            "type": "string",
            "example": "SELL"
          },
          "marginBuyBorrowAmount": {
            "type": "number",
            "description": "will not return if no margin trade happens",
            "format": "double",
            "example": 5
          },
          "marginBuyBorrowAsset": {
            "type": "string",
            "description": "will not return if no margin trade happens",
            "example": "BTC"
          },
          "isIsolated": {
            "type": "boolean"
          },
          "fills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderResponseFull_fills"
            }
          }
        }
      },
      "marginTrade": {
        "required": [
          "commission",
          "commissionAsset",
          "id",
          "isBestMatch",
          "isBuyer",
          "isIsolated",
          "isMaker",
          "orderId",
          "price",
          "qty",
          "symbol",
          "time"
        ],
        "type": "object",
        "properties": {
          "commission": {
            "type": "string",
            "example": "0.00006000"
          },
          "commissionAsset": {
            "type": "string",
            "example": "BTC"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 28
          },
          "isBestMatch": {
            "type": "boolean"
          },
          "isBuyer": {
            "type": "boolean"
          },
          "isMaker": {
            "type": "boolean"
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 28
          },
          "price": {
            "type": "string",
            "example": "0.02000000"
          },
          "qty": {
            "type": "string",
            "example": "1.02000000"
          },
          "symbol": {
            "type": "string",
            "example": "BNBBTC"
          },
          "isIsolated": {
            "type": "boolean",
            "example": false
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "example": 1507725176595
          }
        }
      },
      "marginTransferDetails": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/marginTransferDetails_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "isolatedMarginAccountInfo": {
        "required": [
          "assets",
          "totalAssetOfBtc",
          "totalLiabilityOfBtc",
          "totalNetAssetOfBtc"
        ],
        "type": "object",
        "properties": {
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/isolatedMarginAccountInfo_assets"
            }
          },
          "totalAssetOfBtc": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalLiabilityOfBtc": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalNetAssetOfBtc": {
            "type": "string",
            "example": "0.00000000"
          }
        }
      },
      "bookTickerList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/bookTicker"
        }
      },
      "bookTicker": {
        "required": [
          "askPrice",
          "askQty",
          "bidPrice",
          "bidQty",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BNBBTC"
          },
          "bidPrice": {
            "type": "string",
            "example": "16.36240000"
          },
          "bidQty": {
            "type": "string",
            "example": "256.78000000"
          },
          "askPrice": {
            "type": "string",
            "example": "16.36450000"
          },
          "askQty": {
            "type": "string",
            "example": "12.56000000"
          }
        }
      },
      "priceTickerList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/priceTicker"
        }
      },
      "priceTicker": {
        "required": [
          "price",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BNBBTC"
          },
          "price": {
            "type": "string",
            "example": "0.17160000"
          }
        }
      },
      "repaymentInfo": {
        "required": [
          "collateralCoin",
          "currentLTV",
          "loanCoin",
          "remainingCollateral",
          "remainingInterest",
          "remainingPrincipal",
          "repayStatus"
        ],
        "type": "object",
        "properties": {
          "loanCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "remainingPrincipal": {
            "type": "string",
            "example": "100.5"
          },
          "remainingInterest": {
            "type": "string",
            "example": "0"
          },
          "collateralCoin": {
            "type": "string",
            "example": "BNB"
          },
          "remainingCollateral": {
            "type": "string",
            "example": "5.253"
          },
          "currentLTV": {
            "type": "string",
            "example": "0.25"
          },
          "repayStatus": {
            "type": "string",
            "example": "Repaying"
          }
        }
      },
      "repaymentInfo2": {
        "required": [
          "collateralCoin",
          "loanCoin",
          "repayStatus"
        ],
        "type": "object",
        "properties": {
          "loanCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "collateralCoin": {
            "type": "string",
            "example": "BNB"
          },
          "repayStatus": {
            "type": "string",
            "example": "Repaying"
          }
        }
      },
      "tickerList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ticker"
        }
      },
      "ticker": {
        "required": [
          "askPrice",
          "askQty",
          "bidPrice",
          "bidQty",
          "closeTime",
          "count",
          "firstId",
          "highPrice",
          "lastId",
          "lastPrice",
          "lowPrice",
          "openPrice",
          "openTime",
          "prevClosePrice",
          "priceChange",
          "priceChangePercent",
          "quoteVolume",
          "symbol",
          "volume"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BNBBTC"
          },
          "priceChange": {
            "type": "string",
            "example": "0.17160000"
          },
          "priceChangePercent": {
            "type": "string",
            "example": "1.060"
          },
          "prevClosePrice": {
            "type": "string",
            "example": "16.35920000"
          },
          "lastPrice": {
            "type": "string",
            "example": "27.84000000"
          },
          "bidPrice": {
            "type": "string",
            "example": "16.34488284"
          },
          "bidQty": {
            "type": "string",
            "example": "16.34488284"
          },
          "askPrice": {
            "type": "string",
            "example": "16.35920000"
          },
          "askQty": {
            "type": "string",
            "example": "25.06000000"
          },
          "openPrice": {
            "type": "string",
            "example": "16.18760000"
          },
          "highPrice": {
            "type": "string",
            "example": "16.55000000"
          },
          "lowPrice": {
            "type": "string",
            "example": "16.16940000"
          },
          "volume": {
            "type": "string",
            "example": "1678279.95000000"
          },
          "quoteVolume": {
            "type": "string",
            "example": "27431289.14792300"
          },
          "openTime": {
            "type": "integer",
            "format": "int64",
            "example": 1592808788637
          },
          "closeTime": {
            "type": "integer",
            "format": "int64",
            "example": 1592895188637
          },
          "firstId": {
            "type": "integer",
            "format": "int64",
            "example": 62683296
          },
          "lastId": {
            "type": "integer",
            "format": "int64",
            "example": 62739253
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "example": 55958
          }
        }
      },
      "myTrade": {
        "required": [
          "commission",
          "commissionAsset",
          "id",
          "isBestMatch",
          "isBuyer",
          "isMaker",
          "orderId",
          "orderListId",
          "price",
          "qty",
          "quoteQty",
          "symbol",
          "time"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BNBBTC"
          },
          "id": {
            "type": "integer",
            "description": "Trade id",
            "format": "int64",
            "example": 28457
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 100234
          },
          "orderListId": {
            "type": "integer",
            "format": "int64",
            "example": -1
          },
          "price": {
            "type": "string",
            "description": "Price",
            "example": "4.00000100"
          },
          "qty": {
            "type": "string",
            "description": "Amount of base asset",
            "example": "12.00000000"
          },
          "quoteQty": {
            "type": "string",
            "description": "Amount of quote asset",
            "example": "48.000012"
          },
          "commission": {
            "type": "string",
            "example": "10.10000000"
          },
          "commissionAsset": {
            "type": "string",
            "example": "BNB"
          },
          "time": {
            "type": "integer",
            "description": "Trade timestamp",
            "format": "int64",
            "example": 1499865549590
          },
          "isBuyer": {
            "type": "boolean",
            "example": false
          },
          "isMaker": {
            "type": "boolean",
            "example": false
          },
          "isBestMatch": {
            "type": "boolean"
          }
        }
      },
      "transaction": {
        "required": [
          "tranId"
        ],
        "type": "object",
        "properties": {
          "tranId": {
            "type": "integer",
            "description": "transaction id",
            "format": "int64",
            "example": 345196462
          }
        }
      },
      "trade": {
        "required": [
          "id",
          "isBestMatch",
          "isBuyerMaker",
          "price",
          "qty",
          "quoteQty",
          "time"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "trade id",
            "format": "int64",
            "example": 345196462
          },
          "price": {
            "type": "string",
            "description": "price",
            "example": "9638.99000000"
          },
          "qty": {
            "type": "string",
            "description": "amount of base asset",
            "example": "0.02077200"
          },
          "quoteQty": {
            "type": "string",
            "description": "amount of quote asset",
            "example": "0.02077200"
          },
          "time": {
            "type": "integer",
            "description": "Trade executed timestamp, as same as `T` in the stream",
            "format": "int64",
            "example": 1592887772684
          },
          "isBuyerMaker": {
            "type": "boolean"
          },
          "isBestMatch": {
            "type": "boolean"
          }
        }
      },
      "aggTrade": {
        "required": [
          "M",
          "T",
          "a",
          "f",
          "l",
          "m",
          "p",
          "q"
        ],
        "type": "object",
        "properties": {
          "a": {
            "type": "integer",
            "description": "Aggregate tradeId",
            "format": "int64",
            "example": 26129
          },
          "p": {
            "type": "string",
            "description": "Price",
            "example": "0.01633102"
          },
          "q": {
            "type": "string",
            "description": "Quantity",
            "example": "4.70443515"
          },
          "f": {
            "type": "integer",
            "description": "First tradeId",
            "format": "int64",
            "example": 27781
          },
          "l": {
            "type": "integer",
            "description": "Last tradeId",
            "format": "int64",
            "example": 27781
          },
          "T": {
            "type": "boolean",
            "description": "Timestamp",
            "example": false
          },
          "m": {
            "type": "boolean",
            "description": "Was the buyer the maker?"
          },
          "M": {
            "type": "boolean",
            "description": "Was the trade the best price match?"
          }
        }
      },
      "bnbBurnStatus": {
        "required": [
          "interestBNBBurn",
          "spotBNBBurn"
        ],
        "type": "object",
        "properties": {
          "spotBNBBurn": {
            "type": "boolean"
          },
          "interestBNBBurn": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "snapshotSpot": {
        "required": [
          "code",
          "msg",
          "snapshotVos"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 200
          },
          "msg": {
            "type": "string",
            "example": ""
          },
          "snapshotVos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/snapshotSpot_snapshotVos"
            }
          }
        }
      },
      "snapshotMargin": {
        "required": [
          "code",
          "msg",
          "snapshotVos"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 200
          },
          "msg": {
            "type": "string",
            "example": ""
          },
          "snapshotVos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/snapshotMargin_snapshotVos"
            }
          }
        }
      },
      "snapshotFutures": {
        "required": [
          "code",
          "msg",
          "snapshotVos"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 200
          },
          "msg": {
            "type": "string",
            "example": ""
          },
          "snapshotVos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/snapshotFutures_snapshotVos"
            }
          }
        }
      },
      "subAccountUSDTFuturesDetails": {
        "required": [
          "futureAccountResp"
        ],
        "type": "object",
        "properties": {
          "futureAccountResp": {
            "$ref": "#/components/schemas/subAccountUSDTFuturesDetails_futureAccountResp"
          }
        }
      },
      "subAccountCOINFuturesDetails": {
        "required": [
          "assets",
          "canDeposit",
          "canTrade",
          "canWithdraw",
          "email",
          "feeTier",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "abc@test.com"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/subAccountCOINFuturesDetails_assets"
            }
          },
          "canDeposit": {
            "type": "boolean"
          },
          "canTrade": {
            "type": "boolean"
          },
          "canWithdraw": {
            "type": "boolean"
          },
          "feeTier": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1598959682001
          }
        }
      },
      "subAccountUSDTFuturesSummary": {
        "required": [
          "futureAccountSummaryResp"
        ],
        "type": "object",
        "properties": {
          "futureAccountSummaryResp": {
            "$ref": "#/components/schemas/subAccountUSDTFuturesSummary_futureAccountSummaryResp"
          }
        }
      },
      "subAccountCOINFuturesSummary": {
        "required": [
          "deliveryAccountSummaryResp"
        ],
        "type": "object",
        "properties": {
          "deliveryAccountSummaryResp": {
            "$ref": "#/components/schemas/subAccountCOINFuturesSummary_deliveryAccountSummaryResp"
          }
        }
      },
      "subAccountUSDTFuturesPositionRisk": {
        "required": [
          "futurePositionRiskVos"
        ],
        "type": "object",
        "properties": {
          "futurePositionRiskVos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_82"
            }
          }
        }
      },
      "subAccountCOINFuturesPositionRisk": {
        "required": [
          "deliveryPositionRiskVos"
        ],
        "type": "object",
        "properties": {
          "deliveryPositionRiskVos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/subAccountCOINFuturesPositionRisk_deliveryPositionRiskVos"
            }
          }
        }
      },
      "savingsFlexiblePurchaseRecord": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/savingsFlexiblePurchaseRecord_inner"
        }
      },
      "savingsFixedActivityPurchaseRecord": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/savingsFixedActivityPurchaseRecord_inner"
        }
      },
      "savingsFlexibleRedemptionRecord": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/savingsFlexibleRedemptionRecord_inner"
        }
      },
      "savingsFixedActivityRedemptionRecord": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/savingsFixedActivityRedemptionRecord_inner"
        }
      },
      "bswapAddLiquidityPreviewCombination": {
        "required": [
          "baseAmt",
          "baseAsset",
          "price",
          "quoteAmt",
          "quoteAsset",
          "share"
        ],
        "type": "object",
        "properties": {
          "quoteAsset": {
            "type": "string",
            "example": "USDT"
          },
          "baseAsset": {
            "type": "string",
            "example": "BUSD"
          },
          "quoteAmt": {
            "type": "integer",
            "format": "int64",
            "example": 300000
          },
          "baseAmt": {
            "type": "integer",
            "format": "int64",
            "example": 299975
          },
          "price": {
            "type": "number",
            "format": "double",
            "example": 1.00008334
          },
          "share": {
            "type": "number",
            "format": "double",
            "example": 1.23
          }
        }
      },
      "bswapAddLiquidityPreviewSingle": {
        "required": [
          "fee",
          "price",
          "quoteAmt",
          "quoteAsset",
          "share",
          "slippage"
        ],
        "type": "object",
        "properties": {
          "quoteAsset": {
            "type": "string",
            "example": "USDT"
          },
          "quoteAmt": {
            "type": "integer",
            "format": "int64",
            "example": 300000
          },
          "price": {
            "type": "number",
            "format": "double",
            "example": 1.00008334
          },
          "share": {
            "type": "number",
            "format": "double",
            "example": 1.23
          },
          "slippage": {
            "type": "number",
            "format": "double",
            "example": 0.00007245
          },
          "fee": {
            "type": "number",
            "format": "double",
            "example": 120
          }
        }
      },
      "bswapRmvLiquidityPreviewCombination": {
        "required": [
          "baseAmt",
          "baseAsset",
          "price",
          "quoteAmt",
          "quoteAsset"
        ],
        "type": "object",
        "properties": {
          "quoteAsset": {
            "type": "string",
            "example": "USDT"
          },
          "baseAsset": {
            "type": "string",
            "example": "BUSD"
          },
          "quoteAmt": {
            "type": "integer",
            "format": "int64",
            "example": 300000
          },
          "baseAmt": {
            "type": "integer",
            "format": "int64",
            "example": 299975
          },
          "price": {
            "type": "number",
            "format": "double",
            "example": 1.00008334
          }
        }
      },
      "bswapRmvLiquidityPreviewSingle": {
        "required": [
          "fee",
          "price",
          "quoteAmt",
          "quoteAsset",
          "slippage"
        ],
        "type": "object",
        "properties": {
          "quoteAsset": {
            "type": "string",
            "example": "USDT"
          },
          "quoteAmt": {
            "type": "integer",
            "format": "int64",
            "example": 300000
          },
          "price": {
            "type": "number",
            "format": "double",
            "example": 1.00008334
          },
          "slippage": {
            "type": "number",
            "format": "double",
            "example": 0.00007245
          },
          "fee": {
            "type": "number",
            "format": "double",
            "example": 120
          }
        }
      },
      "error": {
        "required": [
          "code",
          "msg"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error code",
            "format": "int64"
          },
          "msg": {
            "type": "string",
            "description": "Error message",
            "example": "error message"
          }
        }
      },
      "inline_response_200": {
        "required": [
          "serverTime"
        ],
        "type": "object",
        "properties": {
          "serverTime": {
            "type": "integer",
            "format": "int64",
            "example": 1499827319559
          }
        }
      },
      "inline_response_200_1": {
        "required": [
          "exchangeFilters",
          "rateLimits",
          "serverTime",
          "symbols",
          "timezone"
        ],
        "type": "object",
        "properties": {
          "timezone": {
            "type": "string",
            "example": "UTC"
          },
          "serverTime": {
            "type": "integer",
            "format": "int64",
            "example": 1592882214236
          },
          "rateLimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_1_rateLimits"
            }
          },
          "exchangeFilters": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "symbols": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_1_symbols"
            }
          }
        }
      },
      "inline_response_200_2": {
        "required": [
          "asks",
          "bids",
          "lastUpdateId"
        ],
        "type": "object",
        "properties": {
          "lastUpdateId": {
            "type": "integer",
            "format": "int64"
          },
          "bids": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "maxItems": 2,
                "minItems": 2,
                "type": "string"
              }
            }
          },
          "asks": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "maxItems": 2,
                "minItems": 2,
                "type": "string"
              }
            }
          }
        }
      },
      "inline_response_200_3": {
        "required": [
          "mins",
          "price"
        ],
        "type": "object",
        "properties": {
          "mins": {
            "type": "integer",
            "format": "int64",
            "example": 5
          },
          "price": {
            "type": "string",
            "example": "9.35751834"
          }
        }
      },
      "inline_response_200_4": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ticker"
          },
          {
            "$ref": "#/components/schemas/tickerList"
          }
        ]
      },
      "inline_response_200_5": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/priceTicker"
          },
          {
            "$ref": "#/components/schemas/priceTickerList"
          }
        ]
      },
      "inline_response_200_6": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/bookTicker"
          },
          {
            "$ref": "#/components/schemas/bookTickerList"
          }
        ]
      },
      "inline_response_200_7": {
        "required": [
          "closeTime",
          "count",
          "firstId",
          "highPrice",
          "lastId",
          "lastPrice",
          "lowPrice",
          "openPrice",
          "openTime",
          "priceChange",
          "priceChangePercent",
          "quoteVolume",
          "symbol",
          "volume",
          "weightedAvgPrice"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BNBBTC"
          },
          "priceChange": {
            "type": "string",
            "example": "-8.00000000"
          },
          "priceChangePercent": {
            "type": "string",
            "example": "-88.889"
          },
          "weightedAvgPrice": {
            "type": "string",
            "example": "2.60427807"
          },
          "openPrice": {
            "type": "string",
            "example": "9.00000000"
          },
          "highPrice": {
            "type": "string",
            "example": "9.00000000"
          },
          "lowPrice": {
            "type": "string",
            "example": "1.00000000"
          },
          "lastPrice": {
            "type": "string",
            "example": "1.00000000"
          },
          "volume": {
            "type": "string",
            "example": "187.00000000"
          },
          "quoteVolume": {
            "type": "string",
            "example": "487.00000000"
          },
          "openTime": {
            "type": "integer",
            "format": "int64",
            "example": 1641859200000
          },
          "closeTime": {
            "type": "integer",
            "format": "int64",
            "example": 1642031999999
          },
          "firstId": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "lastId": {
            "type": "integer",
            "format": "int64",
            "example": 60
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "example": 61
          }
        }
      },
      "inline_response_200_8": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/orderResponseAck"
          },
          {
            "$ref": "#/components/schemas/orderResponseResult"
          },
          {
            "$ref": "#/components/schemas/orderResponseFull"
          }
        ]
      },
      "inline_response_200_9": {
        "required": [
          "cancelResponse",
          "cancelResult",
          "newOrderResponse",
          "newOrderResult"
        ],
        "type": "object",
        "properties": {
          "cancelResult": {
            "type": "string",
            "example": "SUCCESS"
          },
          "newOrderResult": {
            "type": "string",
            "example": "SUCCESS"
          },
          "cancelResponse": {
            "$ref": "#/components/schemas/inline_response_200_9_cancelResponse"
          },
          "newOrderResponse": {
            "$ref": "#/components/schemas/inline_response_200_9_newOrderResponse"
          }
        }
      },
      "inline_response_200_10": {
        "required": [
          "contingencyType",
          "listClientOrderId",
          "listOrderStatus",
          "listStatusType",
          "orderListId",
          "orderReports",
          "orders",
          "symbol",
          "transactionTime"
        ],
        "type": "object",
        "properties": {
          "orderListId": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "contingencyType": {
            "type": "string",
            "example": "OCO"
          },
          "listStatusType": {
            "type": "string",
            "example": "EXEC_STARTED"
          },
          "listOrderStatus": {
            "type": "string",
            "example": "EXECUTING"
          },
          "listClientOrderId": {
            "type": "string",
            "example": "JYVpp3F0f5CAG15DhtrqLp"
          },
          "transactionTime": {
            "type": "integer",
            "format": "int64",
            "example": 1563417480525
          },
          "symbol": {
            "type": "string",
            "example": "LTCBTC"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_10_orders"
            }
          },
          "orderReports": {
            "type": "array",
            "example": [
              {
                "symbol": "LTCBTC",
                "orderId": 2,
                "orderListId": 0,
                "clientOrderId": "Kk7sqHb9J6mJWTMDVW7Vos",
                "transactTime": 1563417480525,
                "price": "0.000000",
                "origQty": "0.624363",
                "executedQty": "0.000000",
                "cummulativeQuoteQty": "0.000000",
                "status": "NEW",
                "timeInForce": "GTC",
                "type": "STOP_LOSS",
                "side": "BUY",
                "stopPrice": "0.960664",
                "workingTime": -1,
                "selfTradePreventionMode": "NONE"
              },
              {
                "symbol": "LTCBTC",
                "orderId": 3,
                "orderListId": 0,
                "clientOrderId": "xTXKaGYd4bluPVp78IVRvl",
                "transactTime": 1563417480525,
                "price": "0.036435",
                "origQty": "0.624363",
                "executedQty": "0.000000",
                "cummulativeQuoteQty": "0.000000",
                "status": "NEW",
                "timeInForce": "GTC",
                "type": "LIMIT_MAKER",
                "side": "BUY",
                "workingTime": 1563417480525,
                "selfTradePreventionMode": "NONE"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/inline_response_200_10_orderReports"
            }
          }
        }
      },
      "inline_response_200_11": {
        "required": [
          "contingencyType",
          "listClientOrderId",
          "listOrderStatus",
          "listStatusType",
          "orderListId",
          "orders",
          "symbol",
          "transactionTime"
        ],
        "type": "object",
        "properties": {
          "orderListId": {
            "type": "integer",
            "format": "int64",
            "example": 27
          },
          "contingencyType": {
            "type": "string",
            "example": "OCO"
          },
          "listStatusType": {
            "type": "string",
            "example": "EXEC_STARTED"
          },
          "listOrderStatus": {
            "type": "string",
            "example": "EXECUTING"
          },
          "listClientOrderId": {
            "type": "string",
            "example": "h2USkA5YQpaXHPIrkd96xE"
          },
          "transactionTime": {
            "type": "integer",
            "format": "int64",
            "example": 1565245656253
          },
          "symbol": {
            "type": "string",
            "example": "LTCBTC"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_11_orders"
            }
          }
        }
      },
      "apiv3allOrderList_orders": {
        "required": [
          "clientOrderId",
          "orderId",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "clientOrderId": {
            "type": "string"
          }
        },
        "example": "[{\"symbol\":\"LTCBTC\",\"orderId\":4,\"clientOrderId\":\"oD7aesZqjEGlZrbtRpy5zB\"},{\"symbol\":\"LTCBTC\",\"orderId\":5,\"clientOrderId\":\"Jr1h6xirOxgeJOUuYQS7V3\"}]"
      },
      "inline_response_200_12": {
        "required": [
          "contingencyType",
          "isIsolated",
          "listClientOrderId",
          "listOrderStatus",
          "listStatusType",
          "orderListId",
          "orders",
          "symbol",
          "transactionTime"
        ],
        "type": "object",
        "properties": {
          "orderListId": {
            "type": "integer",
            "format": "int64",
            "example": 29
          },
          "contingencyType": {
            "type": "string",
            "example": "OCO"
          },
          "listStatusType": {
            "type": "string",
            "example": "EXEC_STARTED"
          },
          "listOrderStatus": {
            "type": "string",
            "example": "EXECUTING"
          },
          "listClientOrderId": {
            "type": "string",
            "example": "amEEAXryFzFwYF1FeRpUoZ"
          },
          "transactionTime": {
            "type": "integer",
            "format": "int64",
            "example": 1565245913483
          },
          "symbol": {
            "type": "string",
            "example": "LTCBTC"
          },
          "isIsolated": {
            "type": "boolean"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiv3allOrderList_orders"
            }
          }
        }
      },
      "apiv3openOrderList_orders": {
        "required": [
          "clientOrderId",
          "orderId",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "clientOrderId": {
            "type": "string"
          }
        },
        "example": "[{\"symbol\":\"LTCBTC\",\"orderId\":4,\"clientOrderId\":\"r3EH2N76dHfLoSZWIUw1bT\"},{\"symbol\":\"LTCBTC\",\"orderId\":5,\"clientOrderId\":\"Cv1SnyPD3qhqpbjpYEHbd2\"}]"
      },
      "inline_response_200_13": {
        "required": [
          "contingencyType",
          "listClientOrderId",
          "listOrderStatus",
          "listStatusType",
          "orderListId",
          "orders",
          "symbol",
          "transactionTime"
        ],
        "type": "object",
        "properties": {
          "orderListId": {
            "type": "integer",
            "format": "int64",
            "example": 31
          },
          "contingencyType": {
            "type": "string",
            "example": "OCO"
          },
          "listStatusType": {
            "type": "string",
            "example": "EXEC_STARTED"
          },
          "listOrderStatus": {
            "type": "string",
            "example": "EXECUTING"
          },
          "listClientOrderId": {
            "type": "string",
            "example": "wuB13fmulKj3YjdqWEcsnp"
          },
          "transactionTime": {
            "type": "integer",
            "format": "int64",
            "example": 1565246080644
          },
          "symbol": {
            "type": "string",
            "example": "LTCBTC"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiv3openOrderList_orders"
            }
          }
        }
      },
      "inline_response_200_14": {
        "required": [
          "interval",
          "intervalNum",
          "limit",
          "rateLimitType"
        ],
        "type": "object",
        "properties": {
          "rateLimitType": {
            "type": "string"
          },
          "interval": {
            "type": "string"
          },
          "intervalNum": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "inline_response_200_15": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_15_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 3
          }
        },
        "example": {
          "rows": [
            {
              "amount": "0.10000000",
              "asset": "BNB",
              "status": "CONFIRMED",
              "timestamp": 1566898617,
              "txId": 5240372201,
              "type": "ROLL_IN"
            }
          ],
          "total": 1
        }
      },
      "inline_response_200_16": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_16_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "rows": [
            {
              "isolatedSymbol": "BNBUSDT",
              "txId": 12807067523,
              "asset": "BNB",
              "principal": "0.84624403",
              "timestamp": 1555056425000,
              "status": "CONFIRMED"
            }
          ],
          "total": 1
        }
      },
      "inline_response_200_17": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_17_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_18": {
        "required": [
          "assetFullName",
          "assetName",
          "isBorrowable",
          "isMortgageable",
          "userMinBorrow",
          "userMinRepay"
        ],
        "type": "object",
        "properties": {
          "assetFullName": {
            "type": "string",
            "example": "Binance Coin"
          },
          "assetName": {
            "type": "string",
            "example": "BNB"
          },
          "isBorrowable": {
            "type": "boolean",
            "example": false
          },
          "isMortgageable": {
            "type": "boolean"
          },
          "userMinBorrow": {
            "type": "string",
            "example": "0.00000000"
          },
          "userMinRepay": {
            "type": "string",
            "example": "0.00000000"
          }
        }
      },
      "inline_response_200_19": {
        "required": [
          "base",
          "id",
          "isBuyAllowed",
          "isMarginTrade",
          "isSellAllowed",
          "quote",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 323355778339572400
          },
          "symbol": {
            "type": "string",
            "example": "BNBUSDT"
          },
          "base": {
            "type": "string",
            "example": "BTC"
          },
          "quote": {
            "type": "string",
            "example": "USDT"
          },
          "isMarginTrade": {
            "type": "boolean"
          },
          "isBuyAllowed": {
            "type": "boolean"
          },
          "isSellAllowed": {
            "type": "boolean"
          }
        }
      },
      "inline_response_200_20": {
        "required": [
          "assetFullName",
          "assetName",
          "isBorrowable",
          "isMortgageable",
          "userMinBorrow",
          "userMinRepay"
        ],
        "type": "object",
        "properties": {
          "assetFullName": {
            "type": "string",
            "example": "Binance coin"
          },
          "assetName": {
            "type": "string",
            "example": "BNB"
          },
          "isBorrowable": {
            "type": "boolean"
          },
          "isMortgageable": {
            "type": "boolean"
          },
          "userMinBorrow": {
            "type": "string",
            "example": "0.00000000"
          },
          "userMinRepay": {
            "type": "string",
            "example": "0.00000000"
          }
        }
      },
      "inline_response_200_21": {
        "required": [
          "base",
          "id",
          "isBuyAllowed",
          "isMarginTrade",
          "isSellAllowed",
          "quote",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "base": {
            "type": "string",
            "example": "BNB"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 351637150141315840
          },
          "isBuyAllowed": {
            "type": "boolean"
          },
          "isMarginTrade": {
            "type": "boolean"
          },
          "isSellAllowed": {
            "type": "boolean"
          },
          "quote": {
            "type": "string",
            "example": "BTC"
          },
          "symbol": {
            "type": "string",
            "example": "BNBBTC"
          }
        }
      },
      "inline_response_200_22": {
        "required": [
          "calcTime",
          "price",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "calcTime": {
            "type": "integer",
            "format": "int64",
            "example": 1562046418000
          },
          "price": {
            "type": "string",
            "example": "0.00333930"
          },
          "symbol": {
            "type": "string",
            "example": "BNBBTC"
          }
        }
      },
      "inline_response_200_23": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/marginOrderResponseAck"
          },
          {
            "$ref": "#/components/schemas/marginOrderResponseResult"
          },
          {
            "$ref": "#/components/schemas/marginOrderResponseFull"
          }
        ]
      },
      "inline_response_200_24": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_24_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_25": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_25_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        },
        "example": {
          "rows": [
            {
              "avgPrice": "0.00388359",
              "executedQty": "31.39000000",
              "orderId": 180015097,
              "price": "0.00388110",
              "qty": "31.39000000",
              "side": "SELL",
              "symbol": "BNBBTC",
              "timeInForce": "GTC",
              "isIsolated": true,
              "updatedTime": 1558941374745
            }
          ],
          "total": 1
        }
      },
      "inline_response_200_26": {
        "required": [
          "borrowEnabled",
          "marginLevel",
          "totalAssetOfBtc",
          "totalLiabilityOfBtc",
          "totalNetAssetOfBtc",
          "tradeEnabled",
          "transferEnabled",
          "userAssets"
        ],
        "type": "object",
        "properties": {
          "borrowEnabled": {
            "type": "boolean"
          },
          "marginLevel": {
            "type": "string",
            "example": "11.64405625"
          },
          "totalAssetOfBtc": {
            "type": "string",
            "example": "6.82728457"
          },
          "totalLiabilityOfBtc": {
            "type": "string",
            "example": "0.58633215"
          },
          "totalNetAssetOfBtc": {
            "type": "string",
            "example": "6.24095242"
          },
          "tradeEnabled": {
            "type": "boolean"
          },
          "transferEnabled": {
            "type": "boolean"
          },
          "userAssets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_26_userAssets"
            }
          }
        }
      },
      "inline_response_200_27": {
        "required": [
          "contingencyType",
          "isIsolated",
          "listClientOrderId",
          "listOrderStatus",
          "listStatusType",
          "marginBuyBorrowAmount",
          "marginBuyBorrowAsset",
          "orderListId",
          "orderReports",
          "orders",
          "symbol",
          "transactionTime"
        ],
        "type": "object",
        "properties": {
          "orderListId": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "contingencyType": {
            "type": "string",
            "example": "OCO"
          },
          "listStatusType": {
            "type": "string",
            "example": "EXEC_STARTED"
          },
          "listOrderStatus": {
            "type": "string",
            "example": "EXECUTING"
          },
          "listClientOrderId": {
            "type": "string",
            "example": "JYVpp3F0f5CAG15DhtrqLp"
          },
          "transactionTime": {
            "type": "integer",
            "format": "int64",
            "example": 1563417480525
          },
          "symbol": {
            "type": "string",
            "example": "LTCBTC"
          },
          "marginBuyBorrowAmount": {
            "type": "string",
            "description": "will not return if no margin trade happens",
            "example": "5"
          },
          "marginBuyBorrowAsset": {
            "type": "string",
            "description": "will not return if no margin trade happens",
            "example": "BTC"
          },
          "isIsolated": {
            "type": "boolean",
            "example": false
          },
          "orders": {
            "type": "array",
            "example": [
              {
                "symbol": "LTCBTC",
                "orderId": 2,
                "clientOrderId": "Kk7sqHb9J6mJWTMDVW7Vos"
              },
              {
                "symbol": "LTCBTC",
                "orderId": 3,
                "clientOrderId": "xTXKaGYd4bluPVp78IVRvl"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ocoOrder_orders"
            }
          },
          "orderReports": {
            "type": "array",
            "example": [
              {
                "symbol": "LTCBTC",
                "orderId": 2,
                "orderListId": 0,
                "clientOrderId": "Kk7sqHb9J6mJWTMDVW7Vos",
                "transactTime": 1563417480525,
                "price": "0.000000",
                "origQty": "0.624363",
                "executedQty": "0.000000",
                "cummulativeQuoteQty": "0.000000",
                "status": "NEW",
                "timeInForce": "GTC",
                "type": "STOP_LOSS",
                "side": "BUY",
                "stopPrice": "0.960664"
              },
              {
                "symbol": "LTCBTC",
                "orderId": 3,
                "orderListId": 0,
                "clientOrderId": "xTXKaGYd4bluPVp78IVRvl",
                "transactTime": 1563417480525,
                "price": "0.036435",
                "origQty": "0.624363",
                "executedQty": "0.000000",
                "cummulativeQuoteQty": "0.000000",
                "status": "NEW",
                "timeInForce": "GTC",
                "type": "LIMIT_MAKER",
                "side": "BUY"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/inline_response_200_27_orderReports"
            }
          }
        }
      },
      "inline_response_200_28": {
        "required": [
          "contingencyType",
          "isIsolated",
          "listClientOrderId",
          "listOrderStatus",
          "listStatusType",
          "orderListId",
          "orders",
          "symbol",
          "transactionTime"
        ],
        "type": "object",
        "properties": {
          "orderListId": {
            "type": "integer",
            "format": "int64",
            "example": 27
          },
          "contingencyType": {
            "type": "string",
            "example": "OCO"
          },
          "listStatusType": {
            "type": "string",
            "example": "EXEC_STARTED"
          },
          "listOrderStatus": {
            "type": "string",
            "example": "EXECUTING"
          },
          "listClientOrderId": {
            "type": "string",
            "example": "h2USkA5YQpaXHPIrkd96xE"
          },
          "transactionTime": {
            "type": "integer",
            "format": "int64",
            "example": 1565245656253
          },
          "symbol": {
            "type": "string",
            "example": "LTCBTC"
          },
          "isIsolated": {
            "type": "boolean",
            "example": false
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_11_orders"
            }
          }
        }
      },
      "inline_response_200_29": {
        "required": [
          "contingencyType",
          "isIsolated",
          "listClientOrderId",
          "listOrderStatus",
          "listStatusType",
          "orderListId",
          "orders",
          "symbol",
          "transactionTime"
        ],
        "type": "object",
        "properties": {
          "orderListId": {
            "type": "integer",
            "format": "int64",
            "example": 31
          },
          "contingencyType": {
            "type": "string",
            "example": "OCO"
          },
          "listStatusType": {
            "type": "string",
            "example": "EXEC_STARTED"
          },
          "listOrderStatus": {
            "type": "string",
            "example": "EXECUTING"
          },
          "listClientOrderId": {
            "type": "string",
            "example": "wuB13fmulKj3YjdqWEcsnp"
          },
          "transactionTime": {
            "type": "integer",
            "format": "int64",
            "example": 1565246080644
          },
          "symbol": {
            "type": "string",
            "example": "LTCBTC"
          },
          "isIsolated": {
            "type": "boolean",
            "example": false
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiv3openOrderList_orders"
            }
          }
        }
      },
      "inline_response_200_30": {
        "required": [
          "amount",
          "borrowLimit"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "account's currently max borrowable amount with sufficient system availability",
            "example": "1.69248805"
          },
          "borrowLimit": {
            "type": "string",
            "description": "max borrowable amount limited by the account level",
            "example": "60"
          }
        }
      },
      "inline_response_200_31": {
        "required": [
          "amount",
          "borrowLimit"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "Account's currently max borrowable amount with sufficient system availability"
          },
          "borrowLimit": {
            "type": "string",
            "description": "Max borrowable amount limited by the account level"
          }
        },
        "example": {
          "amount": "1.69248805",
          "borrowLimit": "60"
        }
      },
      "inline_response_200_32": {
        "required": [
          "amount",
          "borrowLimit"
        ],
        "type": "object",
        "properties": {
          "normalBar": {
            "type": "string",
            "description": "Account's currently max borrowable amount with sufficient system availability",
            "example": "1.5"
          },
          "marginCallBar": {
            "type": "string",
            "description": "Max borrowable amount limited by the account level",
            "example": "1.3"
          },
          "forceLiquidationBar": {
            "type": "string",
            "description": "Liquidation Margin Ratio",
            "example": "1.1"
          }
        }
      },
      "inline_response_200_33": {
        "required": [
          "success",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          }
        }
      },
      "inline_response_200_34": {
        "required": [
          "enabledAccount",
          "maxAccount"
        ],
        "type": "object",
        "properties": {
          "enabledAccount": {
            "type": "integer",
            "format": "int64",
            "example": 5
          },
          "maxAccount": {
            "type": "integer",
            "format": "int64",
            "example": 20
          }
        }
      },
      "inline_response_200_35": {
        "required": [
          "base",
          "isBuyAllowed",
          "isMarginTrade",
          "isSellAllowed",
          "quote",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "base": {
            "type": "string",
            "example": "BTC"
          },
          "quote": {
            "type": "string",
            "example": "USDT"
          },
          "isMarginTrade": {
            "type": "boolean"
          },
          "isBuyAllowed": {
            "type": "boolean"
          },
          "isSellAllowed": {
            "type": "boolean"
          }
        }
      },
      "inline_response_200_36": {
        "required": [
          "asset",
          "dailyInterestRate",
          "timestamp",
          "vipLevel"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "BTC"
          },
          "dailyInterestRate": {
            "type": "string",
            "example": "0.00025000"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": 1611544731000
          },
          "vipLevel": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_37": {
        "required": [
          "borrowLimit",
          "borrowable",
          "coin",
          "dailyInterest",
          "marginablePairs",
          "transferIn",
          "vipLevel",
          "yearlyInterest"
        ],
        "type": "object",
        "properties": {
          "vipLevel": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "coin": {
            "type": "string",
            "example": "BTC"
          },
          "transferIn": {
            "type": "boolean"
          },
          "borrowable": {
            "type": "boolean"
          },
          "dailyInterest": {
            "type": "string",
            "example": "0.00026125"
          },
          "yearlyInterest": {
            "type": "string",
            "example": "0.0953"
          },
          "borrowLimit": {
            "type": "string",
            "example": "180"
          },
          "marginablePairs": {
            "type": "array",
            "example": [
              "BNBBTC",
              "TRXBTC",
              "ETHBTC",
              "BTCUSDT"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "sapiv1marginisolatedMarginData_data": {
        "type": "object",
        "properties": {
          "coin": {
            "type": "string"
          },
          "dailyInterest": {
            "type": "string"
          },
          "borrowLimit": {
            "type": "string"
          }
        }
      },
      "inline_response_200_38": {
        "type": "object",
        "properties": {
          "vipLevel": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "leverage": {
            "type": "string",
            "example": "10"
          },
          "data": {
            "type": "array",
            "example": [
              {
                "coin": "BTC",
                "dailyInterest": "0.00026125",
                "borrowLimit": "270"
              },
              {
                "coin": "USDT",
                "dailyInterest": "0.000475",
                "borrowLimit": "2100000"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/sapiv1marginisolatedMarginData_data"
            }
          }
        }
      },
      "inline_response_200_39": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "tier": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "effectiveMultiple": {
            "type": "string",
            "example": "10"
          },
          "initialRiskRatio": {
            "type": "string",
            "example": "1.111"
          },
          "liquidationRiskRatio": {
            "type": "string",
            "example": "1.05"
          },
          "baseAssetMaxBorrowable": {
            "type": "string",
            "example": "9"
          },
          "quoteAssetMaxBorrowable": {
            "type": "string",
            "example": "70000"
          }
        }
      },
      "inline_response_200_40": {
        "required": [
          "count",
          "interval",
          "intervalNum",
          "limit",
          "rateLimitType"
        ],
        "type": "object",
        "properties": {
          "rateLimitType": {
            "type": "string",
            "example": "ORDERS"
          },
          "interval": {
            "type": "string",
            "example": "SECOND"
          },
          "intervalNum": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "example": 10000
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "example": 0
          }
        }
      },
      "inline_response_200_41": {
        "required": [
          "total",
          "userAssetDribblets"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64",
            "example": 8
          },
          "userAssetDribblets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_41_userAssetDribblets"
            }
          }
        }
      },
      "inline_response_200_42": {
        "required": [
          "msg",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "0: normal, 1：system maintenance",
            "format": "int32",
            "example": 0
          },
          "msg": {
            "type": "string",
            "description": "\"normal\", \"system_maintenance\"",
            "example": "normal"
          }
        }
      },
      "sapiv1capitalconfiggetall_networkList": {
        "required": [
          "addressRegex",
          "coin",
          "depositDesc",
          "depositEnable",
          "isDefault",
          "memoRegex",
          "minConfirm",
          "name",
          "network",
          "resetAddressStatus",
          "sameAddress",
          "specialTips",
          "unLockConfirm",
          "withdrawDesc",
          "withdrawEnable",
          "withdrawFee",
          "withdrawIntegerMultiple",
          "withdrawMax",
          "withdrawMin"
        ],
        "type": "object",
        "properties": {
          "addressRegex": {
            "type": "string",
            "example": "^(bnb1)[0-9a-z]{38}$"
          },
          "coin": {
            "type": "string",
            "example": "BTC"
          },
          "depositDesc": {
            "type": "string",
            "description": "shown only when \"depositEnable\" is false.",
            "example": "Wallet Maintenance, Deposit Suspended"
          },
          "depositEnable": {
            "type": "boolean",
            "example": false
          },
          "isDefault": {
            "type": "boolean",
            "example": false
          },
          "memoRegex": {
            "type": "string",
            "example": "^[0-9A-Za-z\\-_]{1,120}$"
          },
          "minConfirm": {
            "type": "integer",
            "description": "min number for balance confirmation.",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "BEP2"
          },
          "network": {
            "type": "string",
            "example": "ETH"
          },
          "resetAddressStatus": {
            "type": "boolean",
            "example": false
          },
          "specialTips": {
            "type": "string",
            "example": "Both a MEMO and an Address are required to successfully deposit your BEP2-BTCB tokens to Binance."
          },
          "unLockConfirm": {
            "type": "integer",
            "description": "confirmation number for balance unlock.",
            "format": "int64",
            "example": 0
          },
          "withdrawDesc": {
            "type": "string",
            "description": "shown only when \"withdrawEnable\" is false",
            "example": "Wallet Maintenance, Withdrawal Suspended"
          },
          "withdrawEnable": {
            "type": "boolean",
            "example": false
          },
          "withdrawFee": {
            "type": "string",
            "example": "0.00000220"
          },
          "withdrawIntegerMultiple": {
            "type": "string",
            "example": "0.00000001"
          },
          "withdrawMax": {
            "type": "string",
            "example": "9999999999.99999999"
          },
          "withdrawMin": {
            "type": "string",
            "example": "0.00000440"
          },
          "sameAddress": {
            "type": "boolean"
          }
        }
      },
      "inline_response_200_43": {
        "required": [
          "coin",
          "depositAllEnable",
          "free",
          "freeze",
          "ipoable",
          "ipoing",
          "isLegalMoney",
          "locked",
          "name",
          "networkList",
          "storage",
          "trading",
          "withdrawAllEnable",
          "withdrawing"
        ],
        "type": "object",
        "properties": {
          "coin": {
            "type": "string",
            "example": "BTC"
          },
          "depositAllEnable": {
            "type": "boolean"
          },
          "free": {
            "type": "string",
            "example": "0.00000000"
          },
          "freeze": {
            "type": "string",
            "example": "0.00000000"
          },
          "ipoable": {
            "type": "string",
            "example": "0.00000000"
          },
          "ipoing": {
            "type": "string",
            "example": "0.00000000"
          },
          "isLegalMoney": {
            "type": "boolean",
            "example": false
          },
          "locked": {
            "type": "string",
            "example": "0.00000000"
          },
          "name": {
            "type": "string",
            "example": "Bitcoin"
          },
          "networkList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sapiv1capitalconfiggetall_networkList"
            }
          },
          "storage": {
            "type": "string",
            "example": "0.00000000"
          },
          "trading": {
            "type": "boolean"
          },
          "withdrawAllEnable": {
            "type": "boolean"
          },
          "withdrawing": {
            "type": "string",
            "example": "0.00000000"
          }
        }
      },
      "inline_response_200_44": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/snapshotSpot"
          },
          {
            "$ref": "#/components/schemas/snapshotMargin"
          },
          {
            "$ref": "#/components/schemas/snapshotFutures"
          }
        ]
      },
      "inline_response_200_45": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "7213fea8e94b4a5593d507237e5a555b"
          }
        }
      },
      "inline_response_200_46": {
        "required": [
          "address",
          "addressTag",
          "amount",
          "coin",
          "confirmTimes",
          "insertTime",
          "network",
          "status",
          "transferType",
          "txId",
          "unlockConfirm"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": "0.00999800"
          },
          "coin": {
            "type": "string",
            "example": "PAXG"
          },
          "network": {
            "type": "string",
            "example": "ETH"
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "address": {
            "type": "string",
            "example": "0x788cabe9236ce061e5a892e1a59395a81fc8d62c"
          },
          "addressTag": {
            "type": "string",
            "example": ""
          },
          "txId": {
            "type": "string",
            "example": "0xaad4654a3234aa6118af9b4b335f5ae81c360b2394721c019b5d1e75328b09f3"
          },
          "insertTime": {
            "type": "integer",
            "format": "int64",
            "example": 1599621997000
          },
          "transferType": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "unlockConfirm": {
            "type": "string",
            "description": "confirm times for unlocking",
            "example": "12/12"
          },
          "confirmTimes": {
            "type": "string",
            "example": "12/12"
          }
        }
      },
      "inline_response_200_47": {
        "required": [
          "address",
          "amount",
          "applyTime",
          "coin",
          "id",
          "network",
          "status",
          "transactionFee",
          "transferType",
          "txId",
          "withdrawOrderId"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "example": "0x94df8b352de7f46f64b01d3666bf6e936e44ce60"
          },
          "amount": {
            "type": "string",
            "example": "8.91000000"
          },
          "applyTime": {
            "type": "string",
            "example": "2019-10-12 11:12:02"
          },
          "coin": {
            "type": "string",
            "example": "USDT"
          },
          "id": {
            "type": "string",
            "example": "b6ae22b3aa844210a7041aee7589627c"
          },
          "withdrawOrderId": {
            "type": "string",
            "description": "will not be returned if there's no withdrawOrderId for this withdraw.",
            "example": "WITHDRAWtest123"
          },
          "network": {
            "type": "string",
            "example": "ETH"
          },
          "transferType": {
            "type": "integer",
            "description": "1 for internal transfer, 0 for external transfer",
            "format": "int32",
            "example": 0
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "example": 6
          },
          "transactionFee": {
            "type": "string",
            "example": "0.004"
          },
          "confirmNo": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "info": {
            "type": "string",
            "description": "Reason for withdrawal failure",
            "example": "The address is not valid. Please confirm with the recipient"
          },
          "txId": {
            "type": "string",
            "example": "0xb5ef8c13b968a406cc62a93a8bd80f9e9a906ef1b3fcf20a2e48573c17659268"
          }
        }
      },
      "inline_response_200_48": {
        "required": [
          "address",
          "coin",
          "tag",
          "url"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "example": "1HPn8Rx2y6nNSfagQBKy27GB99Vbzg89wv"
          },
          "coin": {
            "type": "string",
            "example": "BTC"
          },
          "tag": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "https://btc.com/1HPn8Rx2y6nNSfagQBKy27GB99Vbzg89wv"
          }
        }
      },
      "inline_response_200_49": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "example": "Normal"
          }
        }
      },
      "inline_response_200_50": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_50_data"
          }
        }
      },
      "inline_response_200_51": {
        "required": [
          "total",
          "userAssetDribblets"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total counts of exchange",
            "format": "int64",
            "example": 8
          },
          "userAssetDribblets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_51_userAssetDribblets"
            }
          }
        }
      },
      "inline_response_200_52": {
        "required": [
          "details",
          "dribbletPercentage",
          "totalTransferBNB",
          "totalTransferBtc"
        ],
        "type": "object",
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_52_details"
            }
          },
          "totalTransferBtc": {
            "type": "string",
            "example": "0.00016848"
          },
          "totalTransferBNB": {
            "type": "string",
            "example": "0.01777302"
          },
          "dribbletPercentage": {
            "type": "string",
            "description": "Commission fee",
            "example": "0.02"
          }
        }
      },
      "inline_response_200_53": {
        "required": [
          "totalServiceCharge",
          "totalTransfered",
          "transferResult"
        ],
        "type": "object",
        "properties": {
          "totalServiceCharge": {
            "type": "string",
            "example": "0.02102542"
          },
          "totalTransfered": {
            "type": "string",
            "example": "1.05127099"
          },
          "transferResult": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_53_transferResult"
            }
          }
        }
      },
      "inline_response_200_54": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_54_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_55": {
        "required": [
          "CTR"
        ],
        "type": "object",
        "properties": {
          "CTR": {
            "$ref": "#/components/schemas/inline_response_200_55_CTR"
          }
        }
      },
      "inline_response_200_56": {
        "required": [
          "makerCommission",
          "symbol",
          "takerCommission"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "ADABNB"
          },
          "makerCommission": {
            "type": "string",
            "example": "0.001"
          },
          "takerCommission": {
            "type": "string",
            "example": "0.001"
          }
        }
      },
      "inline_response_200_57": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_57_rows"
            }
          }
        }
      },
      "inline_response_200_58": {
        "required": [
          "tranId"
        ],
        "type": "object",
        "properties": {
          "tranId": {
            "type": "integer",
            "format": "int64",
            "example": 13526853623
          }
        }
      },
      "inline_response_200_59": {
        "required": [
          "asset",
          "btcValuation",
          "free",
          "freeze",
          "locked",
          "withdrawing"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "USDT"
          },
          "free": {
            "type": "string",
            "example": "1"
          },
          "locked": {
            "type": "string",
            "example": "0"
          },
          "freeze": {
            "type": "string",
            "example": "0"
          },
          "withdrawing": {
            "type": "string",
            "example": "0"
          },
          "btcValuation": {
            "type": "string",
            "example": "0.00000091"
          }
        }
      },
      "inline_response_200_60": {
        "required": [
          "asset",
          "btcValuation",
          "free",
          "freeze",
          "ipoable",
          "locked",
          "withdrawing"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "AVAX"
          },
          "free": {
            "type": "string",
            "example": "1"
          },
          "locked": {
            "type": "string",
            "example": "0"
          },
          "freeze": {
            "type": "string",
            "example": "0"
          },
          "withdrawing": {
            "type": "string",
            "example": "0"
          },
          "ipoable": {
            "type": "string",
            "example": "0"
          },
          "btcValuation": {
            "type": "string",
            "example": "0"
          }
        }
      },
      "inline_response_200_61": {
        "required": [
          "status",
          "tranId"
        ],
        "type": "object",
        "properties": {
          "tranId": {
            "type": "integer",
            "format": "int64",
            "example": 118263407119
          },
          "status": {
            "type": "string",
            "example": "S"
          }
        }
      },
      "inline_response_200_62": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_62_rows"
            }
          }
        }
      },
      "inline_response_200_63": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_63_rows"
            }
          }
        }
      },
      "inline_response_200_64": {
        "required": [
          "createTime",
          "enableFutures",
          "enableInternalTransfer",
          "enableMargin",
          "enableReading",
          "enableSpotAndMarginTrading",
          "enableVanillaOptions",
          "enableWithdrawals",
          "ipRestrict",
          "permitsUniversalTransfer",
          "tradingAuthorityExpirationTime"
        ],
        "type": "object",
        "properties": {
          "ipRestrict": {
            "type": "boolean",
            "example": false
          },
          "createTime": {
            "type": "integer",
            "format": "int64",
            "example": 1623840271000
          },
          "enableWithdrawals": {
            "type": "boolean",
            "description": "This option allows you to withdraw via API. You must apply the IP Access Restriction filter in order to enable withdrawals",
            "example": false
          },
          "enableInternalTransfer": {
            "type": "boolean",
            "description": "This option authorizes this key to transfer funds between your master account and your sub account instantly"
          },
          "permitsUniversalTransfer": {
            "type": "boolean",
            "description": "Authorizes this key to be used for a dedicated universal transfer API to transfer multiple supported currencies. Each business's own transfer API rights are not affected by this authorization"
          },
          "enableVanillaOptions": {
            "type": "boolean",
            "description": "Authorizes this key to Vanilla options trading",
            "example": false
          },
          "enableReading": {
            "type": "boolean"
          },
          "enableFutures": {
            "type": "boolean",
            "description": "API Key created before your futures account opened does not support futures API service",
            "example": false
          },
          "enableMargin": {
            "type": "boolean",
            "description": "This option can be adjusted after the Cross Margin account transfer is completed",
            "example": false
          },
          "enableSpotAndMarginTrading": {
            "type": "boolean",
            "example": false
          },
          "tradingAuthorityExpirationTime": {
            "type": "integer",
            "description": "Expiration time for spot and margin trading permission",
            "format": "int64",
            "example": 1628985600000
          }
        }
      },
      "inline_response_200_65": {
        "required": [
          "coins",
          "convertEnabled",
          "exchangeRates"
        ],
        "type": "object",
        "properties": {
          "convertEnabled": {
            "type": "boolean"
          },
          "coins": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "USDC"
            }
          },
          "exchangeRates": {
            "$ref": "#/components/schemas/inline_response_200_65_exchangeRates"
          }
        }
      },
      "inline_response_200_66": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "addsdd_virtual@aasaixwqnoemail.com"
          }
        }
      },
      "inline_response_200_67": {
        "required": [
          "subAccounts"
        ],
        "type": "object",
        "properties": {
          "subAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_67_subAccounts"
            }
          }
        }
      },
      "inline_response_200_68": {
        "required": [
          "asset",
          "from",
          "qty",
          "status",
          "time",
          "to",
          "tranId"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "example": "aaa@test.com"
          },
          "to": {
            "type": "string",
            "example": "bbb@test.com"
          },
          "asset": {
            "type": "string",
            "example": "BTC"
          },
          "qty": {
            "type": "string",
            "example": "10"
          },
          "status": {
            "type": "string",
            "example": "SUCCESS"
          },
          "tranId": {
            "type": "integer",
            "format": "int64",
            "example": 6489943656
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "example": 1544433328000
          }
        }
      },
      "inline_response_200_69": {
        "required": [
          "futuresType",
          "success",
          "transfers"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "futuresType": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "transfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_69_transfers"
            }
          }
        }
      },
      "inline_response_200_70": {
        "required": [
          "success",
          "txnId"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "txnId": {
            "type": "string",
            "example": "2934662589"
          }
        }
      },
      "inline_response_200_71": {
        "required": [
          "balances"
        ],
        "type": "object",
        "properties": {
          "balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_71_balances"
            }
          }
        }
      },
      "inline_response_200_72": {
        "required": [
          "masterAccountTotalAsset",
          "spotSubUserAssetBtcVoList",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "masterAccountTotalAsset": {
            "type": "string",
            "example": "0.23231201"
          },
          "spotSubUserAssetBtcVoList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_72_spotSubUserAssetBtcVoList"
            }
          }
        }
      },
      "inline_response_200_73": {
        "required": [
          "address",
          "coin",
          "tag",
          "url"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "example": "TDunhSa7jkTNuKrusUTU1MUHtqXoBPKETV"
          },
          "coin": {
            "type": "string",
            "example": "USDT"
          },
          "tag": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "https://tronscan.org/#/address/TDunhSa7jkTNuKrusUTU1MUHtqXoBPKETV"
          }
        }
      },
      "inline_response_200_74": {
        "required": [
          "address",
          "addressTag",
          "amount",
          "coin",
          "confirmTimes",
          "insertTime",
          "network",
          "status",
          "transferType",
          "txId"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": "0.00999800"
          },
          "coin": {
            "type": "string",
            "example": "PAXG"
          },
          "network": {
            "type": "string",
            "example": "ETH"
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "address": {
            "type": "string",
            "example": "0x788cabe9236ce061e5a892e1a59395a81fc8d62c"
          },
          "addressTag": {
            "type": "string",
            "example": ""
          },
          "txId": {
            "type": "string",
            "example": "0xaad4654a3234aa6118af9b4b335f5ae81c360b2394721c019b5d1e75328b09f3"
          },
          "insertTime": {
            "type": "integer",
            "format": "int64",
            "example": 1599621997000
          },
          "transferType": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "confirmTimes": {
            "type": "string",
            "example": "12/12"
          }
        }
      },
      "inline_response_200_75": {
        "required": [
          "email",
          "insertTime",
          "isFutureEnabled",
          "isMarginEnabled",
          "isSubUserEnabled",
          "isUserActive",
          "mobile"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "123@test.com"
          },
          "isSubUserEnabled": {
            "type": "boolean"
          },
          "isUserActive": {
            "type": "boolean"
          },
          "insertTime": {
            "type": "integer",
            "description": "sub account create time",
            "format": "int64",
            "example": 1570791523523
          },
          "isMarginEnabled": {
            "type": "boolean"
          },
          "isFutureEnabled": {
            "type": "boolean"
          },
          "mobile": {
            "type": "integer",
            "description": "user mobile number",
            "format": "int64",
            "example": 1570791523523
          }
        }
      },
      "inline_response_200_76": {
        "required": [
          "email",
          "isMarginEnabled"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "123@test.com"
          },
          "isMarginEnabled": {
            "type": "boolean"
          }
        }
      },
      "inline_response_200_77": {
        "required": [
          "email",
          "marginLevel",
          "marginTradeCoeffVo",
          "marginUserAssetVoList",
          "totalAssetOfBtc",
          "totalLiabilityOfBtc",
          "totalNetAssetOfBtc"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "123@test.com"
          },
          "marginLevel": {
            "type": "string",
            "example": "11.64405625"
          },
          "totalAssetOfBtc": {
            "type": "string",
            "example": "6.82728457"
          },
          "totalLiabilityOfBtc": {
            "type": "string",
            "example": "0.58633215"
          },
          "totalNetAssetOfBtc": {
            "type": "string",
            "example": "6.24095242"
          },
          "marginTradeCoeffVo": {
            "$ref": "#/components/schemas/inline_response_200_77_marginTradeCoeffVo"
          },
          "marginUserAssetVoList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_26_userAssets"
            }
          }
        }
      },
      "inline_response_200_78": {
        "required": [
          "subAccountList",
          "totalAssetOfBtc",
          "totalLiabilityOfBtc",
          "totalNetAssetOfBtc"
        ],
        "type": "object",
        "properties": {
          "totalAssetOfBtc": {
            "type": "string",
            "example": "4.33333333"
          },
          "totalLiabilityOfBtc": {
            "type": "string",
            "example": "2.11111112"
          },
          "totalNetAssetOfBtc": {
            "type": "string",
            "example": "2.22222221"
          },
          "subAccountList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_78_subAccountList"
            }
          }
        }
      },
      "inline_response_200_79": {
        "required": [
          "email",
          "isFuturesEnabled"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "123@test.com"
          },
          "isFuturesEnabled": {
            "type": "boolean"
          }
        }
      },
      "inline_response_200_80": {
        "required": [
          "asset",
          "assets",
          "canDeposit",
          "canTrade",
          "canWithdraw",
          "email",
          "feeTier",
          "maxWithdrawAmount",
          "totalInitialMargin",
          "totalMaintenanceMargin",
          "totalMarginBalance",
          "totalOpenOrderInitialMargin",
          "totalPositionInitialMargin",
          "totalUnrealizedProfit",
          "totalWalletBalance",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "abc@test.com"
          },
          "asset": {
            "type": "string",
            "example": "USDT"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/subAccountUSDTFuturesDetails_futureAccountResp_assets"
            }
          },
          "canDeposit": {
            "type": "boolean"
          },
          "canTrade": {
            "type": "boolean"
          },
          "canWithdraw": {
            "type": "boolean"
          },
          "feeTier": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "maxWithdrawAmount": {
            "type": "string",
            "example": "0.88308000"
          },
          "totalInitialMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalMaintenanceMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalMarginBalance": {
            "type": "string",
            "example": "0.88308000"
          },
          "totalOpenOrderInitialMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalPositionInitialMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalUnrealizedProfit": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalWalletBalance": {
            "type": "string",
            "example": "0.88308000"
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1576756674610
          }
        }
      },
      "inline_response_200_81": {
        "required": [
          "asset",
          "subAccountList",
          "totalInitialMargin",
          "totalMaintenanceMargin",
          "totalMarginBalance",
          "totalOpenOrderInitialMargin",
          "totalPositionInitialMargin",
          "totalUnrealizedProfit",
          "totalWalletBalance"
        ],
        "type": "object",
        "properties": {
          "totalInitialMargin": {
            "type": "string",
            "example": "9.83137400"
          },
          "totalMaintenanceMargin": {
            "type": "string",
            "example": "0.41568700"
          },
          "totalMarginBalance": {
            "type": "string",
            "example": "23.03235621"
          },
          "totalOpenOrderInitialMargin": {
            "type": "string",
            "example": "9.00000000"
          },
          "totalPositionInitialMargin": {
            "type": "string",
            "example": "0.83137400"
          },
          "totalUnrealizedProfit": {
            "type": "string",
            "example": "0.03219710"
          },
          "totalWalletBalance": {
            "type": "string",
            "example": "22.15879444"
          },
          "asset": {
            "type": "string",
            "example": "USD"
          },
          "subAccountList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_81_subAccountList"
            }
          }
        }
      },
      "inline_response_200_82": {
        "required": [
          "entryPrice",
          "leverage",
          "liquidationPrice",
          "markPrice",
          "maxNotional",
          "positionAmount",
          "symbol",
          "unrealizedProfit"
        ],
        "type": "object",
        "properties": {
          "entryPrice": {
            "type": "string",
            "example": "9975.12000"
          },
          "leverage": {
            "type": "string",
            "description": "current initial leverage",
            "example": "50"
          },
          "maxNotional": {
            "type": "string",
            "description": "notional value limit of current initial leverage",
            "example": "1000000"
          },
          "liquidationPrice": {
            "type": "string",
            "example": "7963.54"
          },
          "markPrice": {
            "type": "string",
            "example": "9973.50770517"
          },
          "positionAmount": {
            "type": "string",
            "example": "0.010"
          },
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "unrealizedProfit": {
            "type": "string",
            "example": "-0.01612295"
          }
        }
      },
      "inline_response_200_83": {
        "required": [
          "txnId"
        ],
        "type": "object",
        "properties": {
          "txnId": {
            "type": "string",
            "example": "2966662589"
          }
        }
      },
      "inline_response_200_84": {
        "required": [
          "asset",
          "counterParty",
          "email",
          "fromAccountType",
          "qty",
          "status",
          "time",
          "toAccountType",
          "tranId",
          "type"
        ],
        "type": "object",
        "properties": {
          "counterParty": {
            "type": "string",
            "example": "master"
          },
          "email": {
            "type": "string",
            "example": "master@test.com"
          },
          "type": {
            "type": "integer",
            "description": "1 for transfer in, 2 for transfer out",
            "format": "int32",
            "example": 1
          },
          "asset": {
            "type": "string",
            "example": "BTC"
          },
          "qty": {
            "type": "string",
            "example": "1"
          },
          "fromAccountType": {
            "type": "string",
            "example": "SPOT"
          },
          "toAccountType": {
            "type": "string",
            "example": "SPOT"
          },
          "status": {
            "type": "string",
            "example": "SUCCESS"
          },
          "tranId": {
            "type": "integer",
            "format": "int64",
            "example": 11798835829
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "example": 1544433325000
          }
        }
      },
      "inline_response_200_85": {
        "required": [
          "amount",
          "asset",
          "clientTranId",
          "createTimeStamp",
          "fromAccountType",
          "fromEmail",
          "status",
          "toAccountType",
          "toEmail",
          "tranId"
        ],
        "type": "object",
        "properties": {
          "tranId": {
            "type": "integer",
            "format": "int64",
            "example": 11945860693
          },
          "fromEmail": {
            "type": "string",
            "example": "master@test.com"
          },
          "toEmail": {
            "type": "string",
            "example": "subaccount1@test.com"
          },
          "asset": {
            "type": "string",
            "example": "BTC"
          },
          "amount": {
            "type": "string",
            "example": "0.1"
          },
          "fromAccountType": {
            "type": "string",
            "example": "SPOT"
          },
          "toAccountType": {
            "type": "string",
            "example": "COIN_FUTURE"
          },
          "status": {
            "type": "string",
            "example": "SUCCESS"
          },
          "createTimeStamp": {
            "type": "integer",
            "format": "int64",
            "example": 1544433325000
          },
          "clientTranId": {
            "type": "string",
            "example": "11945860694"
          }
        }
      },
      "inline_response_200_86": {
        "required": [
          "clientTranId",
          "tranId"
        ],
        "type": "object",
        "properties": {
          "tranId": {
            "type": "integer",
            "format": "int64",
            "example": 11945860693
          },
          "clientTranId": {
            "type": "string",
            "example": "11945860694"
          }
        }
      },
      "inline_response_200_87": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/subAccountUSDTFuturesDetails"
          },
          {
            "$ref": "#/components/schemas/subAccountCOINFuturesDetails"
          }
        ]
      },
      "inline_response_200_88": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/subAccountUSDTFuturesSummary"
          },
          {
            "$ref": "#/components/schemas/subAccountCOINFuturesSummary"
          }
        ]
      },
      "inline_response_200_89": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/subAccountUSDTFuturesPositionRisk"
          },
          {
            "$ref": "#/components/schemas/subAccountCOINFuturesPositionRisk"
          }
        ]
      },
      "inline_response_200_90": {
        "required": [
          "email",
          "enableBlvt"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "123@test.com"
          },
          "enableBlvt": {
            "type": "boolean"
          }
        }
      },
      "inline_response_200_91": {
        "required": [
          "tranId"
        ],
        "type": "object",
        "properties": {
          "tranId": {
            "type": "integer",
            "format": "int64",
            "example": 66157362489
          }
        }
      },
      "inline_response_200_92": {
        "required": [
          "availableBalance",
          "btcValue",
          "coin",
          "inOrder",
          "name",
          "totalBalance"
        ],
        "type": "object",
        "properties": {
          "coin": {
            "type": "string",
            "example": "INJ"
          },
          "name": {
            "type": "string",
            "example": "Injective Protocol"
          },
          "totalBalance": {
            "type": "string",
            "example": "0"
          },
          "availableBalance": {
            "type": "string",
            "example": "0"
          },
          "inOrder": {
            "type": "string",
            "example": "0"
          },
          "btcValue": {
            "type": "string",
            "example": "0"
          }
        }
      },
      "inline_response_200_93": {
        "required": [
          "code",
          "msg",
          "snapshotVos"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "example": 200
          },
          "msg": {
            "type": "string",
            "example": ""
          },
          "snapshotVos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_93_snapshotVos"
            }
          }
        }
      },
      "inline_response_200_94": {
        "required": [
          "apiKey",
          "ipList",
          "ipRestrict",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "ipRestrict": {
            "type": "string",
            "example": "true"
          },
          "ipList": {
            "type": "array",
            "example": [
              "69.210.67.14",
              "8.34.21.10"
            ],
            "items": {
              "type": "string"
            }
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1636369557189
          },
          "apiKey": {
            "type": "string",
            "example": "k5V49ldtn4tszj6W3hystegdfvmGbqDzjmkCtpTvC0G74WhK7yd4rfCTo4lShf"
          }
        }
      },
      "inline_response_200_95": {
        "required": [
          "apiKey",
          "ipList",
          "ipRestrict",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "ipRestrict": {
            "type": "string",
            "example": "true"
          },
          "ipList": {
            "type": "array",
            "example": [
              "69.210.67.14",
              "thirdPartyName"
            ],
            "items": {
              "type": "string"
            }
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1636369557189
          },
          "apiKey": {
            "type": "string",
            "example": "k5V49ldtn4tszj6W3hystegdfvmGbqDzjmkCtpTvC0G74WhK7yd4rfCTo4lShf"
          }
        }
      },
      "inline_response_200_96": {
        "required": [
          "thirdPartyName"
        ],
        "type": "object",
        "properties": {
          "thirdPartyName": {
            "type": "array",
            "example": [
              "thirdPartyName1",
              "thirdPartyName2"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "inline_response_200_97": {
        "required": [
          "apiKey",
          "ipList",
          "status",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "2"
          },
          "ipList": {
            "type": "array",
            "example": [
              "69.210.67.14",
              "8.34.21.10",
              "thirdPartyName"
            ],
            "items": {
              "type": "string"
            }
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1636369557189
          },
          "apiKey": {
            "type": "string",
            "example": "k5V49ldtn4tszj6W3hystegdfvmGbqDzjmkCtpTvC0G74WhK7yd4rfCTo4lShf"
          }
        }
      },
      "inline_response_200_98": {
        "required": [
          "listenKey"
        ],
        "type": "object",
        "properties": {
          "listenKey": {
            "type": "string",
            "example": "pqia91ma19a5s61cv6a81va65sdf19v8a65a1a5s61cv6a81va65sdf19v8a65a1"
          }
        }
      },
      "inline_response_200_99": {
        "required": [
          "listenKey"
        ],
        "type": "object",
        "properties": {
          "listenKey": {
            "type": "string",
            "example": "T3ee22BIYuWqmvne0HNq2A2WsFlEtLhvWCtItw6ffhhdmjifQ2tRbuKkTHhr"
          }
        }
      },
      "inline_response_200_100": {
        "required": [
          "code",
          "data",
          "message",
          "success",
          "total"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "000000"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_100_data"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "inline_response_200_101": {
        "required": [
          "code",
          "data",
          "message",
          "success",
          "total"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "000000"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_101_data"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "inline_response_200_102": {
        "required": [
          "asset",
          "avgAnnualInterestRate",
          "canPurchase",
          "canRedeem",
          "dailyInterestPerThousand",
          "featured",
          "minPurchaseAmount",
          "productId",
          "purchasedAmount",
          "status",
          "upLimit",
          "upLimitPerUser"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "BTC"
          },
          "avgAnnualInterestRate": {
            "type": "string",
            "example": "0.00250025"
          },
          "canPurchase": {
            "type": "boolean"
          },
          "canRedeem": {
            "type": "boolean"
          },
          "dailyInterestPerThousand": {
            "type": "string",
            "example": "0.00685000"
          },
          "featured": {
            "type": "boolean"
          },
          "minPurchaseAmount": {
            "type": "string",
            "example": "0.01000000"
          },
          "productId": {
            "type": "string",
            "example": "BTC001"
          },
          "purchasedAmount": {
            "type": "string",
            "example": "16.32467016"
          },
          "status": {
            "type": "string",
            "example": "PURCHASING"
          },
          "upLimit": {
            "type": "string",
            "example": "200.00000000"
          },
          "upLimitPerUser": {
            "type": "string",
            "example": "5.00000000"
          }
        }
      },
      "inline_response_200_103": {
        "required": [
          "asset",
          "leftQuota"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "BUSD"
          },
          "leftQuota": {
            "type": "string",
            "example": "50000.00000000"
          }
        }
      },
      "inline_response_200_104": {
        "required": [
          "purchaseId"
        ],
        "type": "object",
        "properties": {
          "purchaseId": {
            "type": "integer",
            "format": "int64",
            "example": 40607
          }
        }
      },
      "inline_response_200_105": {
        "required": [
          "asset",
          "dailyQuota",
          "leftQuota",
          "minRedemptionAmount"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "USDT"
          },
          "dailyQuota": {
            "type": "string",
            "example": "10000000.00000000"
          },
          "leftQuota": {
            "type": "string",
            "example": "0.00000000"
          },
          "minRedemptionAmount": {
            "type": "string",
            "example": "0.10000000"
          }
        }
      },
      "inline_response_200_106": {
        "required": [
          "annualInterestRate",
          "asset",
          "avgAnnualInterestRate",
          "canRedeem",
          "dailyInterestRate",
          "freeAmount",
          "freezeAmount",
          "lockedAmount",
          "productId",
          "productName",
          "redeemingAmount",
          "todayPurchasedAmount",
          "totalAmount",
          "totalInterest"
        ],
        "type": "object",
        "properties": {
          "annualInterestRate": {
            "type": "string",
            "example": "0.02600000"
          },
          "asset": {
            "type": "string",
            "example": "USDT"
          },
          "avgAnnualInterestRate": {
            "type": "string",
            "example": "0.02599895"
          },
          "canRedeem": {
            "type": "boolean"
          },
          "dailyInterestRate": {
            "type": "string",
            "example": "0.00007123"
          },
          "freeAmount": {
            "type": "string",
            "example": "75.46000000"
          },
          "freezeAmount": {
            "type": "string",
            "example": "0.00000000"
          },
          "lockedAmount": {
            "type": "string",
            "example": "0.00000000"
          },
          "productId": {
            "type": "string",
            "example": "USDT001"
          },
          "productName": {
            "type": "string",
            "example": "USDT"
          },
          "redeemingAmount": {
            "type": "string",
            "example": "0.00000000"
          },
          "todayPurchasedAmount": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalAmount": {
            "type": "string",
            "example": "75.46000000"
          },
          "totalInterest": {
            "type": "string",
            "example": "0.22759183"
          }
        }
      },
      "inline_response_200_107": {
        "required": [
          "asset",
          "displayPriority",
          "duration",
          "interestPerLot",
          "interestRate",
          "lotSize",
          "lotsLowLimit",
          "lotsPurchased",
          "lotsUpLimit",
          "maxLotsPerUser",
          "needKyc",
          "projectId",
          "projectName",
          "status",
          "type",
          "withAreaLimitation"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "USDT"
          },
          "displayPriority": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "example": 90
          },
          "interestPerLot": {
            "type": "string",
            "example": "1.35810000"
          },
          "interestRate": {
            "type": "string",
            "example": "0.05510000"
          },
          "lotSize": {
            "type": "string",
            "example": "100.00000000"
          },
          "lotsLowLimit": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "lotsPurchased": {
            "type": "integer",
            "format": "int64",
            "example": 74155
          },
          "lotsUpLimit": {
            "type": "integer",
            "format": "int64",
            "example": 80000
          },
          "maxLotsPerUser": {
            "type": "integer",
            "format": "int64",
            "example": 2000
          },
          "needKyc": {
            "type": "boolean"
          },
          "projectId": {
            "type": "string",
            "example": "CUSDT90DAYSS001"
          },
          "projectName": {
            "type": "string",
            "example": "USDT"
          },
          "status": {
            "type": "string",
            "example": "PURCHASING"
          },
          "type": {
            "type": "string",
            "example": "CUSTOMIZED_FIXED"
          },
          "withAreaLimitation": {
            "type": "boolean"
          }
        }
      },
      "inline_response_200_108": {
        "required": [
          "purchaseId"
        ],
        "type": "object",
        "properties": {
          "purchaseId": {
            "type": "string",
            "example": "18356"
          }
        }
      },
      "inline_response_200_109": {
        "required": [
          "asset",
          "canTransfer",
          "createTimestamp",
          "duration",
          "endTime",
          "interest",
          "interestRate",
          "lot",
          "positionId",
          "principal",
          "projectId",
          "projectName",
          "purchaseTime",
          "redeemDate",
          "startTime",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "USDT"
          },
          "canTransfer": {
            "type": "boolean"
          },
          "createTimestamp": {
            "type": "integer",
            "format": "int64",
            "example": 1587010770000
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "example": 14
          },
          "endTime": {
            "type": "integer",
            "format": "int64",
            "example": 1588291200000
          },
          "interest": {
            "type": "string",
            "example": "0.19950000"
          },
          "interestRate": {
            "type": "string",
            "example": "0.05201250"
          },
          "lot": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "positionId": {
            "type": "integer",
            "format": "int64",
            "example": 51724
          },
          "principal": {
            "type": "string",
            "example": "100.00000000"
          },
          "projectId": {
            "type": "string",
            "example": "CUSDT14DAYSS001"
          },
          "projectName": {
            "type": "string",
            "example": "USDT"
          },
          "purchaseTime": {
            "type": "integer",
            "format": "int64",
            "example": 1587010771000
          },
          "redeemDate": {
            "type": "string",
            "format": "date",
            "example": "2020-05-01"
          },
          "startTime": {
            "type": "integer",
            "format": "int64",
            "example": 1587081600000
          },
          "status": {
            "type": "string",
            "example": "HOLDING"
          },
          "type": {
            "type": "string",
            "example": "CUSTOMIZED_FIXED"
          }
        }
      },
      "inline_response_200_110": {
        "required": [
          "positionAmountVos",
          "totalAmountInBTC",
          "totalAmountInUSDT",
          "totalFixedAmountInBTC",
          "totalFixedAmountInUSDT",
          "totalFlexibleInBTC",
          "totalFlexibleInUSDT"
        ],
        "type": "object",
        "properties": {
          "positionAmountVos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_110_positionAmountVos"
            }
          },
          "totalAmountInBTC": {
            "type": "string",
            "example": "0.01067982"
          },
          "totalAmountInUSDT": {
            "type": "string",
            "example": "77.13289230"
          },
          "totalFixedAmountInBTC": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalFixedAmountInUSDT": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalFlexibleInBTC": {
            "type": "string",
            "example": "0.01067982"
          },
          "totalFlexibleInUSDT": {
            "type": "string",
            "example": "77.13289230"
          }
        }
      },
      "inline_response_200_111": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/savingsFlexiblePurchaseRecord"
          },
          {
            "$ref": "#/components/schemas/savingsFixedActivityPurchaseRecord"
          }
        ]
      },
      "inline_response_200_112": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/savingsFlexibleRedemptionRecord"
          },
          {
            "$ref": "#/components/schemas/savingsFixedActivityRedemptionRecord"
          }
        ]
      },
      "inline_response_200_113": {
        "required": [
          "asset",
          "interest",
          "lendingType",
          "productName",
          "time"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "BUSD"
          },
          "interest": {
            "type": "string",
            "example": "0.00006408"
          },
          "lendingType": {
            "type": "string",
            "example": "DAILY"
          },
          "productName": {
            "type": "string",
            "example": "BUSD"
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "example": 1577233578000
          }
        }
      },
      "inline_response_200_114": {
        "required": [
          "dailyPurchaseId",
          "success",
          "time"
        ],
        "type": "object",
        "properties": {
          "dailyPurchaseId": {
            "type": "integer",
            "format": "int64",
            "example": 862290
          },
          "success": {
            "type": "boolean"
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "example": 1577233578000
          }
        }
      },
      "sapiv1stakingproductList_detail": {
        "required": [
          "apy",
          "asset",
          "duration",
          "renewable",
          "rewardAsset"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "AXS"
          },
          "rewardAsset": {
            "type": "string",
            "example": "AXS"
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "example": 90
          },
          "renewable": {
            "type": "boolean",
            "example": true
          },
          "apy": {
            "type": "string",
            "example": "1.2069"
          }
        }
      },
      "sapiv1stakingproductList_quota": {
        "required": [
          "minimum",
          "totalPersonalQuota"
        ],
        "type": "object",
        "properties": {
          "totalPersonalQuota": {
            "type": "string",
            "example": "2"
          },
          "minimum": {
            "type": "string",
            "example": "0.001"
          }
        }
      },
      "inline_response_200_115": {
        "required": [
          "detail",
          "projectId",
          "quota"
        ],
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "example": "Axs*90"
          },
          "detail": {
            "$ref": "#/components/schemas/sapiv1stakingproductList_detail"
          },
          "quota": {
            "$ref": "#/components/schemas/sapiv1stakingproductList_quota"
          }
        }
      },
      "inline_response_200_116": {
        "required": [
          "positionId",
          "success"
        ],
        "type": "object",
        "properties": {
          "positionId": {
            "type": "string",
            "example": "12345"
          },
          "success": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "inline_response_200_117": {
        "required": [
          "success"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "inline_response_200_118": {
        "required": [
          "APY",
          "accrualDays",
          "amount",
          "asset",
          "canRedeemEarly",
          "deliverDate",
          "duration",
          "estExtraRewardAmt",
          "extraRewardAPY",
          "extraRewardAsset",
          "interestEndDate",
          "nextInterestPay",
          "nextInterestPayDate",
          "partialAmtDeliverDate",
          "payInterestPeriod",
          "positionId",
          "projectId",
          "purchaseTime",
          "redeemAmountEarly",
          "redeemPeriod",
          "redeemingAmt",
          "renewable",
          "rewardAmt",
          "rewardAsset",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "positionId": {
            "type": "string",
            "example": "123123"
          },
          "projectId": {
            "type": "string",
            "example": "Axs*90"
          },
          "asset": {
            "type": "string",
            "example": "AXS"
          },
          "amount": {
            "type": "string",
            "example": "122.09202928"
          },
          "purchaseTime": {
            "type": "string",
            "example": "1646182276000"
          },
          "duration": {
            "type": "string",
            "example": "60"
          },
          "accrualDays": {
            "type": "string",
            "example": "4"
          },
          "rewardAsset": {
            "type": "string",
            "example": "AXS"
          },
          "APY": {
            "type": "string",
            "example": "0.2032"
          },
          "rewardAmt": {
            "type": "string",
            "example": "5.17181528"
          },
          "extraRewardAsset": {
            "type": "string",
            "example": "BNB"
          },
          "extraRewardAPY": {
            "type": "string",
            "example": "0.0203"
          },
          "estExtraRewardAmt": {
            "type": "string",
            "example": "5.17181528"
          },
          "nextInterestPay": {
            "type": "string",
            "example": "1.29295383"
          },
          "nextInterestPayDate": {
            "type": "string",
            "example": "1646697600000"
          },
          "payInterestPeriod": {
            "type": "string",
            "example": "1"
          },
          "redeemAmountEarly": {
            "type": "string",
            "example": "2802.24068892"
          },
          "interestEndDate": {
            "type": "string",
            "example": "1651449600000"
          },
          "deliverDate": {
            "type": "string",
            "example": "1651536000000"
          },
          "redeemPeriod": {
            "type": "string",
            "example": "1"
          },
          "redeemingAmt": {
            "type": "string",
            "example": "232.2323"
          },
          "partialAmtDeliverDate": {
            "type": "string",
            "example": "1651536000000"
          },
          "canRedeemEarly": {
            "type": "boolean",
            "example": true
          },
          "renewable": {
            "type": "boolean",
            "example": true
          },
          "type": {
            "type": "string",
            "example": "AUTO"
          },
          "status": {
            "type": "string",
            "example": "HOLDING"
          }
        }
      },
      "inline_response_200_119": {
        "required": [
          "amount",
          "asset",
          "deliverDate",
          "lockPeriod",
          "positionId",
          "project",
          "status",
          "time",
          "type"
        ],
        "type": "object",
        "properties": {
          "positionId": {
            "type": "string",
            "example": "123123"
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "example": 1575018510000
          },
          "asset": {
            "type": "string",
            "example": "BNB"
          },
          "project": {
            "type": "string",
            "example": "BSC"
          },
          "amount": {
            "type": "string",
            "example": "21312.23223"
          },
          "lockPeriod": {
            "type": "string",
            "example": "30"
          },
          "deliverDate": {
            "type": "string",
            "example": "1575018510000"
          },
          "type": {
            "type": "string",
            "example": "AUTO"
          },
          "status": {
            "type": "string",
            "example": "success"
          }
        }
      },
      "inline_response_200_120": {
        "required": [
          "leftPersonalQuota"
        ],
        "type": "object",
        "properties": {
          "leftPersonalQuota": {
            "type": "string",
            "example": "1000"
          }
        }
      },
      "inline_response_200_121": {
        "required": [
          "code",
          "data",
          "msg"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": ""
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_121_data"
            }
          }
        }
      },
      "inline_response_200_122": {
        "required": [
          "code",
          "data",
          "msg"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": ""
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_122_data"
            }
          }
        }
      },
      "inline_response_200_123": {
        "required": [
          "code",
          "data",
          "msg"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": ""
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_123_data"
            }
          }
        }
      },
      "inline_response_200_124": {
        "required": [
          "code",
          "data",
          "msg"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": ""
          },
          "data": {
            "$ref": "#/components/schemas/inline_response_200_124_data"
          }
        }
      },
      "inline_response_200_125": {
        "required": [
          "code",
          "data",
          "msg"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": ""
          },
          "data": {
            "$ref": "#/components/schemas/inline_response_200_125_data"
          }
        }
      },
      "inline_response_200_126": {
        "required": [
          "code",
          "data",
          "msg"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": ""
          },
          "data": {
            "$ref": "#/components/schemas/inline_response_200_126_data"
          }
        }
      },
      "inline_response_200_127": {
        "required": [
          "code",
          "data",
          "msg"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": ""
          },
          "data": {
            "$ref": "#/components/schemas/inline_response_200_127_data"
          }
        }
      },
      "inline_response_200_128": {
        "required": [
          "code",
          "data",
          "msg"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": ""
          },
          "data": {
            "$ref": "#/components/schemas/inline_response_200_128_data"
          }
        }
      },
      "inline_response_200_129": {
        "required": [
          "code",
          "data",
          "msg"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": ""
          },
          "data": {
            "type": "integer",
            "description": "Mining Account",
            "format": "int64",
            "example": 171
          }
        }
      },
      "inline_response_200_130": {
        "required": [
          "code",
          "data",
          "msg"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": ""
          },
          "data": {
            "type": "boolean"
          }
        }
      },
      "inline_response_200_131": {
        "required": [
          "code",
          "data",
          "msg"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": ""
          },
          "data": {
            "$ref": "#/components/schemas/inline_response_200_131_data"
          }
        }
      },
      "inline_response_200_132": {
        "required": [
          "code",
          "data",
          "msg"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": ""
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_132_data"
            }
          }
        }
      },
      "inline_response_200_133": {
        "required": [
          "code",
          "data",
          "msg"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": ""
          },
          "data": {
            "$ref": "#/components/schemas/inline_response_200_133_data"
          }
        }
      },
      "inline_response_200_134": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_134_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_135": {
        "required": [
          "tranId"
        ],
        "type": "object",
        "properties": {
          "tranId": {
            "type": "integer",
            "format": "int64",
            "example": 100000001
          }
        }
      },
      "inline_response_200_136": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_136_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_137": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_137_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_138": {
        "required": [
          "asset",
          "crossCollaterals",
          "interestFreeLimit",
          "totalBorrowed",
          "totalCrossCollateral",
          "totalInterest"
        ],
        "type": "object",
        "properties": {
          "totalCrossCollateral": {
            "type": "string",
            "example": "5.8238577133"
          },
          "totalBorrowed": {
            "type": "string",
            "example": "5.07000000"
          },
          "totalInterest": {
            "type": "string",
            "example": "0.0"
          },
          "interestFreeLimit": {
            "type": "string",
            "example": "100000"
          },
          "asset": {
            "type": "string",
            "example": "USD"
          },
          "crossCollaterals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_138_crossCollaterals"
            }
          }
        }
      },
      "inline_response_200_139": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_139_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "example": 1
          }
        }
      },
      "inline_response_200_140": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_140_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "example": 1
          }
        }
      },
      "inline_response_200_141": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_141_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "example": 1
          }
        }
      },
      "inline_response_200_142": {
        "required": [
          "clientAlgoId",
          "code",
          "msg",
          "success"
        ],
        "type": "object",
        "properties": {
          "clientAlgoId": {
            "type": "string",
            "example": "00358ce6a268403398bd34eaa36dffe7"
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": "OK"
          }
        }
      },
      "inline_response_200_143": {
        "required": [
          "algoId",
          "code",
          "msg",
          "success"
        ],
        "type": "object",
        "properties": {
          "algoId": {
            "type": "integer",
            "format": "int64",
            "example": 14511
          },
          "success": {
            "type": "boolean",
            "example": true
          },
          "code": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "msg": {
            "type": "string",
            "example": "OK"
          }
        }
      },
      "inline_response_200_144": {
        "required": [
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_144_orders"
            }
          }
        }
      },
      "inline_response_200_145": {
        "required": [
          "orders",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_145_orders"
            }
          }
        }
      },
      "inline_response_200_146": {
        "required": [
          "executedAmt",
          "executedQty",
          "subOrders",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "executedQty": {
            "type": "string",
            "example": "1.000"
          },
          "executedAmt": {
            "type": "string",
            "example": "3229.44000000"
          },
          "subOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_146_subOrders"
            }
          }
        }
      },
      "inline_response_200_147": {
        "required": [
          "accountEquity",
          "accountMaintMargin",
          "accountStatus",
          "uniMMR"
        ],
        "type": "object",
        "properties": {
          "uniMMR": {
            "type": "string",
            "example": "1.87987800"
          },
          "accountEquity": {
            "type": "string",
            "example": "122607.35137903"
          },
          "accountMaintMargin": {
            "type": "string",
            "example": "23.72469206"
          },
          "accountStatus": {
            "type": "string",
            "example": "NORMAL"
          }
        }
      },
      "inline_response_200_148": {
        "required": [
          "asset",
          "collateralRate"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "USDC"
          },
          "collateralRate": {
            "type": "string",
            "example": "1.0000"
          }
        }
      },
      "inline_response_200_149": {
        "required": [
          "amount",
          "asset"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "BUSD"
          },
          "amount": {
            "type": "string",
            "example": "579.45"
          }
        }
      },
      "inline_response_200_150": {
        "required": [
          "tranId"
        ],
        "type": "object",
        "properties": {
          "tranId": {
            "type": "integer",
            "format": "int64",
            "example": 58203331886213500
          }
        }
      },
      "sapiv1blvttokenInfo_currentBaskets": {
        "required": [
          "amount",
          "notionalValue",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "amount": {
            "type": "string",
            "example": "-1183.984"
          },
          "notionalValue": {
            "type": "string",
            "example": "-22871089.96704"
          }
        }
      },
      "inline_response_200_151": {
        "required": [
          "basket",
          "currentBaskets",
          "dailyManagementFee",
          "dailyPurchaseLimit",
          "dailyRedeemLimit",
          "description",
          "fundingRate",
          "nav",
          "purchaseFeePct",
          "realLeverage",
          "redeemFeePct",
          "timestamp",
          "tokenIssued",
          "tokenName",
          "underlying"
        ],
        "type": "object",
        "properties": {
          "tokenName": {
            "type": "string",
            "example": "BTCDOWN"
          },
          "description": {
            "type": "string",
            "example": "3X Short Bitcoin Token"
          },
          "underlying": {
            "type": "string",
            "example": "BTC"
          },
          "tokenIssued": {
            "type": "string",
            "example": "717953.95"
          },
          "basket": {
            "type": "string",
            "example": "-821.474 BTCUSDT Futures"
          },
          "currentBaskets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sapiv1blvttokenInfo_currentBaskets"
            }
          },
          "nav": {
            "type": "string",
            "example": "4.79"
          },
          "realLeverage": {
            "type": "string",
            "example": "-2.316"
          },
          "fundingRate": {
            "type": "string",
            "example": "0.001020"
          },
          "dailyManagementFee": {
            "type": "string",
            "example": "0.0001"
          },
          "purchaseFeePct": {
            "type": "string",
            "example": "0.0010"
          },
          "dailyPurchaseLimit": {
            "type": "string",
            "example": "100000.00"
          },
          "redeemFeePct": {
            "type": "string",
            "example": "0.0010"
          },
          "dailyRedeemLimit": {
            "type": "string",
            "example": "1000000.00"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": 1583127900000
          }
        }
      },
      "inline_response_200_152": {
        "required": [
          "amount",
          "cost",
          "id",
          "status",
          "timestamp",
          "tokenName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "format": "double",
            "example": 123
          },
          "status": {
            "type": "string",
            "description": "S, P, and F for \"success\", \"pending\", and \"failure\"",
            "example": "S"
          },
          "tokenName": {
            "type": "string",
            "example": "LINKUP"
          },
          "amount": {
            "type": "string",
            "description": "subscribed token amount",
            "example": "0.9559090500"
          },
          "cost": {
            "type": "string",
            "description": "subscription cost in usdt",
            "example": "9.99999995"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": 1600249972899
          }
        }
      },
      "inline_response_200_153": {
        "required": [
          "amount",
          "fee",
          "id",
          "nav",
          "timestamp",
          "tokenName",
          "totalCharge"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "format": "double",
            "example": 1
          },
          "tokenName": {
            "type": "string",
            "example": "LINKUP"
          },
          "amount": {
            "type": "string",
            "description": "Subscription amount",
            "example": "0.54216292"
          },
          "nav": {
            "type": "string",
            "description": "NAV price of subscription",
            "example": "18.42621386"
          },
          "fee": {
            "type": "string",
            "description": "Subscription fee in usdt",
            "example": "0.00999000"
          },
          "totalCharge": {
            "type": "string",
            "description": "Subscription cost in usdt",
            "example": "9.99999991"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": 1599127217916
          }
        }
      },
      "inline_response_200_154": {
        "required": [
          "amount",
          "id",
          "redeemAmount",
          "status",
          "timestamp",
          "tokenName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "format": "double",
            "example": 123
          },
          "status": {
            "type": "string",
            "description": "S, P, and F for \"success\", \"pending\", and \"failure\"",
            "example": "S"
          },
          "tokenName": {
            "type": "string",
            "example": "LINKUP"
          },
          "redeemAmount": {
            "type": "string",
            "description": "Redemption token amount",
            "example": "0.95590905"
          },
          "amount": {
            "type": "string",
            "description": "Redemption value in usdt",
            "example": "10.05022099"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": 1600250279614
          }
        }
      },
      "inline_response_200_155": {
        "required": [
          "amount",
          "fee",
          "id",
          "nav",
          "netProceed",
          "timestamp",
          "tokenName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "format": "double",
            "example": 1
          },
          "tokenName": {
            "type": "string",
            "example": "LINKUP"
          },
          "amount": {
            "type": "string",
            "description": "Redemption amount",
            "example": "0.54216292"
          },
          "nav": {
            "type": "string",
            "description": "NAV of redemption",
            "example": "18.36345064"
          },
          "fee": {
            "type": "string",
            "description": "Reemption fee",
            "example": "0.00995598"
          },
          "netProceed": {
            "type": "string",
            "description": "Net redemption value in usdt",
            "example": "9.94602604"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": 1599128003050
          }
        }
      },
      "inline_response_200_156": {
        "required": [
          "tokenName",
          "userDailyTotalPurchaseLimit",
          "userDailyTotalRedeemLimit"
        ],
        "type": "object",
        "properties": {
          "tokenName": {
            "type": "string",
            "example": "LINKUP"
          },
          "userDailyTotalPurchaseLimit": {
            "type": "string",
            "description": "USDT",
            "example": "1000"
          },
          "userDailyTotalRedeemLimit": {
            "type": "string",
            "description": "USDT",
            "example": "1000"
          }
        }
      },
      "inline_response_200_157": {
        "required": [
          "assets",
          "poolId",
          "poolName"
        ],
        "type": "object",
        "properties": {
          "poolId": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "poolName": {
            "type": "string",
            "example": "BUSD/USDT"
          },
          "assets": {
            "type": "array",
            "example": [
              "BUSD",
              "USDT"
            ],
            "items": {
              "maxItems": 2,
              "minItems": 2,
              "type": "string"
            }
          }
        }
      },
      "sapiv1bswapliquidity_liquidity": {
        "required": [
          "BUSD",
          "USDT"
        ],
        "type": "object",
        "properties": {
          "BUSD": {
            "type": "number",
            "format": "double",
            "example": 100000315.79
          },
          "USDT": {
            "type": "number",
            "format": "double",
            "example": 99999245.54
          }
        }
      },
      "sapiv1bswapliquidity_share_asset": {
        "required": [
          "BUSD",
          "USDT"
        ],
        "type": "object",
        "properties": {
          "BUSD": {
            "type": "number",
            "format": "double",
            "example": 6207.02
          },
          "USDT": {
            "type": "number",
            "format": "double",
            "example": 6206.95
          }
        }
      },
      "sapiv1bswapliquidity_share": {
        "required": [
          "asset",
          "shareAmount",
          "sharePercentage"
        ],
        "type": "object",
        "properties": {
          "shareAmount": {
            "type": "number",
            "format": "double",
            "example": 12415
          },
          "sharePercentage": {
            "type": "number",
            "format": "double",
            "example": 0.00006207
          },
          "asset": {
            "$ref": "#/components/schemas/sapiv1bswapliquidity_share_asset"
          }
        }
      },
      "inline_response_200_158": {
        "required": [
          "liquidity",
          "poolId",
          "poolNmae",
          "share",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "poolId": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "poolNmae": {
            "type": "string",
            "example": "BUSD/USDT"
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1565769342148
          },
          "liquidity": {
            "$ref": "#/components/schemas/sapiv1bswapliquidity_liquidity"
          },
          "share": {
            "$ref": "#/components/schemas/sapiv1bswapliquidity_share"
          }
        }
      },
      "inline_response_200_159": {
        "required": [
          "operationId"
        ],
        "type": "object",
        "properties": {
          "operationId": {
            "type": "integer",
            "format": "int64",
            "example": 12341
          }
        }
      },
      "inline_response_200_160": {
        "required": [
          "operation",
          "operationId",
          "poolId",
          "poolName",
          "shareAmount",
          "status",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "operationId": {
            "type": "integer",
            "format": "int64",
            "example": 12341
          },
          "poolId": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "poolName": {
            "type": "string",
            "example": "BUSD/USDT"
          },
          "operation": {
            "type": "string",
            "description": "\"ADD\" or \"REMOVE\"",
            "example": "ADD"
          },
          "status": {
            "type": "integer",
            "description": "0: pending, 1: success, 2: failed",
            "format": "int32",
            "example": 1
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1565769342148
          },
          "shareAmount": {
            "type": "string",
            "example": "10.1"
          }
        }
      },
      "inline_response_200_161": {
        "required": [
          "baseAsset",
          "baseQty",
          "fee",
          "price",
          "quoteAsset",
          "quoteQty",
          "slippage"
        ],
        "type": "object",
        "properties": {
          "quoteAsset": {
            "type": "string",
            "example": "USDT"
          },
          "baseAsset": {
            "type": "string",
            "example": "BUSD"
          },
          "quoteQty": {
            "type": "number",
            "format": "double",
            "example": 300000
          },
          "baseQty": {
            "type": "number",
            "format": "double",
            "example": 299975
          },
          "price": {
            "type": "number",
            "format": "double",
            "example": 1.00008334
          },
          "slippage": {
            "type": "number",
            "format": "double",
            "example": 0.00007245
          },
          "fee": {
            "type": "number",
            "format": "double",
            "example": 120
          }
        }
      },
      "inline_response_200_162": {
        "required": [
          "baseAsset",
          "baseQty",
          "fee",
          "price",
          "quoteAsset",
          "quoteQty",
          "status",
          "swapId",
          "swapTime"
        ],
        "type": "object",
        "properties": {
          "swapId": {
            "type": "integer",
            "format": "int64",
            "example": 2314
          },
          "swapTime": {
            "type": "integer",
            "format": "int64",
            "example": 1565770342148
          },
          "status": {
            "type": "integer",
            "description": "0: pending, 1: success, 2: failed",
            "format": "int32",
            "example": 0
          },
          "quoteAsset": {
            "type": "string",
            "example": "USDT"
          },
          "baseAsset": {
            "type": "string",
            "example": "BUSD"
          },
          "quoteQty": {
            "type": "number",
            "format": "double",
            "example": 300000
          },
          "baseQty": {
            "type": "number",
            "format": "double",
            "example": 299975
          },
          "price": {
            "type": "number",
            "format": "double",
            "example": 1.00008334
          },
          "fee": {
            "type": "number",
            "format": "double",
            "example": 120
          }
        }
      },
      "inline_response_200_163": {
        "required": [
          "swapId"
        ],
        "type": "object",
        "properties": {
          "swapId": {
            "type": "integer",
            "format": "int64",
            "example": 2314
          }
        }
      },
      "sapiv1bswappoolConfigure_liquidity": {
        "required": [
          "constantA",
          "minRedeemShare",
          "slippageTolerance"
        ],
        "type": "object",
        "properties": {
          "constantA": {
            "type": "integer",
            "description": "\"NA\" if pool is an innovation pool",
            "format": "int64",
            "example": 2000
          },
          "minRedeemShare": {
            "type": "number",
            "format": "double",
            "example": 0.1
          },
          "slippageTolerance": {
            "type": "number",
            "description": "The swap proceeds only when the slippage is within the set range",
            "format": "double",
            "example": 0.2
          }
        }
      },
      "sapiv1bswappoolConfigure_assetConfigure_BUSD": {
        "required": [
          "maxAdd",
          "maxSwap",
          "minAdd",
          "minSwap"
        ],
        "type": "object",
        "properties": {
          "minAdd": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "maxAdd": {
            "type": "integer",
            "format": "int64",
            "example": 20
          },
          "minSwap": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "maxSwap": {
            "type": "integer",
            "format": "int64",
            "example": 30
          }
        }
      },
      "sapiv1bswappoolConfigure_assetConfigure": {
        "required": [
          "BUSD",
          "USDT"
        ],
        "type": "object",
        "properties": {
          "BUSD": {
            "$ref": "#/components/schemas/sapiv1bswappoolConfigure_assetConfigure_BUSD"
          },
          "USDT": {
            "$ref": "#/components/schemas/sapiv1bswappoolConfigure_assetConfigure_BUSD"
          }
        }
      },
      "inline_response_200_164": {
        "required": [
          "assetConfigure",
          "liquidity",
          "poolId",
          "poolNmae",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "poolId": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "poolNmae": {
            "type": "string",
            "example": "BUSD/USDT"
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1565769342148
          },
          "liquidity": {
            "$ref": "#/components/schemas/sapiv1bswappoolConfigure_liquidity"
          },
          "assetConfigure": {
            "$ref": "#/components/schemas/sapiv1bswappoolConfigure_assetConfigure"
          }
        }
      },
      "inline_response_200_165": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/bswapAddLiquidityPreviewCombination"
          },
          {
            "$ref": "#/components/schemas/bswapAddLiquidityPreviewSingle"
          }
        ]
      },
      "inline_response_200_166": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/bswapRmvLiquidityPreviewCombination"
          },
          {
            "$ref": "#/components/schemas/bswapRmvLiquidityPreviewSingle"
          }
        ]
      },
      "inline_response_200_167": {
        "required": [
          "details",
          "totalUnclaimedRewards"
        ],
        "type": "object",
        "properties": {
          "totalUnclaimedRewards": {
            "$ref": "#/components/schemas/inline_response_200_167_totalUnclaimedRewards"
          },
          "details": {
            "$ref": "#/components/schemas/inline_response_200_167_details"
          }
        }
      },
      "inline_response_200_168": {
        "required": [
          "success"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "inline_response_200_169": {
        "required": [
          "assetRewards",
          "claimAmount",
          "claimTime",
          "poolId",
          "poolName",
          "status"
        ],
        "type": "object",
        "properties": {
          "poolId": {
            "type": "integer",
            "format": "int32",
            "example": 52
          },
          "poolName": {
            "type": "string",
            "example": "BNB/USDT"
          },
          "assetRewards": {
            "type": "string",
            "example": "BNB"
          },
          "claimTime": {
            "type": "integer",
            "format": "int64",
            "example": 1565769342148
          },
          "claimAmount": {
            "type": "number",
            "format": "float",
            "example": 2.3e-7
          },
          "status": {
            "type": "integer",
            "description": "0: pending, 1: success",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_170": {
        "required": [
          "code",
          "data",
          "message",
          "success",
          "total"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "000000"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_170_data"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "inline_response_200_171": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_171_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_172": {
        "required": [
          "collateralCoin",
          "currentLTV",
          "loanCoin",
          "remainingInterest",
          "remainingPrincipal",
          "repayAmount",
          "repayStatus"
        ],
        "type": "object",
        "properties": {
          "loanCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "repayAmount": {
            "type": "string",
            "example": "200.5"
          },
          "remainingPrincipal": {
            "type": "string",
            "example": "100.5"
          },
          "remainingInterest": {
            "type": "string",
            "example": "0"
          },
          "collateralCoin": {
            "type": "string",
            "example": "BNB,BTC,ETH"
          },
          "currentLTV": {
            "type": "string",
            "example": "0.25"
          },
          "repayStatus": {
            "type": "string",
            "description": "Repaid, Repaying, Failed",
            "example": "Repaid"
          }
        }
      },
      "inline_response_200_173": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_173_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_174": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_174_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_175": {
        "required": [
          "amount",
          "asset",
          "timestamp",
          "tranId",
          "type"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "BUSD"
          },
          "type": {
            "type": "string",
            "example": "borrowIn"
          },
          "amount": {
            "type": "string",
            "example": "100"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": 1633771139847
          },
          "tranId": {
            "type": "string",
            "example": "80423589583"
          }
        }
      },
      "inline_response_200_176": {
        "required": [
          "collateralAmount",
          "collateralCoin",
          "hourlyInterestRate",
          "loanAmount",
          "loanCoin",
          "orderId"
        ],
        "type": "object",
        "properties": {
          "loanCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "loanAmount": {
            "type": "string",
            "example": "100.5"
          },
          "collateralCoin": {
            "type": "string",
            "example": "BNB"
          },
          "collateralAmount": {
            "type": "string",
            "example": "50.5"
          },
          "hourlyInterestRate": {
            "type": "string",
            "example": "0.001234"
          },
          "orderId": {
            "type": "string",
            "example": "100000001"
          }
        }
      },
      "inline_response_200_177": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_177_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_178": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_178_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_179": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/repaymentInfo"
          },
          {
            "$ref": "#/components/schemas/repaymentInfo2"
          }
        ]
      },
      "inline_response_200_180": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_180_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_181": {
        "required": [
          "amount",
          "collateralCoin",
          "currentLTV",
          "direction",
          "loanCoin"
        ],
        "type": "object",
        "properties": {
          "loanCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "collateralCoin": {
            "type": "string",
            "example": "BNB"
          },
          "direction": {
            "type": "string",
            "example": "ADDITIONAL"
          },
          "amount": {
            "type": "string",
            "example": "5.235"
          },
          "currentLTV": {
            "type": "string",
            "example": "0.52"
          }
        }
      },
      "inline_response_200_182": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_182_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_183": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_183_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_184": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_184_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_185": {
        "required": [
          "collateralCoin",
          "loanCoin",
          "rate",
          "repayAmount"
        ],
        "type": "object",
        "properties": {
          "loanCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "collateralCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "repayAmount": {
            "type": "string",
            "example": "1000"
          },
          "rate": {
            "type": "string",
            "description": "rate of collateral coin/loan coin",
            "example": "300.36781234"
          }
        }
      },
      "inline_response_200_186": {
        "required": [
          "rows",
          "total"
        ],
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_186_rows"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_187": {
        "required": [
          "code",
          "data",
          "message",
          "success"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "000000"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_187_data"
            }
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "inline_response_200_188": {
        "required": [
          "fromAsset",
          "fromAssetMaxAmount",
          "fromAssetMinAmount",
          "toAsset",
          "toAssetMaxAmount",
          "toAssetMinAmount"
        ],
        "type": "object",
        "properties": {
          "fromAsset": {
            "type": "string",
            "example": "BTC"
          },
          "toAsset": {
            "type": "string",
            "example": "USDT"
          },
          "fromAssetMinAmount": {
            "type": "string",
            "example": "0.0004"
          },
          "fromAssetMaxAmount": {
            "type": "string",
            "example": "50"
          },
          "toAssetMinAmount": {
            "type": "string",
            "example": "20"
          },
          "toAssetMaxAmount": {
            "type": "string",
            "example": "2500000"
          }
        }
      },
      "inline_response_200_189": {
        "required": [
          "asset",
          "fraction"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "BTC"
          },
          "fraction": {
            "type": "integer",
            "format": "int32",
            "example": 8
          }
        }
      },
      "inline_response_200_190": {
        "required": [
          "fromAmount",
          "inverseRatio",
          "quoteId",
          "ratio",
          "toAmount",
          "validTimestamp"
        ],
        "type": "object",
        "properties": {
          "quoteId": {
            "type": "string",
            "example": "12415572564"
          },
          "ratio": {
            "type": "string",
            "example": "38163.7"
          },
          "inverseRatio": {
            "type": "string",
            "example": "0.0000262"
          },
          "validTimestamp": {
            "type": "integer",
            "format": "int64",
            "example": 1623319461670
          },
          "toAmount": {
            "type": "string",
            "example": "3816.37"
          },
          "fromAmount": {
            "type": "string",
            "example": "0.1"
          }
        }
      },
      "inline_response_200_191": {
        "required": [
          "createTime",
          "orderId",
          "orderStatus"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "example": "933256278426274426"
          },
          "createTime": {
            "type": "integer",
            "format": "int64",
            "example": 1623381330472
          },
          "orderStatus": {
            "type": "string",
            "example": "PROCESS"
          }
        }
      },
      "inline_response_200_192": {
        "required": [
          "createTime",
          "fromAmount",
          "fromAsset",
          "inverseRatio",
          "orderId",
          "orderStatus",
          "ratio",
          "toAmount",
          "toAsset"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 933256278426274400
          },
          "orderStatus": {
            "type": "string",
            "example": "SUCCESS"
          },
          "fromAsset": {
            "type": "string",
            "example": "BTC"
          },
          "fromAmount": {
            "type": "string",
            "example": "0.00054414"
          },
          "toAsset": {
            "type": "string",
            "example": "USDT"
          },
          "toAmount": {
            "type": "string",
            "example": "20"
          },
          "ratio": {
            "type": "string",
            "example": "36755"
          },
          "inverseRatio": {
            "type": "string",
            "example": "0.00002721"
          },
          "createTime": {
            "type": "integer",
            "format": "int64",
            "example": 1623381330472
          }
        }
      },
      "inline_response_200_193": {
        "required": [
          "endTime",
          "limit",
          "list",
          "moreData",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_193_list"
            }
          },
          "startTime": {
            "type": "integer",
            "format": "int64",
            "example": 1623824139000
          },
          "endTime": {
            "type": "integer",
            "format": "int64",
            "example": 1626416139000
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "example": 100
          },
          "moreData": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "inline_response_200_194": {
        "required": [
          "code",
          "data",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "OK"
          },
          "type": {
            "type": "string",
            "example": "GENERAL"
          },
          "code": {
            "type": "string",
            "example": "000000000"
          },
          "data": {
            "$ref": "#/components/schemas/inline_response_200_194_data"
          }
        }
      },
      "inline_response_200_195": {
        "required": [
          "list",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_195_list"
            }
          }
        }
      },
      "inline_response_200_196": {
        "required": [
          "list",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_196_list"
            }
          }
        }
      },
      "inline_response_200_197": {
        "required": [
          "list",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 178
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_197_list"
            }
          }
        }
      },
      "inline_response_200_198": {
        "required": [
          "list",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 347
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_198_list"
            }
          }
        }
      },
      "inline_response_200_199": {
        "required": [
          "code",
          "data",
          "message",
          "success"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "000000"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "$ref": "#/components/schemas/inline_response_200_199_data"
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "inline_response_200_200": {
        "required": [
          "code",
          "data",
          "message",
          "success"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "000000"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "$ref": "#/components/schemas/inline_response_200_200_data"
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "inline_response_200_201": {
        "required": [
          "code",
          "data",
          "message",
          "success"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "000000"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "$ref": "#/components/schemas/inline_response_200_201_data"
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "inline_response_200_202": {
        "required": [
          "code",
          "data",
          "message",
          "success"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "000000"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "string",
            "example": "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCXBBVKLAc1GQ5FsIFFqOHrPTox5noBONIKr+IAedTR9FkVxq6e65updEbfdhRNkMOeYIO2i0UylrjGC0X8YSoIszmrVHeV0l06Zh1oJuZos1+7N+WLuz9JvlPaawof3GUakTxYWWCa9+8KIbLKsoKMdfS96VT+8iOXO3quMGKUmQIDAQAB"
          },
          "success": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "inline_response_200_203": {
        "required": [
          "code",
          "data",
          "message",
          "success"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "000000"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "$ref": "#/components/schemas/inline_response_200_203_data"
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "account_commissionRates": {
        "required": [
          "buyer",
          "maker",
          "seller",
          "taker"
        ],
        "type": "object",
        "properties": {
          "maker": {
            "type": "string",
            "example": "0.00150000"
          },
          "taker": {
            "type": "string",
            "example": "0.00150000"
          },
          "buyer": {
            "type": "string",
            "example": "0.00000000"
          },
          "seller": {
            "type": "string",
            "example": "0.00000000"
          }
        }
      },
      "account_balances": {
        "required": [
          "asset",
          "free",
          "locked"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "BTC"
          },
          "free": {
            "type": "string",
            "example": "4723846.89208129"
          },
          "locked": {
            "type": "string",
            "example": "0.00000000"
          }
        }
      },
      "ocoOrder_orders": {
        "required": [
          "clientOrderId",
          "orderId",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "clientOrderId": {
            "type": "string"
          }
        }
      },
      "ocoOrder_orderReports": {
        "required": [
          "clientOrderId",
          "cummulativeQuoteQty",
          "executedQty",
          "orderId",
          "orderListId",
          "origClientOrderId",
          "origQty",
          "price",
          "selfTradePreventionMode",
          "side",
          "status",
          "stopPrice",
          "symbol",
          "timeInForce",
          "type"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "origClientOrderId": {
            "type": "string"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "orderListId": {
            "type": "integer",
            "format": "int64"
          },
          "clientOrderId": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "origQty": {
            "type": "string"
          },
          "executedQty": {
            "type": "string"
          },
          "cummulativeQuoteQty": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "timeInForce": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "side": {
            "type": "string"
          },
          "stopPrice": {
            "type": "string"
          },
          "selfTradePreventionMode": {
            "type": "string"
          }
        }
      },
      "marginOcoOrder_orders": {
        "required": [
          "clientOrderId",
          "orderId",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "clientOrderId": {
            "type": "string"
          }
        },
        "example": "[{\"symbol\":\"BNBUSDT\",\"orderId\":2,\"clientOrderId\":\"pO9ufTiFGg3nw2fOdgeOXa\"},{\"symbol\":\"BNBUSDT\",\"orderId\":3,\"clientOrderId\":\"TXOvglzXuaubXAaENpaRCB\"}]"
      },
      "marginOcoOrder_orderReports": {
        "required": [
          "clientOrderId",
          "cummulativeQuoteQty",
          "executedQty",
          "orderId",
          "orderListId",
          "origClientOrderId",
          "origQty",
          "price",
          "side",
          "status",
          "stopPrice",
          "symbol",
          "timeInForce",
          "type"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "origClientOrderId": {
            "type": "string"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "orderListId": {
            "type": "integer",
            "format": "int64"
          },
          "clientOrderId": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "origQty": {
            "type": "string"
          },
          "executedQty": {
            "type": "string"
          },
          "cummulativeQuoteQty": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "timeInForce": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "side": {
            "type": "string"
          },
          "stopPrice": {
            "type": "string"
          }
        },
        "example": "[{\"symbol\":\"BNBUSDT\",\"origClientOrderId\":\"pO9ufTiFGg3nw2fOdgeOXa\",\"orderId\":2,\"orderListId\":0,\"clientOrderId\":\"unfWT8ig8i0uj6lPuYLez6\",\"price\":\"1.00000000\",\"origQty\":\"10.00000000\",\"executedQty\":\"0.00000000\",\"cummulativeQuoteQty\":\"0.00000000\",\"status\":\"CANCELED\",\"timeInForce\":\"GTC\",\"type\":\"STOP_LOSS_LIMIT\",\"side\":\"SELL\",\"stopPrice\":\"1.00000000\"},{\"symbol\":\"BNBUSDT\",\"origClientOrderId\":\"TXOvglzXuaubXAaENpaRCB\",\"orderId\":3,\"orderListId\":0,\"clientOrderId\":\"unfWT8ig8i0uj6lPuYLez6\",\"price\":\"3.00000000\",\"origQty\":\"10.00000000\",\"executedQty\":\"0.00000000\",\"cummulativeQuoteQty\":\"0.00000000\",\"status\":\"CANCELED\",\"timeInForce\":\"GTC\",\"type\":\"LIMIT_MAKER\",\"side\":\"SELL\"}]"
      },
      "orderResponseFull_fills": {
        "required": [
          "commission",
          "commissionAsset",
          "price",
          "qty"
        ],
        "type": "object",
        "properties": {
          "price": {
            "type": "string",
            "example": "4000.00000000"
          },
          "qty": {
            "type": "string",
            "example": "1.00000000"
          },
          "commission": {
            "type": "string",
            "example": "4.00000000"
          },
          "commissionAsset": {
            "type": "string",
            "example": "USDT"
          }
        }
      },
      "marginTransferDetails_rows": {
        "required": [
          "amount",
          "asset",
          "status",
          "timestamp",
          "transFrom",
          "transTo",
          "txId"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": "0.10000000"
          },
          "asset": {
            "type": "string",
            "example": "BNB"
          },
          "status": {
            "type": "string",
            "example": "CONFIRMED"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": 1566898617000
          },
          "txId": {
            "type": "integer",
            "format": "int64",
            "example": 5240372201
          },
          "transFrom": {
            "type": "string",
            "example": "SPOT"
          },
          "transTo": {
            "type": "string",
            "example": "ISOLATED_MARGIN"
          }
        }
      },
      "isolatedMarginAccountInfo_baseAsset": {
        "required": [
          "asset",
          "borrowEnabled",
          "borrowed",
          "free",
          "interest",
          "locked",
          "netAsset",
          "netAssetOfBtc",
          "repayEnabled",
          "totalAsset"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "BTC"
          },
          "borrowEnabled": {
            "type": "boolean"
          },
          "borrowed": {
            "type": "string",
            "example": "0.00000000"
          },
          "free": {
            "type": "string",
            "example": "0.00000000"
          },
          "interest": {
            "type": "string",
            "example": "0.00000000"
          },
          "locked": {
            "type": "string",
            "example": "0.00000000"
          },
          "netAsset": {
            "type": "string",
            "example": "0.00000000"
          },
          "netAssetOfBtc": {
            "type": "string",
            "example": "0.00000000"
          },
          "repayEnabled": {
            "type": "boolean"
          },
          "totalAsset": {
            "type": "string",
            "example": "0.00000000"
          }
        }
      },
      "isolatedMarginAccountInfo_quoteAsset": {
        "required": [
          "asset",
          "borrowEnabled",
          "borrowed",
          "free",
          "interest",
          "locked",
          "netAsset",
          "netAssetOfBtc",
          "repayEnabled",
          "totalAsset"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "USDT"
          },
          "borrowEnabled": {
            "type": "boolean"
          },
          "borrowed": {
            "type": "string",
            "example": "0.00000000"
          },
          "free": {
            "type": "string",
            "example": "0.00000000"
          },
          "interest": {
            "type": "string",
            "example": "0.00000000"
          },
          "locked": {
            "type": "string",
            "example": "0.00000000"
          },
          "netAsset": {
            "type": "string",
            "example": "0.00000000"
          },
          "netAssetOfBtc": {
            "type": "string",
            "example": "0.00000000"
          },
          "repayEnabled": {
            "type": "boolean"
          },
          "totalAsset": {
            "type": "string",
            "example": "0.00000000"
          }
        }
      },
      "isolatedMarginAccountInfo_assets": {
        "required": [
          "baseAsset",
          "enabled",
          "indexPrice",
          "isolatedCreated",
          "liquidatePrice",
          "liquidateRate",
          "marginLevel",
          "marginLevelStatus",
          "marginRatio",
          "quoteAsset",
          "symbol",
          "tradeEnabled"
        ],
        "type": "object",
        "properties": {
          "baseAsset": {
            "$ref": "#/components/schemas/isolatedMarginAccountInfo_baseAsset"
          },
          "quoteAsset": {
            "$ref": "#/components/schemas/isolatedMarginAccountInfo_quoteAsset"
          },
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "isolatedCreated": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean",
            "description": "true-enabled, false-disabled"
          },
          "marginLevel": {
            "type": "string",
            "example": "0.00000000"
          },
          "marginLevelStatus": {
            "type": "string",
            "description": "\"EXCESSIVE\", \"NORMAL\", \"MARGIN_CALL\", \"PRE_LIQUIDATION\", \"FORCE_LIQUIDATION\"",
            "example": "EXCESSIVE"
          },
          "marginRatio": {
            "type": "string",
            "example": "0.00000000"
          },
          "indexPrice": {
            "type": "string",
            "example": "10000.00000000"
          },
          "liquidatePrice": {
            "type": "string",
            "example": "1000.00000000"
          },
          "liquidateRate": {
            "type": "string",
            "example": "1.00000000"
          },
          "tradeEnabled": {
            "type": "boolean"
          }
        }
      },
      "snapshotSpot_data_balances": {
        "required": [
          "asset",
          "free",
          "locked"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "BTC"
          },
          "free": {
            "type": "string",
            "example": "0.2"
          },
          "locked": {
            "type": "string",
            "example": "0.001"
          }
        }
      },
      "snapshotSpot_data": {
        "required": [
          "balances",
          "totalAssetOfBtc"
        ],
        "type": "object",
        "properties": {
          "balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/snapshotSpot_data_balances"
            }
          },
          "totalAssetOfBtc": {
            "type": "string",
            "example": "0.09905021"
          }
        }
      },
      "snapshotSpot_snapshotVos": {
        "required": [
          "data",
          "type",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/snapshotSpot_data"
          },
          "type": {
            "type": "string",
            "example": "spot"
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1576281599000
          }
        }
      },
      "snapshotMargin_data_userAssets": {
        "required": [
          "asset",
          "borrowed",
          "free",
          "interest",
          "locked",
          "netAsset"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "XRP"
          },
          "borrowed": {
            "type": "string",
            "example": "0.00000000"
          },
          "free": {
            "type": "string",
            "example": "1.00000000"
          },
          "interest": {
            "type": "string",
            "example": "0.00000000"
          },
          "locked": {
            "type": "string",
            "example": "0.00000000"
          },
          "netAsset": {
            "type": "string",
            "example": "1.00000000"
          }
        }
      },
      "snapshotMargin_data": {
        "required": [
          "marginLevel",
          "totalAssetOfBtc",
          "totalLiabilityOfBtc",
          "totalNetAssetOfBtc",
          "userAssets"
        ],
        "type": "object",
        "properties": {
          "marginLevel": {
            "type": "string",
            "example": "2748.02909813"
          },
          "totalAssetOfBtc": {
            "type": "string",
            "example": "0.00274803"
          },
          "totalLiabilityOfBtc": {
            "type": "string",
            "example": "0.00000100"
          },
          "totalNetAssetOfBtc": {
            "type": "string",
            "example": "0.00274750"
          },
          "userAssets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/snapshotMargin_data_userAssets"
            }
          }
        }
      },
      "snapshotMargin_snapshotVos": {
        "required": [
          "data",
          "type",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/snapshotMargin_data"
          },
          "type": {
            "type": "string",
            "example": "margin"
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1576281599000
          }
        }
      },
      "snapshotFutures_data_assets": {
        "required": [
          "asset",
          "marginBalance",
          "walletBalance"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "USDT"
          },
          "marginBalance": {
            "type": "string",
            "example": "118.99782335"
          },
          "walletBalance": {
            "type": "string",
            "example": "120.23811389"
          }
        }
      },
      "snapshotFutures_data_position": {
        "required": [
          "entryPrice",
          "markPrice",
          "positionAmt",
          "symbol",
          "unRealizedProfit"
        ],
        "type": "object",
        "properties": {
          "entryPrice": {
            "type": "string",
            "example": "7130.41000000"
          },
          "markPrice": {
            "type": "string",
            "example": "7257.66239673"
          },
          "positionAmt": {
            "type": "string",
            "example": "0.01000000"
          },
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "unRealizedProfit": {
            "type": "string",
            "example": "1.24029054"
          }
        }
      },
      "snapshotFutures_data": {
        "required": [
          "assets",
          "position"
        ],
        "type": "object",
        "properties": {
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/snapshotFutures_data_assets"
            }
          },
          "position": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/snapshotFutures_data_position"
            }
          }
        }
      },
      "snapshotFutures_snapshotVos": {
        "required": [
          "data",
          "type",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/snapshotFutures_data"
          },
          "type": {
            "type": "string",
            "example": "futures"
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1576281599000
          }
        }
      },
      "subAccountUSDTFuturesDetails_futureAccountResp_assets": {
        "required": [
          "asset",
          "initialMargin",
          "maintenanceMargin",
          "marginBalance",
          "maxWithdrawAmount",
          "openOrderInitialMargin",
          "positionInitialMargin",
          "unrealizedProfit",
          "walletBalance"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "USDT"
          },
          "initialMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "maintenanceMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "marginBalance": {
            "type": "string",
            "example": "0.88308000"
          },
          "maxWithdrawAmount": {
            "type": "string",
            "example": "0.88308000"
          },
          "openOrderInitialMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "positionInitialMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "unrealizedProfit": {
            "type": "string",
            "example": "0.00000000"
          },
          "walletBalance": {
            "type": "string",
            "example": "0.88308000"
          }
        }
      },
      "subAccountUSDTFuturesDetails_futureAccountResp": {
        "required": [
          "assets",
          "canDeposit",
          "canTrade",
          "canWithdraw",
          "email",
          "feeTier",
          "maxWithdrawAmount",
          "totalInitialMargin",
          "totalMaintenanceMargin",
          "totalMarginBalance",
          "totalOpenOrderInitialMargin",
          "totalPositionInitialMargin",
          "totalUnrealizedProfit",
          "totalWalletBalance",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "abc@test.com"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/subAccountUSDTFuturesDetails_futureAccountResp_assets"
            }
          },
          "canDeposit": {
            "type": "boolean"
          },
          "canTrade": {
            "type": "boolean"
          },
          "canWithdraw": {
            "type": "boolean"
          },
          "feeTier": {
            "type": "integer",
            "format": "int64",
            "example": 2
          },
          "maxWithdrawAmount": {
            "type": "string",
            "example": "0.88308000"
          },
          "totalInitialMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalMaintenanceMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalMarginBalance": {
            "type": "string",
            "example": "0.88308000"
          },
          "totalOpenOrderInitialMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalPositionInitialMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalUnrealizedProfit": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalWalletBalance": {
            "type": "string",
            "example": "0.88308000"
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1576756674610
          }
        }
      },
      "subAccountCOINFuturesDetails_assets": {
        "required": [
          "asset",
          "initialMargin",
          "maintenanceMargin",
          "marginBalance",
          "maxWithdrawAmount",
          "openOrderInitialMargin",
          "positionInitialMargin",
          "unrealizedProfit",
          "walletBalance"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "BTC"
          },
          "initialMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "maintenanceMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "marginBalance": {
            "type": "string",
            "example": "0.88308000"
          },
          "maxWithdrawAmount": {
            "type": "string",
            "example": "0.88308000"
          },
          "openOrderInitialMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "positionInitialMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "unrealizedProfit": {
            "type": "string",
            "example": "0.00000000"
          },
          "walletBalance": {
            "type": "string",
            "example": "0.88308000"
          }
        }
      },
      "subAccountUSDTFuturesSummary_futureAccountSummaryResp_subAccountList": {
        "required": [
          "asset",
          "email",
          "totalInitialMargin",
          "totalMaintenanceMargin",
          "totalMarginBalance",
          "totalOpenOrderInitialMargin",
          "totalPositionInitialMargin",
          "totalUnrealizedProfit",
          "totalWalletBalance"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "123@test.com"
          },
          "totalInitialMargin": {
            "type": "string",
            "example": "9.00000000"
          },
          "totalMaintenanceMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalMarginBalance": {
            "type": "string",
            "example": "22.12659734"
          },
          "totalOpenOrderInitialMargin": {
            "type": "string",
            "example": "9.00000000"
          },
          "totalPositionInitialMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalUnrealizedProfit": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalWalletBalance": {
            "type": "string",
            "example": "22.12659734"
          },
          "asset": {
            "type": "string",
            "description": "The sum of BUSD and USDT",
            "example": "USD"
          }
        }
      },
      "subAccountUSDTFuturesSummary_futureAccountSummaryResp": {
        "required": [
          "asset",
          "subAccountList",
          "totalInitialMargin",
          "totalMaintenanceMargin",
          "totalMarginBalance",
          "totalOpenOrderInitialMargin",
          "totalPositionInitialMargin",
          "totalUnrealizedProfit",
          "totalWalletBalance"
        ],
        "type": "object",
        "properties": {
          "totalInitialMargin": {
            "type": "string",
            "example": "9.83137400"
          },
          "totalMaintenanceMargin": {
            "type": "string",
            "example": "0.41568700"
          },
          "totalMarginBalance": {
            "type": "string",
            "example": "23.03235621"
          },
          "totalOpenOrderInitialMargin": {
            "type": "string",
            "example": "9.00000000"
          },
          "totalPositionInitialMargin": {
            "type": "string",
            "example": "0.83137400"
          },
          "totalUnrealizedProfit": {
            "type": "string",
            "example": "0.03219710"
          },
          "totalWalletBalance": {
            "type": "string",
            "example": "22.15879444"
          },
          "asset": {
            "type": "string",
            "description": "The sum of BUSD and USDT",
            "example": "USD"
          },
          "subAccountList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/subAccountUSDTFuturesSummary_futureAccountSummaryResp_subAccountList"
            }
          }
        }
      },
      "subAccountCOINFuturesSummary_deliveryAccountSummaryResp_subAccountList": {
        "required": [
          "asset",
          "email",
          "totalMarginBalance",
          "totalUnrealizedProfit",
          "totalWalletBalance"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "123@test.com"
          },
          "totalMarginBalance": {
            "type": "string",
            "example": "22.12659734"
          },
          "totalUnrealizedProfit": {
            "type": "string",
            "example": "0.0"
          },
          "totalWalletBalance": {
            "type": "string",
            "example": "22.12659734"
          },
          "asset": {
            "type": "string",
            "example": "BTC"
          }
        }
      },
      "subAccountCOINFuturesSummary_deliveryAccountSummaryResp": {
        "required": [
          "asset",
          "subAccountList",
          "totalMarginBalanceOfBTC",
          "totalUnrealizedProfitOfBTC",
          "totalWalletBalanceOfBTC"
        ],
        "type": "object",
        "properties": {
          "totalMarginBalanceOfBTC": {
            "type": "string",
            "example": "25.03221121"
          },
          "totalUnrealizedProfitOfBTC": {
            "type": "string",
            "example": "0.1223341"
          },
          "totalWalletBalanceOfBTC": {
            "type": "string",
            "example": "22.15879444"
          },
          "asset": {
            "type": "string",
            "example": "BTC"
          },
          "subAccountList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/subAccountCOINFuturesSummary_deliveryAccountSummaryResp_subAccountList"
            }
          }
        }
      },
      "subAccountCOINFuturesPositionRisk_deliveryPositionRiskVos": {
        "required": [
          "entryPrice",
          "isAutoAddMargin",
          "isolated",
          "isolatedMargin",
          "isolatedWallet",
          "leverage",
          "markPrice",
          "positionAmount",
          "positionSide",
          "symbol",
          "unrealizedProfit"
        ],
        "type": "object",
        "properties": {
          "entryPrice": {
            "type": "string",
            "example": "9975.12000"
          },
          "markPrice": {
            "type": "string",
            "example": "9973.50770517"
          },
          "leverage": {
            "type": "string",
            "example": "20"
          },
          "isolated": {
            "type": "string",
            "example": "false"
          },
          "isolatedWallet": {
            "type": "string",
            "example": "9973.50770517"
          },
          "isolatedMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "isAutoAddMargin": {
            "type": "string",
            "example": "false"
          },
          "positionSide": {
            "type": "string",
            "example": "BOTH"
          },
          "positionAmount": {
            "type": "string",
            "example": "1.230"
          },
          "symbol": {
            "type": "string",
            "example": "BTCUSD_201225"
          },
          "unrealizedProfit": {
            "type": "string",
            "example": "-0.01612295"
          }
        }
      },
      "savingsFlexiblePurchaseRecord_inner": {
        "required": [
          "amount",
          "asset",
          "createTime",
          "lendingType",
          "productName",
          "purchaseId",
          "status"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": "100.00000000"
          },
          "asset": {
            "type": "string",
            "example": "USDT"
          },
          "createTime": {
            "type": "integer",
            "format": "int64",
            "example": 1575018510000
          },
          "lendingType": {
            "type": "string",
            "example": "DAILY"
          },
          "productName": {
            "type": "string",
            "example": "USDT"
          },
          "purchaseId": {
            "type": "integer",
            "format": "int64",
            "example": 26055
          },
          "status": {
            "type": "string",
            "example": "SUCCESS"
          }
        }
      },
      "savingsFixedActivityPurchaseRecord_inner": {
        "required": [
          "amount",
          "asset",
          "createTime",
          "lendingType",
          "lot",
          "productName",
          "purchaseId",
          "status"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": "100.00000000"
          },
          "asset": {
            "type": "string",
            "example": "USDT"
          },
          "createTime": {
            "type": "integer",
            "format": "int64",
            "example": 1575018453000
          },
          "lendingType": {
            "type": "string",
            "example": "ACTIVITY"
          },
          "lot": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "productName": {
            "type": "string",
            "example": "【Special】USDT 7D (8%)"
          },
          "purchaseId": {
            "type": "integer",
            "format": "int64",
            "example": 36857
          },
          "status": {
            "type": "string",
            "example": "SUCCESS"
          }
        }
      },
      "savingsFlexibleRedemptionRecord_inner": {
        "required": [
          "amount",
          "asset",
          "createTime",
          "principal",
          "projectId",
          "projectName",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": "10.54000000"
          },
          "asset": {
            "type": "string",
            "example": "USDT"
          },
          "createTime": {
            "type": "integer",
            "format": "int64",
            "example": 1577257222000
          },
          "principal": {
            "type": "string",
            "example": "10.54000000"
          },
          "projectId": {
            "type": "string",
            "example": "USDT001"
          },
          "projectName": {
            "type": "string",
            "example": "USDT"
          },
          "status": {
            "type": "string",
            "example": "PAID"
          },
          "type": {
            "type": "string",
            "example": "FAST"
          }
        }
      },
      "savingsFixedActivityRedemptionRecord_inner": {
        "required": [
          "amount",
          "asset",
          "createTime",
          "interest",
          "principal",
          "projectId",
          "projectName",
          "startTime",
          "status"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": "0.07070000"
          },
          "asset": {
            "type": "string",
            "example": "USDT"
          },
          "createTime": {
            "type": "integer",
            "format": "int64",
            "example": 1566200161000
          },
          "interest": {
            "type": "string",
            "example": "0.00070000"
          },
          "principal": {
            "type": "string",
            "example": "0.07000000"
          },
          "projectId": {
            "type": "string",
            "example": "test06"
          },
          "projectName": {
            "type": "string",
            "example": "USDT 1 day (10% annualized)"
          },
          "startTime": {
            "type": "integer",
            "format": "int64",
            "example": 1566198000000
          },
          "status": {
            "type": "string",
            "example": "PAID"
          }
        }
      },
      "inline_response_200_1_rateLimits": {
        "required": [
          "interval",
          "intervalNum",
          "limit",
          "rateLimitType"
        ],
        "type": "object",
        "properties": {
          "rateLimitType": {
            "type": "string",
            "example": "REQUEST_WEIGHT"
          },
          "interval": {
            "type": "string",
            "example": "MINUTE"
          },
          "intervalNum": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "example": 1200
          }
        }
      },
      "inline_response_200_1_filters": {
        "required": [
          "filterType",
          "maxPrice",
          "minPrice",
          "tickSize"
        ],
        "type": "object",
        "properties": {
          "filterType": {
            "type": "string",
            "example": "PRICE_FILTER"
          },
          "minPrice": {
            "type": "string",
            "example": "0.00000100"
          },
          "maxPrice": {
            "type": "string",
            "example": "100000.00000000"
          },
          "tickSize": {
            "type": "string",
            "example": "0.00000100"
          }
        }
      },
      "inline_response_200_1_symbols": {
        "required": [
          "allowTrailingStop",
          "allowedSelfTradePreventionModes",
          "baseAsset",
          "baseAssetPrecision",
          "baseCommissionPrecision",
          "defaultSelfTradePreventionMode",
          "filters",
          "icebergAllowed",
          "isMarginTradingAllowed",
          "isSpotTradingAllowed",
          "ocoAllowed",
          "orderTypes",
          "permissions",
          "quoteAsset",
          "quoteAssetPrecision",
          "quoteCommissionPrecision",
          "quoteOrderQtyMarketAllowed",
          "status",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "ETHBTC"
          },
          "status": {
            "type": "string",
            "example": "TRADING"
          },
          "baseAsset": {
            "type": "string",
            "example": "ETH"
          },
          "baseAssetPrecision": {
            "type": "integer",
            "format": "int32",
            "example": 8
          },
          "quoteAsset": {
            "type": "string",
            "example": "BTC"
          },
          "quoteAssetPrecision": {
            "type": "integer",
            "format": "int32",
            "example": 8
          },
          "baseCommissionPrecision": {
            "type": "integer",
            "format": "int32",
            "example": 8
          },
          "quoteCommissionPrecision": {
            "type": "integer",
            "format": "int32",
            "example": 8
          },
          "orderTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "LIMIT"
            }
          },
          "icebergAllowed": {
            "type": "boolean"
          },
          "ocoAllowed": {
            "type": "boolean"
          },
          "quoteOrderQtyMarketAllowed": {
            "type": "boolean"
          },
          "allowTrailingStop": {
            "type": "boolean",
            "example": false
          },
          "isSpotTradingAllowed": {
            "type": "boolean"
          },
          "isMarginTradingAllowed": {
            "type": "boolean"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_1_filters"
            }
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "SPOT"
            }
          },
          "defaultSelfTradePreventionMode": {
            "type": "string",
            "example": "NONE"
          },
          "allowedSelfTradePreventionModes": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "NONE"
            }
          }
        }
      },
      "inline_response_200_9_cancelResponse": {
        "required": [
          "clientOrderId",
          "cummulativeQuoteQty",
          "executedQty",
          "orderId",
          "orderListId",
          "origClientOrderId",
          "origQty",
          "price",
          "selfTradePreventionMode",
          "side",
          "status",
          "symbol",
          "timeInForce",
          "type"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "origClientOrderId": {
            "type": "string",
            "example": "DnLo3vTAQcjha43lAZhZ0y"
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 9
          },
          "orderListId": {
            "type": "integer",
            "format": "int64",
            "example": -1
          },
          "clientOrderId": {
            "type": "string",
            "example": "osxN3JXAtJvKvCqGeMWMVR"
          },
          "price": {
            "type": "string",
            "example": "0.01000000"
          },
          "origQty": {
            "type": "string",
            "example": "0.000100"
          },
          "executedQty": {
            "type": "string",
            "example": "0.00000000"
          },
          "cummulativeQuoteQty": {
            "type": "string",
            "example": "0.00000000"
          },
          "status": {
            "type": "string",
            "example": "CANCELED"
          },
          "timeInForce": {
            "type": "string",
            "example": "GTC"
          },
          "type": {
            "type": "string",
            "example": "LIMIT"
          },
          "side": {
            "type": "string",
            "example": "SELL"
          },
          "selfTradePreventionMode": {
            "type": "string",
            "example": "NONE"
          }
        }
      },
      "inline_response_200_9_newOrderResponse": {
        "required": [
          "clientOrderId",
          "cummulativeQuoteQty",
          "executedQty",
          "fills",
          "orderId",
          "orderListId",
          "origQty",
          "price",
          "selfTradePreventionMode",
          "side",
          "status",
          "symbol",
          "timeInForce",
          "transactTime",
          "type",
          "workingTime"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "orderListId": {
            "type": "integer",
            "format": "int64",
            "example": -1
          },
          "clientOrderId": {
            "type": "string",
            "example": "wOceeeOzNORyLiQfw7jd8S"
          },
          "transactTime": {
            "type": "integer",
            "format": "int64",
            "example": 1652928801803
          },
          "price": {
            "type": "string",
            "example": "0.02000000"
          },
          "origQty": {
            "type": "string",
            "example": "0.040000"
          },
          "executedQty": {
            "type": "string",
            "example": "0.00000000"
          },
          "cummulativeQuoteQty": {
            "type": "string",
            "example": "0.00000000"
          },
          "status": {
            "type": "string",
            "example": "NEW"
          },
          "timeInForce": {
            "type": "string",
            "example": "GTC"
          },
          "type": {
            "type": "string",
            "example": "LIMIT"
          },
          "side": {
            "type": "string",
            "example": "BUY"
          },
          "workingTime": {
            "type": "integer",
            "format": "int64",
            "example": 1669277163808
          },
          "fills": {
            "maxItems": 0,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "selfTradePreventionMode": {
            "type": "string",
            "example": "NONE"
          }
        }
      },
      "inline_response_200_10_orders": {
        "required": [
          "clientOrderId",
          "orderId",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "clientOrderId": {
            "type": "string"
          }
        },
        "example": "[{\"symbol\":\"LTCBTC\",\"orderId\":2,\"clientOrderId\":\"Kk7sqHb9J6mJWTMDVW7Vos\"},{\"symbol\":\"LTCBTC\",\"orderId\":3,\"clientOrderId\":\"xTXKaGYd4bluPVp78IVRvl\"}]"
      },
      "inline_response_200_10_orderReports": {
        "required": [
          "clientOrderId",
          "cummulativeQuoteQty",
          "executedQty",
          "orderId",
          "orderListId",
          "origQty",
          "price",
          "selfTradePreventionMode",
          "side",
          "status",
          "stopPrice",
          "symbol",
          "timeInForce",
          "transactTime",
          "type",
          "workingTime"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "orderListId": {
            "type": "integer",
            "format": "int64"
          },
          "clientOrderId": {
            "type": "string"
          },
          "transactTime": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "string"
          },
          "origQty": {
            "type": "string"
          },
          "executedQty": {
            "type": "string"
          },
          "cummulativeQuoteQty": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "timeInForce": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "side": {
            "type": "string"
          },
          "stopPrice": {
            "type": "string"
          },
          "workingTime": {
            "type": "string"
          },
          "selfTradePreventionMode": {
            "type": "string"
          }
        }
      },
      "inline_response_200_11_orders": {
        "required": [
          "clientOrderId",
          "orderId",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "clientOrderId": {
            "type": "string"
          }
        },
        "example": "[{\"symbol\":\"LTCBTC\",\"orderId\":4,\"clientOrderId\":\"qD1gy3kc3Gx0rihm9Y3xwS\"},{\"symbol\":\"LTCBTC\",\"orderId\":5,\"clientOrderId\":\"ARzZ9I00CPM8i3NhmU9Ega\"}]"
      },
      "inline_response_200_15_rows": {
        "required": [
          "amount",
          "asset",
          "status",
          "timestamp",
          "txId",
          "type"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "asset": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "txId": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "inline_response_200_16_rows": {
        "required": [
          "asset",
          "isolatedSymbol",
          "principal",
          "status",
          "timestamp",
          "txId"
        ],
        "type": "object",
        "properties": {
          "isolatedSymbol": {
            "type": "string"
          },
          "txId": {
            "type": "integer",
            "format": "int64"
          },
          "asset": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "inline_response_200_17_rows": {
        "required": [
          "amount",
          "asset",
          "interest",
          "isolatedSymbol",
          "principal",
          "status",
          "timestamp",
          "txId"
        ],
        "type": "object",
        "properties": {
          "isolatedSymbol": {
            "type": "string",
            "description": "Isolated symbol, will not be returned for crossed margin",
            "example": "BNBUSDT"
          },
          "amount": {
            "type": "string",
            "description": "Total amount repaid",
            "example": "14.00000000"
          },
          "asset": {
            "type": "string",
            "example": "BNB"
          },
          "interest": {
            "type": "string",
            "description": "Interest repaid",
            "example": "0.01866667"
          },
          "principal": {
            "type": "string",
            "description": "Principal repaid",
            "example": "13.98133333"
          },
          "status": {
            "type": "string",
            "description": "One of PENDING (pending execution), CONFIRMED (successfully execution), FAILED (execution failed, nothing happened to your account)",
            "example": "CONFIRMED"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": 1563438204000
          },
          "txId": {
            "type": "integer",
            "format": "int64",
            "example": 2970933056
          }
        }
      },
      "inline_response_200_24_rows": {
        "required": [
          "asset",
          "interest",
          "interestAccuredTime",
          "interestRate",
          "isolatedSymbol",
          "principal",
          "type"
        ],
        "type": "object",
        "properties": {
          "isolatedSymbol": {
            "type": "string",
            "example": "BNBUSDT"
          },
          "asset": {
            "type": "string",
            "example": "BNB"
          },
          "interest": {
            "type": "string",
            "example": "0.01866667"
          },
          "interestAccuredTime": {
            "type": "integer",
            "format": "int64",
            "example": 1566813600
          },
          "interestRate": {
            "type": "string",
            "example": "0.01600000"
          },
          "principal": {
            "type": "string",
            "example": "36.22000000"
          },
          "type": {
            "type": "string",
            "example": "ON_BORROW"
          }
        }
      },
      "inline_response_200_25_rows": {
        "required": [
          "avgPrice",
          "executedQty",
          "isIsolated",
          "orderId",
          "price",
          "qty",
          "side",
          "symbol",
          "timeInForce",
          "updatedTime"
        ],
        "type": "object",
        "properties": {
          "avgPrice": {
            "type": "string"
          },
          "executedQty": {
            "type": "string"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "string"
          },
          "qty": {
            "type": "string"
          },
          "side": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "timeInForce": {
            "type": "string"
          },
          "isIsolated": {
            "type": "boolean"
          },
          "updatedTime": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "inline_response_200_26_userAssets": {
        "required": [
          "asset",
          "borrowed",
          "free",
          "interest",
          "locked",
          "netAsset"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "BTC"
          },
          "borrowed": {
            "type": "string",
            "example": "0.00000000"
          },
          "free": {
            "type": "string",
            "example": "0.00499500"
          },
          "interest": {
            "type": "string",
            "example": "0.00000000"
          },
          "locked": {
            "type": "string",
            "example": "0.00000000"
          },
          "netAsset": {
            "type": "string",
            "example": "0.00499500"
          }
        }
      },
      "inline_response_200_27_orderReports": {
        "required": [
          "clientOrderId",
          "cummulativeQuoteQty",
          "executedQty",
          "orderId",
          "orderListId",
          "origQty",
          "price",
          "side",
          "status",
          "stopPrice",
          "symbol",
          "timeInForce",
          "transactTime",
          "type"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "orderListId": {
            "type": "integer",
            "format": "int64"
          },
          "clientOrderId": {
            "type": "string"
          },
          "transactTime": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "string"
          },
          "origQty": {
            "type": "string"
          },
          "executedQty": {
            "type": "string"
          },
          "cummulativeQuoteQty": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "timeInForce": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "side": {
            "type": "string"
          },
          "stopPrice": {
            "type": "string"
          }
        }
      },
      "inline_response_200_41_userAssetDribbletDetails": {
        "required": [
          "amount",
          "fromAsset",
          "operateTime",
          "serviceChargeAmount",
          "transId",
          "transferedAmount"
        ],
        "type": "object",
        "properties": {
          "transId": {
            "type": "integer",
            "format": "int64",
            "example": 4359321
          },
          "serviceChargeAmount": {
            "type": "string",
            "example": "0.000009"
          },
          "amount": {
            "type": "string",
            "example": "0.0009"
          },
          "operateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1615985535000
          },
          "transferedAmount": {
            "type": "string",
            "example": "0.000441"
          },
          "fromAsset": {
            "type": "string",
            "example": "USDT"
          }
        }
      },
      "inline_response_200_41_userAssetDribblets": {
        "required": [
          "operateTime",
          "totalServiceChargeAmount",
          "totalTransferedAmount",
          "transId",
          "userAssetDribbletDetails"
        ],
        "type": "object",
        "properties": {
          "operateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1615985535000
          },
          "totalTransferedAmount": {
            "type": "string",
            "example": "0.00132256"
          },
          "totalServiceChargeAmount": {
            "type": "string",
            "example": "0.00002699"
          },
          "transId": {
            "type": "integer",
            "format": "int64",
            "example": 45178372831
          },
          "userAssetDribbletDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_41_userAssetDribbletDetails"
            }
          }
        }
      },
      "inline_response_200_50_data_triggerCondition": {
        "required": [
          "GCR",
          "IFER",
          "UFR"
        ],
        "type": "object",
        "properties": {
          "GCR": {
            "type": "integer",
            "description": "Number of GTC orders",
            "format": "int64",
            "example": 150
          },
          "IFER": {
            "type": "integer",
            "description": "Number of FOK/IOC orders",
            "format": "int64",
            "example": 150
          },
          "UFR": {
            "type": "integer",
            "description": "Number of orders",
            "format": "int64",
            "example": 300
          }
        }
      },
      "inline_response_200_50_data_indicators_BTCUSDT": {
        "required": [
          "c",
          "i",
          "t",
          "v"
        ],
        "type": "object",
        "properties": {
          "i": {
            "type": "string",
            "description": "Unfilled Ratio (UFR)",
            "example": "UFR"
          },
          "c": {
            "type": "integer",
            "description": "Count of all orders",
            "format": "int64",
            "example": 20
          },
          "v": {
            "type": "number",
            "description": "Current UFR value",
            "format": "float",
            "example": 0.05
          },
          "t": {
            "type": "number",
            "description": "Trigger UFR value",
            "format": "float",
            "example": 0.99
          }
        }
      },
      "inline_response_200_50_data_indicators": {
        "required": [
          "BTCUSDT"
        ],
        "type": "object",
        "properties": {
          "BTCUSDT": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_50_data_indicators_BTCUSDT"
            }
          }
        },
        "description": "The indicators updated every 30 seconds"
      },
      "inline_response_200_50_data": {
        "required": [
          "indicators",
          "isLocked",
          "plannedRecoverTime",
          "triggerCondition",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "isLocked": {
            "type": "boolean",
            "description": "API trading function is locked or not",
            "example": false
          },
          "plannedRecoverTime": {
            "type": "integer",
            "description": "If API trading function is locked, this is the planned recover time",
            "format": "int64",
            "example": 0
          },
          "triggerCondition": {
            "$ref": "#/components/schemas/inline_response_200_50_data_triggerCondition"
          },
          "indicators": {
            "$ref": "#/components/schemas/inline_response_200_50_data_indicators"
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1547630471725
          }
        }
      },
      "inline_response_200_51_userAssetDribblets": {
        "required": [
          "operateTime",
          "totalServiceChargeAmount",
          "totalTransferedAmount",
          "transId",
          "userAssetDribbletDetails"
        ],
        "type": "object",
        "properties": {
          "operateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1615985535000
          },
          "totalTransferedAmount": {
            "type": "string",
            "description": "Total transfered BNB amount for this exchange.",
            "example": "0.00132256"
          },
          "totalServiceChargeAmount": {
            "type": "string",
            "description": "Total service charge amount for this exchange.",
            "example": "0.00002699"
          },
          "transId": {
            "type": "integer",
            "format": "int64",
            "example": 45178372831
          },
          "userAssetDribbletDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_41_userAssetDribbletDetails"
            }
          }
        }
      },
      "inline_response_200_52_details": {
        "required": [
          "amountFree",
          "asset",
          "assetFullName",
          "exchange",
          "toBNB",
          "toBNBOffExchange",
          "toBTC"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "ADA"
          },
          "assetFullName": {
            "type": "string",
            "example": "ADA"
          },
          "amountFree": {
            "type": "string",
            "description": "Convertible amount",
            "example": "6.21"
          },
          "toBTC": {
            "type": "string",
            "description": "BTC amount",
            "example": "0.00016848"
          },
          "toBNB": {
            "type": "string",
            "description": "BNB amount（Not deducted commission fee",
            "example": "0.01777302"
          },
          "toBNBOffExchange": {
            "type": "string",
            "description": "BNB amount（Deducted commission fee",
            "example": "0.01741756"
          },
          "exchange": {
            "type": "string",
            "description": "Commission fee",
            "example": "0.00035546"
          }
        }
      },
      "inline_response_200_53_transferResult": {
        "required": [
          "amount",
          "fromAsset",
          "operateTime",
          "serviceChargeAmount",
          "tranId",
          "transferedAmount"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": "0.03000000"
          },
          "fromAsset": {
            "type": "string",
            "example": "ETH"
          },
          "operateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1563368549307
          },
          "serviceChargeAmount": {
            "type": "string",
            "example": "0.00500000"
          },
          "tranId": {
            "type": "integer",
            "format": "int64",
            "example": 2970932918
          },
          "transferedAmount": {
            "type": "string",
            "example": "0.25000000"
          }
        }
      },
      "inline_response_200_54_rows": {
        "required": [
          "amount",
          "asset",
          "divTime",
          "enInfo",
          "id",
          "tranId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 242006910
          },
          "amount": {
            "type": "string",
            "example": "10.00000000"
          },
          "asset": {
            "type": "string",
            "example": "BHFT"
          },
          "divTime": {
            "type": "integer",
            "format": "int64",
            "example": 1563189166000
          },
          "enInfo": {
            "type": "string",
            "example": "BHFT distribution"
          },
          "tranId": {
            "type": "integer",
            "format": "int64",
            "example": 2968885920
          }
        }
      },
      "inline_response_200_55_CTR": {
        "required": [
          "depositStatus",
          "depositTip",
          "minWithdrawAmount",
          "withdrawFee",
          "withdrawStatus"
        ],
        "type": "object",
        "properties": {
          "minWithdrawAmount": {
            "type": "string",
            "example": "70.00000000"
          },
          "depositStatus": {
            "type": "boolean",
            "description": "deposit status (false if ALL of networks' are false)",
            "example": false
          },
          "withdrawFee": {
            "type": "integer",
            "format": "int64",
            "example": 35
          },
          "withdrawStatus": {
            "type": "boolean",
            "description": "withdrawStatus status (false if ALL of networks' are false)"
          },
          "depositTip": {
            "type": "string",
            "example": "Delisted, Deposit Suspended"
          }
        }
      },
      "inline_response_200_57_rows": {
        "required": [
          "amount",
          "asset",
          "status",
          "timestamp",
          "tranId",
          "type"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "USDT"
          },
          "amount": {
            "type": "string",
            "example": "1"
          },
          "type": {
            "type": "string",
            "example": "MAIN_UMFUTUR"
          },
          "status": {
            "type": "string",
            "example": "CONFIRMED"
          },
          "tranId": {
            "type": "integer",
            "format": "int64",
            "example": 11415955596
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": 1544433328000
          }
        }
      },
      "inline_response_200_62_rows": {
        "required": [
          "accountType",
          "deductedAmount",
          "deductedAsset",
          "status",
          "targetAmount",
          "targetAsset",
          "time",
          "tranId",
          "type"
        ],
        "type": "object",
        "properties": {
          "tranId": {
            "type": "integer",
            "format": "int64",
            "example": 118263407119
          },
          "type": {
            "type": "integer",
            "format": "int64",
            "example": 244
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "example": 1664442078000
          },
          "deductedAsset": {
            "type": "string",
            "example": "BUSD"
          },
          "deductedAmount": {
            "type": "string",
            "example": "1"
          },
          "targetAsset": {
            "type": "string",
            "example": "USDC"
          },
          "targetAmount": {
            "type": "string",
            "example": "1"
          },
          "status": {
            "type": "string",
            "example": "S"
          },
          "accountType": {
            "type": "string",
            "example": "MAIN"
          }
        }
      },
      "inline_response_200_63_rows": {
        "required": [
          "amount",
          "asset",
          "createTime",
          "status",
          "tranId",
          "type"
        ],
        "type": "object",
        "properties": {
          "createTime": {
            "type": "integer",
            "format": "int64",
            "example": 1667880112000
          },
          "tranId": {
            "type": "integer",
            "format": "int64",
            "example": 121230610120
          },
          "type": {
            "type": "integer",
            "format": "int64",
            "example": 248
          },
          "asset": {
            "type": "string",
            "example": "USDT"
          },
          "amount": {
            "type": "string",
            "example": "1"
          },
          "status": {
            "type": "string",
            "example": "S"
          }
        }
      },
      "inline_response_200_65_exchangeRates": {
        "required": [
          "TUSD",
          "USDC",
          "USDP"
        ],
        "type": "object",
        "properties": {
          "USDC": {
            "type": "string",
            "example": "1"
          },
          "TUSD": {
            "type": "string",
            "example": "1"
          },
          "USDP": {
            "type": "string",
            "example": "1"
          }
        }
      },
      "inline_response_200_67_subAccounts": {
        "required": [
          "createTime",
          "email",
          "isAssetManagementSubAccount",
          "isFreeze",
          "isManagedSubAccount"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "testsub@gmail.com"
          },
          "isFreeze": {
            "type": "boolean",
            "example": false
          },
          "createTime": {
            "type": "integer",
            "format": "int64",
            "example": 1544433328000
          },
          "isManagedSubAccount": {
            "type": "boolean",
            "example": false
          },
          "isAssetManagementSubAccount": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "inline_response_200_69_transfers": {
        "required": [
          "asset",
          "from",
          "qty",
          "time",
          "to",
          "tranId"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "example": "aaa@test.com"
          },
          "to": {
            "type": "string",
            "example": "bbb@test.com"
          },
          "asset": {
            "type": "string",
            "example": "BTC"
          },
          "qty": {
            "type": "string",
            "example": "1"
          },
          "tranId": {
            "type": "integer",
            "format": "int64",
            "example": 11897001102
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "example": 1544433328000
          }
        }
      },
      "inline_response_200_71_balances": {
        "required": [
          "asset",
          "free",
          "locked"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "ADA"
          },
          "free": {
            "type": "integer",
            "format": "int64",
            "example": 10000
          },
          "locked": {
            "type": "integer",
            "format": "int64",
            "example": 0
          }
        }
      },
      "inline_response_200_72_spotSubUserAssetBtcVoList": {
        "required": [
          "email",
          "totalAsset"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "sub123@test.com"
          },
          "totalAsset": {
            "type": "string",
            "example": "9999.00000000"
          }
        }
      },
      "inline_response_200_77_marginTradeCoeffVo": {
        "required": [
          "forceLiquidationBar",
          "marginCallBar",
          "normalBar"
        ],
        "type": "object",
        "properties": {
          "forceLiquidationBar": {
            "type": "string",
            "description": "Liquidation margin ratio",
            "example": "1.10000000"
          },
          "marginCallBar": {
            "type": "string",
            "description": "Margin call margin ratio",
            "example": "1.50000000"
          },
          "normalBar": {
            "type": "string",
            "description": "Initial margin ratio",
            "example": "2.00000000"
          }
        }
      },
      "inline_response_200_78_subAccountList": {
        "required": [
          "email",
          "totalAssetOfBtc",
          "totalLiabilityOfBtc",
          "totalNetAssetOfBtc"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "123@test.com"
          },
          "totalAssetOfBtc": {
            "type": "string",
            "example": "2.11111111"
          },
          "totalLiabilityOfBtc": {
            "type": "string",
            "example": "1.11111111"
          },
          "totalNetAssetOfBtc": {
            "type": "string",
            "example": "1.00000000"
          }
        }
      },
      "inline_response_200_81_subAccountList": {
        "required": [
          "asset",
          "email",
          "totalInitialMargin",
          "totalMaintenanceMargin",
          "totalMarginBalance",
          "totalOpenOrderInitialMargin",
          "totalPositionInitialMargin",
          "totalUnrealizedProfit",
          "totalWalletBalance"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "123@test.com"
          },
          "totalInitialMargin": {
            "type": "string",
            "example": "9.00000000"
          },
          "totalMaintenanceMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalMarginBalance": {
            "type": "string",
            "example": "22.12659734"
          },
          "totalOpenOrderInitialMargin": {
            "type": "string",
            "example": "9.00000000"
          },
          "totalPositionInitialMargin": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalUnrealizedProfit": {
            "type": "string",
            "example": "0.00000000"
          },
          "totalWalletBalance": {
            "type": "string",
            "example": "22.12659734"
          },
          "asset": {
            "type": "string",
            "example": "USD"
          }
        }
      },
      "inline_response_200_93_data_balances": {
        "required": [
          "asset",
          "free",
          "locked"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "BTC"
          },
          "free": {
            "type": "string",
            "example": "0.09905021"
          },
          "locked": {
            "type": "string",
            "example": "0.00000000"
          }
        }
      },
      "inline_response_200_93_data": {
        "required": [
          "balances",
          "totalAssetOfBtc"
        ],
        "type": "object",
        "properties": {
          "balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_93_data_balances"
            }
          },
          "totalAssetOfBtc": {
            "type": "string",
            "example": "0.09942700"
          }
        }
      },
      "inline_response_200_93_snapshotVos": {
        "required": [
          "data",
          "type",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/inline_response_200_93_data"
          },
          "type": {
            "type": "string",
            "example": "spot"
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1576281599000
          }
        }
      },
      "inline_response_200_100_data": {
        "required": [
          "amount",
          "createTime",
          "fiatCurrency",
          "indicatedAmount",
          "method",
          "orderNo",
          "status",
          "totalFee",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "orderNo": {
            "type": "string",
            "example": "7d76d611-0568-4f43-afb6-24cac7767365"
          },
          "fiatCurrency": {
            "type": "string",
            "example": "BRL"
          },
          "indicatedAmount": {
            "type": "string",
            "example": "10.00"
          },
          "amount": {
            "type": "string",
            "example": "10.00"
          },
          "totalFee": {
            "type": "string",
            "example": "0.00"
          },
          "method": {
            "type": "string",
            "example": "BankAccount"
          },
          "status": {
            "type": "string",
            "description": "Processing, Failed, Successful, Finished, Refunding, Refunded, Refund Failed, Order Partial credit Stopped",
            "example": "Expired"
          },
          "createTime": {
            "type": "integer",
            "format": "int64",
            "example": 1626144956000
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1626400907000
          }
        }
      },
      "inline_response_200_101_data": {
        "required": [
          "createTime",
          "cryptoCurrency",
          "fiatCurrency",
          "obtainAmount",
          "orderNo",
          "price",
          "sourceAmount",
          "status",
          "totalFee",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "orderNo": {
            "type": "string",
            "example": "353fca443f06466db0c4dc89f94f027a"
          },
          "sourceAmount": {
            "type": "string",
            "description": "Fiat trade amount",
            "example": "20.00"
          },
          "fiatCurrency": {
            "type": "string",
            "description": "Fiat token",
            "example": "EUR"
          },
          "obtainAmount": {
            "type": "string",
            "description": "Crypto trade amount",
            "example": "4.462"
          },
          "cryptoCurrency": {
            "type": "string",
            "description": "Crypto token",
            "example": "LUNA"
          },
          "totalFee": {
            "type": "string",
            "description": "Trade fee",
            "example": "0.2"
          },
          "price": {
            "type": "string",
            "example": "4.437472"
          },
          "status": {
            "type": "string",
            "description": "Processing, Completed, Failed, Refunded",
            "example": "Failed"
          },
          "createTime": {
            "type": "integer",
            "format": "int64",
            "example": 1624529919000
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1624529919000
          }
        }
      },
      "inline_response_200_110_positionAmountVos": {
        "required": [
          "amount",
          "amountInBTC",
          "amountInUSDT",
          "asset"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": "75.46000000"
          },
          "amountInBTC": {
            "type": "string",
            "example": "0.01044819"
          },
          "amountInUSDT": {
            "type": "string",
            "example": "75.46000000"
          },
          "asset": {
            "type": "string",
            "example": "USDT"
          }
        }
      },
      "inline_response_200_121_data": {
        "required": [
          "algoId",
          "algoName",
          "poolIndex",
          "unit"
        ],
        "type": "object",
        "properties": {
          "algoName": {
            "type": "string",
            "example": "sha256"
          },
          "algoId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "poolIndex": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "unit": {
            "type": "string",
            "example": "h/s"
          }
        }
      },
      "inline_response_200_122_data": {
        "required": [
          "algoId",
          "algoName",
          "coinId",
          "coinName",
          "poolIndex"
        ],
        "type": "object",
        "properties": {
          "coinName": {
            "type": "string",
            "example": "BTC"
          },
          "coinId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "poolIndex": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "algoId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "algoName": {
            "type": "string",
            "example": "sha256"
          }
        }
      },
      "inline_response_200_123_hashrateDatas": {
        "required": [
          "hashrate",
          "reject",
          "time"
        ],
        "type": "object",
        "properties": {
          "time": {
            "type": "integer",
            "format": "int64",
            "example": 1587902400000
          },
          "hashrate": {
            "type": "string",
            "example": "0"
          },
          "reject": {
            "type": "integer",
            "description": "Rejection Rate",
            "format": "int64",
            "example": 0
          }
        }
      },
      "inline_response_200_123_data": {
        "required": [
          "hashrateDatas",
          "type",
          "workerName"
        ],
        "type": "object",
        "properties": {
          "workerName": {
            "type": "string",
            "description": "Mining Account name",
            "example": "bhdc1.16A10404B"
          },
          "type": {
            "type": "string",
            "description": "Type of hourly hashrate",
            "example": "H_hashrate"
          },
          "hashrateDatas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_123_hashrateDatas"
            }
          }
        }
      },
      "inline_response_200_124_data_workerDatas": {
        "required": [
          "dayHashRate",
          "hashRate",
          "lastShareTime",
          "rejectRate",
          "status",
          "workerId",
          "workerName"
        ],
        "type": "object",
        "properties": {
          "workerId": {
            "type": "string",
            "example": "1420554439452400131"
          },
          "workerName": {
            "type": "string",
            "example": "2X73"
          },
          "status": {
            "type": "integer",
            "description": "Status：1 valid, 2 invalid, 3 no longer valid",
            "format": "int64",
            "example": 3
          },
          "hashRate": {
            "type": "integer",
            "description": "Real-time rate",
            "format": "int64",
            "example": 0
          },
          "dayHashRate": {
            "type": "integer",
            "description": "24H Hashrate",
            "format": "int64",
            "example": 0
          },
          "rejectRate": {
            "type": "integer",
            "description": "Real-time Rejection Rate",
            "format": "int64",
            "example": 0
          },
          "lastShareTime": {
            "type": "integer",
            "description": "Last submission time",
            "format": "int64",
            "example": 1587712919000
          }
        }
      },
      "inline_response_200_124_data": {
        "required": [
          "pageSize",
          "totalNum",
          "workerDatas"
        ],
        "type": "object",
        "properties": {
          "workerDatas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_124_data_workerDatas"
            }
          },
          "totalNum": {
            "type": "integer",
            "format": "int64",
            "example": 18530
          },
          "pageSize": {
            "type": "integer",
            "format": "int64",
            "example": 20
          }
        }
      },
      "inline_response_200_125_data_accountProfits": {
        "required": [
          "coinName",
          "dayHashRate",
          "hashTransfer",
          "profitAmount",
          "status",
          "time",
          "transferAmount",
          "type"
        ],
        "type": "object",
        "properties": {
          "time": {
            "type": "integer",
            "description": "Mining date",
            "format": "int64",
            "example": 1586188800000
          },
          "type": {
            "type": "integer",
            "description": "0:Mining Wallet,5:Mining Address,7:Pool Savings,8:Transferred,31:Income Transfer ,32:Hashrate Resale-Mining Wallet 33:Hashrate Resale-Pool Savings",
            "format": "int64",
            "example": 31
          },
          "hashTransfer": {
            "type": "integer",
            "description": "Transferred Hashrate",
            "format": "nullable"
          },
          "transferAmount": {
            "type": "number",
            "description": "Transferred Income",
            "format": "nullable"
          },
          "dayHashRate": {
            "type": "integer",
            "description": "Daily Hashrate",
            "format": "int64",
            "example": 129129903378244
          },
          "profitAmount": {
            "type": "number",
            "description": "Earnings Amount",
            "format": "double",
            "example": 8.6083060304
          },
          "coinName": {
            "type": "string",
            "description": "Coin Type",
            "example": "BTC"
          },
          "status": {
            "type": "integer",
            "description": "Status：0:Unpaid, 1:Paying  2：Paid",
            "format": "int32",
            "example": 2
          }
        }
      },
      "inline_response_200_125_data": {
        "required": [
          "accountProfits",
          "pageSize",
          "totalNum"
        ],
        "type": "object",
        "properties": {
          "accountProfits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_125_data_accountProfits"
            }
          },
          "totalNum": {
            "type": "integer",
            "description": "Total Rows",
            "format": "int64",
            "example": 3
          },
          "pageSize": {
            "type": "integer",
            "description": "Rows per page",
            "format": "int64",
            "example": 20
          }
        }
      },
      "inline_response_200_126_data_otherProfits": {
        "required": [
          "coinName",
          "profitAmount",
          "status",
          "time",
          "type"
        ],
        "type": "object",
        "properties": {
          "time": {
            "type": "integer",
            "description": "Mining date",
            "format": "int64",
            "example": 1607443200000
          },
          "coinName": {
            "type": "string",
            "description": "Coin Name",
            "example": "BTC"
          },
          "type": {
            "type": "integer",
            "description": "1: Merged Mining, 2: Activity Bonus, 3:Rebate 4:Smart Pool 6:Income Transfer 7:Pool Savings",
            "format": "int32",
            "example": 4
          },
          "profitAmount": {
            "type": "number",
            "format": "double",
            "example": 0.0011859
          },
          "status": {
            "type": "integer",
            "description": "0:Unpaid, 1:Paying  2：Paid",
            "format": "int32",
            "example": 2
          }
        }
      },
      "inline_response_200_126_data": {
        "required": [
          "otherProfits",
          "pageSize",
          "totalNum"
        ],
        "type": "object",
        "properties": {
          "otherProfits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_126_data_otherProfits"
            }
          },
          "totalNum": {
            "type": "integer",
            "description": "Total Rows",
            "format": "int64",
            "example": 3
          },
          "pageSize": {
            "type": "integer",
            "description": "Rows per page",
            "format": "int64",
            "example": 20
          }
        }
      },
      "inline_response_200_127_data_configDetails": {
        "required": [
          "algoName",
          "configId",
          "endDay",
          "hashRate",
          "poolUsername",
          "startDay",
          "status",
          "toPoolUsername"
        ],
        "type": "object",
        "properties": {
          "configId": {
            "type": "integer",
            "description": "Mining ID",
            "format": "int64",
            "example": 168
          },
          "poolUsername": {
            "type": "string",
            "description": "Transfer out of subaccount",
            "example": "123"
          },
          "toPoolUsername": {
            "type": "string",
            "description": "Transfer into subaccount",
            "example": "user1"
          },
          "algoName": {
            "type": "string",
            "description": "Transfer algorithm",
            "example": "Ethash"
          },
          "hashRate": {
            "type": "integer",
            "description": "Transferred Hashrate quantity",
            "format": "int64",
            "example": 5000000
          },
          "startDay": {
            "type": "integer",
            "description": "Start date",
            "format": "int64",
            "example": 20201210
          },
          "endDay": {
            "type": "integer",
            "description": "End date",
            "format": "int64",
            "example": 20210405
          },
          "status": {
            "type": "integer",
            "description": "0 Processing, 1：Cancelled, 2：Terminated ",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_127_data": {
        "required": [
          "configDetails",
          "pageSize",
          "totalNum"
        ],
        "type": "object",
        "properties": {
          "configDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_127_data_configDetails"
            }
          },
          "totalNum": {
            "type": "integer",
            "format": "int64",
            "example": 21
          },
          "pageSize": {
            "type": "integer",
            "format": "int64",
            "example": 200
          }
        }
      },
      "inline_response_200_128_data_profitTransferDetails": {
        "required": [
          "algoName",
          "amount",
          "coinName",
          "day",
          "hashRate",
          "poolUsername",
          "toPoolUsername"
        ],
        "type": "object",
        "properties": {
          "poolUsername": {
            "type": "string",
            "description": "Transfer out of sub-account",
            "example": "test4001"
          },
          "toPoolUsername": {
            "type": "string",
            "description": "Transfer into subaccount",
            "example": "pop"
          },
          "algoName": {
            "type": "string",
            "description": "Transfer algorithm",
            "example": "sha256"
          },
          "hashRate": {
            "type": "integer",
            "description": "Transferred Hashrate quantity",
            "format": "int64",
            "example": 200000000000
          },
          "day": {
            "type": "integer",
            "description": "Transfer date",
            "format": "int64",
            "example": 20201213
          },
          "amount": {
            "type": "number",
            "description": "Transfer income",
            "format": "double",
            "example": 0.2256872
          },
          "coinName": {
            "type": "string",
            "example": "BTC"
          }
        }
      },
      "inline_response_200_128_data": {
        "required": [
          "pageSize",
          "profitTransferDetails",
          "totalNum"
        ],
        "type": "object",
        "properties": {
          "profitTransferDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_128_data_profitTransferDetails"
            }
          },
          "totalNum": {
            "type": "integer",
            "format": "int64",
            "example": 8
          },
          "pageSize": {
            "type": "integer",
            "format": "int64",
            "example": 200
          }
        }
      },
      "inline_response_200_131_data_profitToday": {
        "required": [
          "BCH",
          "BSV",
          "BTC"
        ],
        "type": "object",
        "properties": {
          "BTC": {
            "type": "string",
            "example": "0.00314332"
          },
          "BSV": {
            "type": "string",
            "example": "56.17055953"
          },
          "BCH": {
            "type": "string",
            "example": "106.61586001"
          }
        }
      },
      "inline_response_200_131_data": {
        "required": [
          "algo",
          "dayHashRate",
          "fifteenMinHashRate",
          "invalidNum",
          "profitToday",
          "profitYesterday",
          "unit",
          "userName",
          "validNum"
        ],
        "type": "object",
        "properties": {
          "fifteenMinHashRate": {
            "type": "string",
            "example": "457835490067496409.00000000"
          },
          "dayHashRate": {
            "type": "string",
            "example": "214289268068874127.65000000"
          },
          "validNum": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "invalidNum": {
            "type": "integer",
            "format": "int64",
            "example": 17562
          },
          "profitToday": {
            "$ref": "#/components/schemas/inline_response_200_131_data_profitToday"
          },
          "profitYesterday": {
            "$ref": "#/components/schemas/inline_response_200_131_data_profitToday"
          },
          "userName": {
            "type": "string",
            "example": "test"
          },
          "unit": {
            "type": "string",
            "example": "h/s"
          },
          "algo": {
            "type": "string",
            "example": "sha256"
          }
        }
      },
      "inline_response_200_132_list": {
        "required": [
          "hashrate",
          "reject",
          "time"
        ],
        "type": "object",
        "properties": {
          "time": {
            "type": "integer",
            "format": "int64",
            "example": 1585267200000
          },
          "hashrate": {
            "type": "string",
            "example": "0.00000000"
          },
          "reject": {
            "type": "string",
            "example": "0.00000000"
          }
        }
      },
      "inline_response_200_132_data": {
        "required": [
          "list",
          "type",
          "userName"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "H_hashrate"
          },
          "userName": {
            "type": "string",
            "example": "test"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_132_list"
            }
          }
        }
      },
      "inline_response_200_133_data_accountProfits": {
        "required": [
          "amount",
          "coinName",
          "puid",
          "subName",
          "time",
          "type"
        ],
        "type": "object",
        "properties": {
          "time": {
            "type": "integer",
            "format": "int64",
            "example": 1607443200000
          },
          "coinName": {
            "type": "string",
            "example": "BTC"
          },
          "type": {
            "type": "integer",
            "description": "0:Referral 1:Refund 2:Rebate",
            "format": "int32",
            "example": 2
          },
          "puid": {
            "type": "integer",
            "description": "puid",
            "format": "int32",
            "example": 59985472
          },
          "subName": {
            "type": "string",
            "description": "Mining account",
            "example": "vdvaghani"
          },
          "amount": {
            "type": "number",
            "example": 0.09186957
          }
        }
      },
      "inline_response_200_133_data": {
        "required": [
          "accountProfits",
          "pageSize",
          "totalNum"
        ],
        "type": "object",
        "properties": {
          "accountProfits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_133_data_accountProfits"
            }
          },
          "totalNum": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "example": 20
          }
        }
      },
      "inline_response_200_134_rows": {
        "required": [
          "amount",
          "asset",
          "status",
          "timestamp",
          "tranId",
          "type"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "USDT"
          },
          "tranId": {
            "type": "integer",
            "format": "int64",
            "example": 100000001
          },
          "amount": {
            "type": "string",
            "example": "40.84624400"
          },
          "type": {
            "type": "string",
            "example": "1"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": 1555056425000
          },
          "status": {
            "type": "string",
            "description": "one of PENDING (pending to execution), CONFIRMED (successfully transfered), FAILED (execution failed, nothing happened to your account);",
            "example": "CONFIRMED"
          }
        }
      },
      "inline_response_200_136_rows": {
        "required": [
          "borrowId",
          "coin",
          "collateralAmount",
          "collateralCoin",
          "collateralRate",
          "confirmedTime",
          "deadline",
          "leftPrincipal",
          "leftTotal",
          "orderStatus"
        ],
        "type": "object",
        "properties": {
          "confirmedTime": {
            "type": "integer",
            "format": "int64",
            "example": 1582540328433
          },
          "coin": {
            "type": "string",
            "example": "USDT"
          },
          "collateralRate": {
            "type": "string",
            "example": "0.89991001"
          },
          "leftTotal": {
            "type": "string",
            "example": "4.5"
          },
          "leftPrincipal": {
            "type": "string",
            "example": "4.5"
          },
          "deadline": {
            "type": "integer",
            "format": "int64",
            "example": 4736102399000
          },
          "collateralCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "collateralAmount": {
            "type": "string",
            "example": "5.0"
          },
          "orderStatus": {
            "type": "string",
            "example": "PENDING"
          },
          "borrowId": {
            "type": "string",
            "example": "438648398970089472"
          }
        }
      },
      "inline_response_200_137_rows": {
        "required": [
          "amount",
          "coin",
          "collateralCoin",
          "confirmedTime",
          "price",
          "releasedCollateral",
          "repayCollateral",
          "repayId",
          "repayType",
          "status",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "coin": {
            "type": "string",
            "example": "USDT"
          },
          "amount": {
            "type": "string",
            "example": "1.68"
          },
          "collateralCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "repayType": {
            "type": "string",
            "example": "NORMAL"
          },
          "releasedCollateral": {
            "type": "string",
            "example": "1.80288889"
          },
          "price": {
            "type": "string",
            "example": "1.001"
          },
          "repayCollateral": {
            "type": "string",
            "example": "10010"
          },
          "confirmedTime": {
            "type": "integer",
            "format": "int64",
            "example": 1582781327575
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1582794387516
          },
          "status": {
            "type": "string",
            "example": "PENDING"
          },
          "repayId": {
            "type": "string",
            "example": "439659223998894080"
          }
        }
      },
      "inline_response_200_138_crossCollaterals": {
        "required": [
          "collateralCoin",
          "currentCollateralRate",
          "interest",
          "interestFreeLimitUsed",
          "loanAmount",
          "loanCoin",
          "locked",
          "principalForInterest"
        ],
        "type": "object",
        "properties": {
          "loanCoin": {
            "type": "string",
            "example": "USDT"
          },
          "collateralCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "locked": {
            "type": "string",
            "example": "5.82211108"
          },
          "loanAmount": {
            "type": "string",
            "example": "5.07"
          },
          "currentCollateralRate": {
            "type": "string",
            "example": "0.87168984"
          },
          "interestFreeLimitUsed": {
            "type": "string",
            "example": "5.07"
          },
          "principalForInterest": {
            "type": "string",
            "example": "0.0"
          },
          "interest": {
            "type": "string",
            "example": "0.0"
          }
        }
      },
      "inline_response_200_139_rows": {
        "required": [
          "amount",
          "coin",
          "collateralCoin",
          "confirmedTime",
          "price",
          "releasedCollateral",
          "repayCollateral",
          "repayId",
          "repayType",
          "status",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": ".17398184"
          },
          "collateralCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "coin": {
            "type": "string",
            "example": "USDT"
          },
          "preCollateralRate": {
            "type": "string",
            "example": "0.87054861"
          },
          "afterCollateralRate": {
            "type": "string",
            "example": "0.89736451"
          },
          "direction": {
            "type": "string",
            "example": "REDUCED"
          },
          "status": {
            "type": "string",
            "example": "COMPLETED"
          },
          "adjustTime": {
            "type": "integer",
            "format": "int64",
            "example": 1583978243588
          }
        }
      },
      "inline_response_200_140_rows": {
        "required": [
          "coin",
          "collateralAmountForLiquidation",
          "collateralCoin",
          "forceLiquidationStartTime",
          "restCollateralAmountAfterLiquidation",
          "restLoanAmount",
          "status"
        ],
        "type": "object",
        "properties": {
          "collateralAmountForLiquidation": {
            "type": "string",
            "example": "10.12345678"
          },
          "collateralCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "forceLiquidationStartTime": {
            "type": "integer",
            "format": "int64",
            "example": 1583978243588
          },
          "coin": {
            "type": "string",
            "example": "USDT"
          },
          "restCollateralAmountAfterLiquidation": {
            "type": "string",
            "example": "15.12345678"
          },
          "restLoanAmount": {
            "type": "string",
            "example": "11.12345678"
          },
          "status": {
            "type": "string",
            "example": "PENDING"
          }
        }
      },
      "inline_response_200_141_rows": {
        "required": [
          "collateralCoin",
          "interest",
          "interestCoin",
          "interestFreeLimitUsed",
          "interestRate",
          "principalForInterest",
          "time"
        ],
        "type": "object",
        "properties": {
          "collateralCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "interestCoin": {
            "type": "string",
            "example": "USDT"
          },
          "interest": {
            "type": "string",
            "example": "2.354"
          },
          "interestFreeLimitUsed": {
            "type": "string",
            "example": "0"
          },
          "principalForInterest": {
            "type": "string",
            "example": "10000"
          },
          "interestRate": {
            "type": "string",
            "example": "0.002"
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "example": 1582794387516
          }
        }
      },
      "inline_response_200_144_orders": {
        "required": [
          "algoId",
          "algoStatus",
          "algoType",
          "avgPrice",
          "bookTime",
          "clientAlgoId",
          "endTime",
          "executedAmt",
          "executedQty",
          "positionSide",
          "side",
          "symbol",
          "totalQty",
          "urgency"
        ],
        "type": "object",
        "properties": {
          "algoId": {
            "type": "integer",
            "format": "int64",
            "example": 14517
          },
          "symbol": {
            "type": "string",
            "example": "ETHUSDT"
          },
          "side": {
            "type": "string",
            "example": "SELL"
          },
          "positionSide": {
            "type": "string",
            "example": "SHORT"
          },
          "totalQty": {
            "type": "string",
            "example": "5.00"
          },
          "executedQty": {
            "type": "string",
            "example": "0.000"
          },
          "executedAmt": {
            "type": "string",
            "example": "0.00000000"
          },
          "avgPrice": {
            "type": "string",
            "example": "0.00"
          },
          "clientAlgoId": {
            "type": "string",
            "example": "d7096549481642f8a0bb69e9e2e31f2e"
          },
          "bookTime": {
            "type": "integer",
            "format": "int64",
            "example": 1649756817004
          },
          "endTime": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "algoStatus": {
            "type": "string",
            "example": "WORKING"
          },
          "algoType": {
            "type": "string",
            "example": "VP"
          },
          "urgency": {
            "type": "string",
            "example": "LOW"
          }
        }
      },
      "inline_response_200_145_orders": {
        "required": [
          "algoId",
          "algoStatus",
          "algoType",
          "avgPrice",
          "bookTime",
          "clientAlgoId",
          "endTime",
          "executedAmt",
          "executedQty",
          "positionSide",
          "side",
          "symbol",
          "totalQty",
          "urgency"
        ],
        "type": "object",
        "properties": {
          "algoId": {
            "type": "integer",
            "format": "int64",
            "example": 14517
          },
          "symbol": {
            "type": "string",
            "example": "ETHUSDT"
          },
          "side": {
            "type": "string",
            "example": "SELL"
          },
          "positionSide": {
            "type": "string",
            "example": "SHORT"
          },
          "totalQty": {
            "type": "string",
            "example": "5.00"
          },
          "executedQty": {
            "type": "string",
            "example": "0.000"
          },
          "executedAmt": {
            "type": "string",
            "example": "0.00000000"
          },
          "avgPrice": {
            "type": "string",
            "example": "0.00"
          },
          "clientAlgoId": {
            "type": "string",
            "example": "d7096549481642f8a0bb69e9e2e31f2e"
          },
          "bookTime": {
            "type": "integer",
            "format": "int64",
            "example": 1649756817004
          },
          "endTime": {
            "type": "integer",
            "format": "int64",
            "example": 1649757088101
          },
          "algoStatus": {
            "type": "string",
            "example": "WORKING"
          },
          "algoType": {
            "type": "string",
            "example": "VP"
          },
          "urgency": {
            "type": "string",
            "example": "LOW"
          }
        }
      },
      "inline_response_200_146_subOrders": {
        "required": [
          "algoId",
          "avgPrice",
          "bookTime",
          "executedAmt",
          "feeAmt",
          "feeAsset",
          "orderId",
          "orderStatus",
          "origQty",
          "side",
          "subId",
          "symbol",
          "timeInForce"
        ],
        "type": "object",
        "properties": {
          "algoId": {
            "type": "integer",
            "format": "int64",
            "example": 13723
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 8389765519993909000
          },
          "orderStatus": {
            "type": "string",
            "example": "FILLED"
          },
          "executedQty": {
            "type": "string",
            "example": "1.000"
          },
          "executedAmt": {
            "type": "string",
            "example": "3229.44000000"
          },
          "feeAmt": {
            "type": "string",
            "example": "-1.61471999"
          },
          "feeAsset": {
            "type": "string",
            "example": "USDT"
          },
          "bookTime": {
            "type": "integer",
            "format": "int64",
            "example": 1649756817004
          },
          "avgPrice": {
            "type": "string",
            "example": "3229.44"
          },
          "side": {
            "type": "string",
            "example": "SELL"
          },
          "symbol": {
            "type": "string",
            "example": "ETHUSDT"
          },
          "subId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "timeInForce": {
            "type": "string",
            "example": "IMMEDIATE_OR_CANCEL"
          },
          "origQty": {
            "type": "string",
            "example": "1.000"
          }
        }
      },
      "inline_response_200_167_totalUnclaimedRewards": {
        "required": [
          "BNB",
          "BUSD",
          "USDT"
        ],
        "type": "object",
        "properties": {
          "BUSD": {
            "type": "number",
            "format": "float",
            "example": 100000315.79
          },
          "BNB": {
            "type": "number",
            "format": "double",
            "example": 1e-8
          },
          "USDT": {
            "type": "number",
            "format": "double",
            "example": 2e-8
          }
        }
      },
      "inline_response_200_167_details_BNBUSDT": {
        "required": [
          "BUSD",
          "USDT"
        ],
        "type": "object",
        "properties": {
          "BUSD": {
            "type": "number",
            "format": "float",
            "example": 100000315.79
          },
          "USDT": {
            "type": "number",
            "format": "double",
            "example": 2e-8
          }
        }
      },
      "inline_response_200_167_details_BNBBTC": {
        "required": [
          "BNB"
        ],
        "type": "object",
        "properties": {
          "BNB": {
            "type": "number",
            "format": "double",
            "example": 1e-8
          }
        }
      },
      "inline_response_200_167_details": {
        "required": [
          "BNB/BTC",
          "BNB/USDT"
        ],
        "type": "object",
        "properties": {
          "BNB/USDT": {
            "$ref": "#/components/schemas/inline_response_200_167_details_BNBUSDT"
          },
          "BNB/BTC": {
            "$ref": "#/components/schemas/inline_response_200_167_details_BNBBTC"
          }
        }
      },
      "inline_response_200_170_data": {
        "required": [
          "advNo",
          "advertisementRole",
          "amount",
          "asset",
          "commission",
          "counterPartNickName",
          "createTime",
          "fiat",
          "fiatSymbol",
          "orderNumber",
          "orderStatus",
          "totalPrice",
          "tradeType",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "orderNumber": {
            "type": "string",
            "example": "20219644646554779648"
          },
          "advNo": {
            "type": "string",
            "example": "11218246497340923904"
          },
          "tradeType": {
            "type": "string",
            "example": "SELL"
          },
          "asset": {
            "type": "string",
            "example": "BUSD"
          },
          "fiat": {
            "type": "string",
            "example": "CNY"
          },
          "fiatSymbol": {
            "type": "string",
            "example": "￥"
          },
          "amount": {
            "type": "string",
            "description": "Quantity (in Crypto)",
            "example": "5000.00000000"
          },
          "totalPrice": {
            "type": "string",
            "example": "33400.00000000"
          },
          "unitPrice": {
            "type": "string",
            "description": "Unit Price (in Fiat)",
            "example": "6.68"
          },
          "orderStatus": {
            "type": "string",
            "description": "PENDING, TRADING, BUYER_PAYED, DISTRIBUTING, COMPLETED, IN_APPEAL, CANCELLED, CANCELLED_BY_SYSTEM",
            "example": "COMPLETED"
          },
          "createTime": {
            "type": "integer",
            "format": "int64",
            "example": 1619361369000
          },
          "commission": {
            "type": "string",
            "description": "Transaction Fee (in Crypto)",
            "example": "0"
          },
          "counterPartNickName": {
            "type": "string",
            "example": "ab***"
          },
          "advertisementRole": {
            "type": "string",
            "example": "TAKER"
          }
        }
      },
      "inline_response_200_171_rows": {
        "required": [
          "collateralAccountId",
          "collateralCoin",
          "collateralValue",
          "currentLTV",
          "expirationTime",
          "loanCoin",
          "orderId",
          "residualInterest",
          "totalDebt"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 100000001
          },
          "loanCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "totalDebt": {
            "type": "string",
            "example": "10000"
          },
          "residualInterest": {
            "type": "string",
            "example": "10.27687923"
          },
          "collateralAccountId": {
            "type": "string",
            "example": "12345678, 23456789"
          },
          "collateralCoin": {
            "type": "string",
            "example": "BNB,BTC,ETH"
          },
          "collateralValue": {
            "type": "string",
            "description": "locked collateral value shown in USD value",
            "example": "25000.27565492"
          },
          "currentLTV": {
            "type": "string",
            "example": "0.57"
          },
          "expirationTime": {
            "type": "integer",
            "format": "int64",
            "example": 1575018510000
          }
        }
      },
      "inline_response_200_173_rows": {
        "required": [
          "collateralCoin",
          "loanCoin",
          "orderId",
          "repayAmount",
          "repayStatus",
          "repayTime"
        ],
        "type": "object",
        "properties": {
          "loanCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "repayAmount": {
            "type": "string",
            "example": "10000"
          },
          "collateralCoin": {
            "type": "string",
            "example": "BNB,BTC,ETH"
          },
          "repayStatus": {
            "type": "string",
            "description": "Repaid, Repaying, Failed",
            "example": "Repaid"
          },
          "repayTime": {
            "type": "string",
            "example": "1575018510000"
          },
          "orderId": {
            "type": "string",
            "example": "756783308056935434"
          }
        }
      },
      "inline_response_200_174_rows": {
        "required": [
          "collateralAccountId",
          "collateralCoin",
          "collateralValue"
        ],
        "type": "object",
        "properties": {
          "collateralAccountId": {
            "type": "string",
            "example": "12345678"
          },
          "collateralCoin": {
            "type": "string",
            "example": "BNB,BTC,ETH"
          },
          "collateralValue": {
            "type": "string",
            "description": "locked collateral value shown in USD value",
            "example": "500.27565492"
          }
        }
      },
      "inline_response_200_177_rows": {
        "required": [
          "borrowTime",
          "collateralCoin",
          "hourlyInterestRate",
          "initialCollateralAmount",
          "initialLoanAmount",
          "loanCoin",
          "loanTerm",
          "orderId",
          "status"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 100000001
          },
          "loanCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "initialLoanAmount": {
            "type": "string",
            "example": "10000"
          },
          "hourlyInterestRate": {
            "type": "string",
            "example": "0.000057"
          },
          "loanTerm": {
            "type": "string",
            "example": "7"
          },
          "collateralCoin": {
            "type": "string",
            "example": "BNB"
          },
          "initialCollateralAmount": {
            "type": "string",
            "example": "49.27565492"
          },
          "borrowTime": {
            "type": "integer",
            "format": "int64",
            "example": 1575018510000
          },
          "status": {
            "type": "string",
            "example": "Accruing_Interest, Overdue, Liquidating, Repaying, Repaid, Liquidated, Pending, Failed"
          }
        }
      },
      "inline_response_200_178_rows": {
        "required": [
          "collateralAmount",
          "collateralCoin",
          "currentLTV",
          "expirationTime",
          "loanCoin",
          "orderId",
          "residualInterest",
          "totalDebt"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 100000001
          },
          "loanCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "totalDebt": {
            "type": "string",
            "example": "10000"
          },
          "residualInterest": {
            "type": "string",
            "example": "10.27687923"
          },
          "collateralCoin": {
            "type": "string",
            "example": "BNB"
          },
          "collateralAmount": {
            "type": "string",
            "example": "49.27565492"
          },
          "currentLTV": {
            "type": "string",
            "example": "0.57"
          },
          "expirationTime": {
            "type": "integer",
            "format": "int64",
            "example": 1575018510000
          }
        }
      },
      "inline_response_200_180_rows": {
        "required": [
          "collateralCoin",
          "collateralReturn",
          "collateralUsed",
          "loanCoin",
          "orderId",
          "repayAmount",
          "repayStatus",
          "repayTime",
          "repayType"
        ],
        "type": "object",
        "properties": {
          "loanCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "repayAmount": {
            "type": "string",
            "example": "10000"
          },
          "collateralCoin": {
            "type": "string",
            "example": "BNB"
          },
          "collateralUsed": {
            "type": "string",
            "example": "0"
          },
          "collateralReturn": {
            "type": "string",
            "example": "49.27565492"
          },
          "repayType": {
            "type": "string",
            "example": "1"
          },
          "repayStatus": {
            "type": "string",
            "description": "'repayType': '1' // 1 for 'repay with borrowed coin', 2 for 'repay with collateral' 'repayStatus': 'Repaid' // Repaid, Repaying, Failed",
            "example": "Repaid"
          },
          "repayTime": {
            "type": "integer",
            "format": "int64",
            "example": 1575018510000
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 756783308056935400
          }
        }
      },
      "inline_response_200_182_rows": {
        "required": [
          "adjustTime",
          "afterLTV",
          "amount",
          "collateralCoin",
          "direction",
          "loanCoin",
          "orderId",
          "preLTV"
        ],
        "type": "object",
        "properties": {
          "loanCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "collateralCoin": {
            "type": "string",
            "example": "BNB"
          },
          "direction": {
            "type": "string",
            "example": "ADDITIONAL"
          },
          "amount": {
            "type": "string",
            "example": "5.235"
          },
          "preLTV": {
            "type": "string",
            "example": "0.78"
          },
          "afterLTV": {
            "type": "string",
            "example": "0.56"
          },
          "adjustTime": {
            "type": "integer",
            "format": "int64",
            "example": 1575018510000
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 756783308056935400
          }
        }
      },
      "inline_response_200_183_rows": {
        "required": [
          "_14dDailyInterestRate",
          "_14dHourlyInterestRate",
          "_180dDailyInterestRate",
          "_180dHourlyInterestRate",
          "_30dDailyInterestRate",
          "_30dHourlyInterestRate",
          "_7dDailyInterestRate",
          "_7dHourlyInterestRate",
          "_90dDailyInterestRate",
          "_90dHourlyInterestRate",
          "loanCoin",
          "maxLimit",
          "minLimit",
          "vipLevel"
        ],
        "type": "object",
        "properties": {
          "loanCoin": {
            "type": "string",
            "example": "BUSD"
          },
          "_7dHourlyInterestRate": {
            "type": "string",
            "example": "0.00000491"
          },
          "_7dDailyInterestRate": {
            "type": "string",
            "example": "0.000118"
          },
          "_14dHourlyInterestRate": {
            "type": "string",
            "example": "0.00000491"
          },
          "_14dDailyInterestRate": {
            "type": "string",
            "example": "0.000118"
          },
          "_30dHourlyInterestRate": {
            "type": "string",
            "example": "0.00000567"
          },
          "_30dDailyInterestRate": {
            "type": "string",
            "example": "0.000136"
          },
          "_90dHourlyInterestRate": {
            "type": "string",
            "example": "0.00000596"
          },
          "_90dDailyInterestRate": {
            "type": "string",
            "example": "0.000143"
          },
          "_180dHourlyInterestRate": {
            "type": "string",
            "example": "0.00000631"
          },
          "_180dDailyInterestRate": {
            "type": "string",
            "example": "0.000151"
          },
          "minLimit": {
            "type": "string",
            "example": "100"
          },
          "maxLimit": {
            "type": "string",
            "example": "1000000"
          },
          "vipLevel": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_184_rows": {
        "required": [
          "collateralCoin",
          "initialLTV",
          "liquidationLTV",
          "marginCallLTV",
          "maxLimit",
          "vipLevel"
        ],
        "type": "object",
        "properties": {
          "collateralCoin": {
            "type": "string",
            "example": "BNB"
          },
          "initialLTV": {
            "type": "string",
            "example": "0.65"
          },
          "marginCallLTV": {
            "type": "string",
            "example": "0.75"
          },
          "liquidationLTV": {
            "type": "string",
            "example": "0.83"
          },
          "maxLimit": {
            "type": "string",
            "example": "1000000"
          },
          "vipLevel": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inline_response_200_186_rows": {
        "required": [
          "afterMarginCall",
          "collateralCoin",
          "customizeTime",
          "orderId",
          "preMarginCall"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "example": "100000001"
          },
          "collateralCoin": {
            "type": "string",
            "example": "BNB"
          },
          "preMarginCall": {
            "type": "string",
            "example": "0.8"
          },
          "afterMarginCall": {
            "type": "string",
            "example": "0.7"
          },
          "customizeTime": {
            "type": "integer",
            "format": "int64",
            "example": 1575018510000
          }
        }
      },
      "inline_response_200_187_fundsDetail": {
        "required": [
          "amount",
          "currency"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          }
        },
        "example": "[{\"currency\":\"USDT\",\"amount\":\"1.2\"},{\"currency\":\"ETH\",\"amount\":\"0.0001\"}]"
      },
      "inline_response_200_187_data": {
        "required": [
          "amount",
          "currency",
          "fundsDetail",
          "orderType",
          "transactionId",
          "transactionTime"
        ],
        "type": "object",
        "properties": {
          "orderType": {
            "type": "string",
            "description": "Enum：PAY(C2B Merchant Acquiring Payment), PAY_REFUND(C2B Merchant Acquiring Payment,refund), C2C(C2C Transfer Payment),CRYPTO_BOX(Crypto box), CRYPTO_BOX_RF(Crypto Box, refund), C2C_HOLDING(Transfer to new Binance user), C2C_HOLDING_RF(Transfer to new Binance user,refund), PAYOUT(B2C Disbursement Payment)",
            "example": "C2C"
          },
          "transactionId": {
            "type": "string",
            "example": "M_P_71505104267788288"
          },
          "transactionTime": {
            "type": "integer",
            "format": "int64",
            "example": 1610090460133
          },
          "amount": {
            "type": "string",
            "description": "order amount(up to 8 decimal places), positive is income, negative is expenditure",
            "example": "23.72469206"
          },
          "currency": {
            "type": "string",
            "example": "BNB"
          },
          "fundsDetail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_187_fundsDetail"
            }
          }
        }
      },
      "inline_response_200_193_list": {
        "required": [
          "createTime",
          "fromAmount",
          "fromAsset",
          "inverseRatio",
          "orderId",
          "orderStatus",
          "quoteId",
          "ratio",
          "toAmount",
          "toAsset"
        ],
        "type": "object",
        "properties": {
          "quoteId": {
            "type": "string",
            "example": "f3b91c525b2644c7bc1e1cd31b6e1aa6"
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 940708407462087200
          },
          "orderStatus": {
            "type": "string",
            "example": "SUCCESS"
          },
          "fromAsset": {
            "type": "string",
            "example": "USDT"
          },
          "fromAmount": {
            "type": "string",
            "example": "20"
          },
          "toAsset": {
            "type": "string",
            "example": "BNB"
          },
          "toAmount": {
            "type": "string",
            "example": "0.06154036"
          },
          "ratio": {
            "type": "string",
            "description": "price ratio",
            "example": "0.00307702"
          },
          "inverseRatio": {
            "type": "string",
            "description": "inverse price",
            "example": "324.99"
          },
          "createTime": {
            "type": "integer",
            "format": "int64",
            "example": 1624248872184
          }
        }
      },
      "inline_response_200_194_data_data": {
        "required": [
          "amount",
          "asset",
          "type",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "asset": {
            "type": "string",
            "example": "USDT"
          },
          "type": {
            "type": "integer",
            "description": "rebate type：1 is commission rebate，2 is referral kickback",
            "format": "int32",
            "example": 1
          },
          "amount": {
            "type": "string",
            "example": "0.0001126"
          },
          "updateTime": {
            "type": "integer",
            "format": "int64",
            "example": 1637651320000
          }
        }
      },
      "inline_response_200_194_data": {
        "required": [
          "data",
          "page",
          "totalPageNum",
          "totalRecords"
        ],
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "totalPageNum": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_194_data_data"
            }
          }
        }
      },
      "inline_response_200_195_tokens": {
        "required": [
          "contractAddress",
          "network",
          "tokenId"
        ],
        "type": "object",
        "properties": {
          "network": {
            "type": "string",
            "example": "BSC"
          },
          "tokenId": {
            "type": "string",
            "example": "216000000496"
          },
          "contractAddress": {
            "type": "string",
            "example": "MYSTERY_BOX0000087"
          }
        }
      },
      "inline_response_200_195_list": {
        "required": [
          "orderNo",
          "tokens",
          "tradeAmount",
          "tradeCurrency",
          "tradeTime"
        ],
        "type": "object",
        "properties": {
          "orderNo": {
            "type": "string",
            "description": "0: purchase order, 1: sell order, 2: royalty income, 3: primary market order, 4: mint fee",
            "example": "1_470502070600699904"
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_195_tokens"
            }
          },
          "tradeTime": {
            "type": "integer",
            "format": "int64",
            "example": 1626941236000
          },
          "tradeAmount": {
            "type": "string",
            "example": "19.60000000"
          },
          "tradeCurrency": {
            "type": "string",
            "example": "BNB"
          }
        }
      },
      "inline_response_200_196_list": {
        "required": [
          "contractAdrress",
          "network",
          "timestamp",
          "tokenId",
          "txID"
        ],
        "type": "object",
        "properties": {
          "network": {
            "type": "string",
            "example": "ETH"
          },
          "txID": {
            "type": "integer",
            "nullable": true
          },
          "contractAdrress": {
            "type": "string",
            "example": "0xe507c961ee127d4439977a61af39c34eafee0dc6"
          },
          "tokenId": {
            "type": "string",
            "example": "10014"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": 1629986047000
          }
        }
      },
      "inline_response_200_197_list": {
        "required": [
          "contractAdrress",
          "fee",
          "feeAsset",
          "network",
          "timestamp",
          "tokenId",
          "txID"
        ],
        "type": "object",
        "properties": {
          "network": {
            "type": "string",
            "example": "ETH"
          },
          "txID": {
            "type": "string",
            "example": "0x2be5eed31d787fdb4880bc631c8e76bdfb6150e137f5cf1732e0416ea206f57f"
          },
          "contractAdrress": {
            "type": "string",
            "example": "0xe507c961ee127d4439977a61af39c34eafee0dc6"
          },
          "tokenId": {
            "type": "string",
            "example": "1000001247"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "example": 1633674433000
          },
          "fee": {
            "type": "number",
            "example": 0.1
          },
          "feeAsset": {
            "type": "string",
            "example": "ETH"
          }
        }
      },
      "inline_response_200_198_list": {
        "required": [
          "contractAddress",
          "network",
          "tokenId"
        ],
        "type": "object",
        "properties": {
          "network": {
            "type": "string",
            "example": "BSC"
          },
          "contractAddress": {
            "type": "string",
            "example": "REGULAR11234567891779"
          },
          "tokenId": {
            "type": "string",
            "example": "100900000017"
          }
        }
      },
      "inline_response_200_199_data": {
        "required": [
          "code",
          "referenceNo"
        ],
        "type": "object",
        "properties": {
          "referenceNo": {
            "type": "string",
            "example": "0033002327977405"
          },
          "code": {
            "type": "string",
            "example": "AOGANK3NB4GIT3C6"
          }
        }
      },
      "inline_response_200_200_data": {
        "required": [
          "amount",
          "identityNo",
          "referenceNo",
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "BNB"
          },
          "amount": {
            "type": "string",
            "example": "10"
          },
          "referenceNo": {
            "type": "string",
            "example": "0033002327977405"
          },
          "identityNo": {
            "type": "string",
            "example": "10316281761814589440"
          }
        }
      },
      "inline_response_200_201_data": {
        "required": [
          "amount",
          "token",
          "valid"
        ],
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "token": {
            "type": "string",
            "example": "BNB"
          },
          "amount": {
            "type": "string",
            "example": "0.00000001"
          }
        }
      },
      "inline_response_200_203_data": {
        "required": [
          "code",
          "referenceNo"
        ],
        "type": "object",
        "properties": {
          "coin": {
            "type": "string",
            "example": "BNB"
          },
          "fromMin": {
            "type": "string",
            "example": "0.01"
          },
          "fromMax": {
            "type": "string",
            "example": "1"
          }
        }
      }
    },
    "parameters": {
      "asset": {
        "name": "asset",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "BTC"
        }
      },
      "amount": {
        "name": "amount",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "number",
          "format": "double",
          "example": 1.01
        }
      },
      "current": {
        "name": "current",
        "in": "query",
        "description": "Current querying page. Start from 1. Default:1",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      "optionalCoin": {
        "name": "coin",
        "in": "query",
        "description": "Coin name",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "BNB"
        }
      },
      "coin": {
        "name": "coin",
        "in": "query",
        "description": "Coin name",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "BNB"
        }
      },
      "side": {
        "name": "side",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "SELL",
          "enum": [
            "SELL",
            "BUY"
          ]
        }
      },
      "optionalSide": {
        "name": "side",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "SELL",
          "enum": [
            "SELL",
            "BUY"
          ]
        }
      },
      "positionSide": {
        "name": "positionSide",
        "in": "query",
        "description": "Default BOTH for One-way Mode ; LONG or SHORT for Hedge Mode. It must be sent in Hedge Mode.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "BOTH",
          "enum": [
            "BOTH",
            "LONG",
            "SHORT"
          ]
        }
      },
      "size": {
        "name": "size",
        "in": "query",
        "description": "Default:10 Max:100",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 100
        }
      },
      "symbol": {
        "name": "symbol",
        "in": "query",
        "description": "Trading symbol, e.g. BNBUSDT",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "BNBUSDT"
        }
      },
      "optionalSymbol": {
        "name": "symbol",
        "in": "query",
        "description": "Trading symbol, e.g. BNBUSDT",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "BNBUSDT"
        }
      },
      "optionalAsset": {
        "name": "asset",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "BNB"
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Default 500; max 1000.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 500
        }
      },
      "limit50": {
        "name": "limit",
        "in": "query",
        "description": "Default 50, Max 50",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 50
        }
      },
      "listenKey": {
        "name": "listenKey",
        "in": "query",
        "description": "User websocket listen key",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "pqia91ma19a5s61cv6a81va65sdf19v8a65a1a5s61cv6a81va65sdf19v8a65a1"
        }
      },
      "fromId": {
        "name": "fromId",
        "in": "query",
        "description": "Trade id to fetch from. Default gets most recent trades.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "orderId": {
        "name": "orderId",
        "in": "query",
        "description": "Order id",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "orderListId": {
        "name": "orderListId",
        "in": "query",
        "description": "Order list id",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "origClientOrderId": {
        "name": "origClientOrderId",
        "in": "query",
        "description": "Order id from client",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "listClientOrderId": {
        "name": "listClientOrderId",
        "in": "query",
        "description": "A unique Id for the entire orderList",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "newClientOrderId": {
        "name": "newClientOrderId",
        "in": "query",
        "description": "Used to uniquely identify this cancel. Automatically generated by default",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "strategyId": {
        "name": "strategyId",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "strategyType": {
        "name": "strategyType",
        "in": "query",
        "description": "The value cannot be less than 1000000.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "newOrderRespType": {
        "name": "newOrderRespType",
        "in": "query",
        "description": "Set the response JSON. MARKET and LIMIT order types default to FULL, all other orders default to ACK.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "ACK",
            "RESULT",
            "FULL"
          ]
        }
      },
      "ocoNewOrderRespType": {
        "name": "newOrderRespType",
        "in": "query",
        "description": "Set the response JSON.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "ACK",
            "RESULT",
            "FULL"
          ]
        }
      },
      "startTime": {
        "name": "startTime",
        "in": "query",
        "description": "UTC timestamp in ms",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "endTime": {
        "name": "endTime",
        "in": "query",
        "description": "UTC timestamp in ms",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "startTimeReq": {
        "name": "startTime",
        "in": "query",
        "description": "UTC timestamp in ms",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "endTimeReq": {
        "name": "endTime",
        "in": "query",
        "description": "UTC timestamp in ms",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "collateralCoinReq": {
        "name": "collateralCoin",
        "in": "query",
        "description": "Coin used as collateral",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "BNB"
        }
      },
      "collateralCoin": {
        "name": "collateralCoin",
        "in": "query",
        "description": "Coin used as collateral",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "BNB"
        }
      },
      "loanCoinReq": {
        "name": "loanCoin",
        "in": "query",
        "description": "Coin loaned",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "BUSD"
        }
      },
      "loanCoin": {
        "name": "loanCoin",
        "in": "query",
        "description": "Coin loaned",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "BUSD"
        }
      },
      "price": {
        "name": "price",
        "in": "query",
        "description": "Order price",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "number",
          "format": "double"
        }
      },
      "optionalPrice": {
        "name": "price",
        "in": "query",
        "description": "Order price",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "number",
          "format": "double"
        }
      },
      "quantity": {
        "name": "quantity",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "number",
          "format": "double"
        }
      },
      "optionalQuantity": {
        "name": "quantity",
        "in": "query",
        "description": "Order quantity",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "number",
          "format": "double"
        }
      },
      "recvWindow": {
        "name": "recvWindow",
        "in": "query",
        "description": "The value cannot be greater than 60000",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64",
          "example": 5000
        }
      },
      "timestamp": {
        "name": "timestamp",
        "in": "query",
        "description": "UTC timestamp in ms",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "timeInForce": {
        "name": "timeInForce",
        "in": "query",
        "description": "Order time in force",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "GTC",
            "IOC",
            "FOK"
          ]
        }
      },
      "type": {
        "name": "type",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "orderType": {
        "name": "type",
        "in": "query",
        "description": "Order type",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "LIMIT",
            "MARKET",
            "STOP_LOSS",
            "STOP_LOSS_LIMIT",
            "TAKE_PROFIT",
            "TAKE_PROFIT_LIMIT",
            "LIMIT_MAKER"
          ]
        }
      },
      "univTransferType": {
        "name": "type",
        "in": "query",
        "description": "Universal transfer type",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "MAIN_C2C",
          "enum": [
            "MAIN_C2C",
            "MAIN_UMFUTURE",
            "MAIN_CMFUTURE",
            "MAIN_MARGIN",
            "MAIN_MINING",
            "C2C_MAIN",
            "C2C_UMFUTURE",
            "C2C_MINING",
            "C2C_MARGIN",
            "UMFUTURE_MAIN",
            "UMFUTURE_C2C",
            "UMFUTURE_MARGIN",
            "CMFUTURE_MAIN",
            "CMFUTURE_MARGIN",
            "MARGIN_MAIN",
            "MARGIN_UMFUTURE",
            "MARGIN_CMFUTURE",
            "MARGIN_MINING",
            "MARGIN_C2C",
            "MINING_MAIN",
            "MINING_UMFUTURE",
            "MINING_C2C",
            "MINING_MARGIN",
            "MAIN_PAY",
            "PAY_MAIN",
            "ISOLATEDMARGIN_MARGIN",
            "MARGIN_ISOLATEDMARGIN",
            "ISOLATEDMARGIN_ISOLATEDMARGIN"
          ]
        }
      },
      "signature": {
        "name": "signature",
        "in": "query",
        "description": "Signature",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "stopPrice": {
        "name": "stopPrice",
        "in": "query",
        "description": "Used with STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, and TAKE_PROFIT_LIMIT orders.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "number",
          "format": "double",
          "example": 20.01
        }
      },
      "isIsolatedMargin": {
        "name": "isIsolated",
        "in": "query",
        "description": "* `TRUE` - For isolated margin\n* `FALSE` - Default, not for isolated margin",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "TRUE",
            "FALSE"
          ]
        }
      },
      "transFrom": {
        "name": "transFrom",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "SPOT",
          "enum": [
            "SPOT",
            "ISOLATED_MARGIN"
          ]
        }
      },
      "optionalTransFrom": {
        "name": "transFrom",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "SPOT",
          "enum": [
            "SPOT",
            "ISOLATED_MARGIN"
          ]
        }
      },
      "transTo": {
        "name": "transTo",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "ISOLATED_MARGIN",
          "enum": [
            "SPOT",
            "ISOLATED_MARGIN"
          ]
        }
      },
      "optionalTransTo": {
        "name": "transTo",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "ISOLATED_MARGIN",
          "enum": [
            "SPOT",
            "ISOLATED_MARGIN"
          ]
        }
      },
      "symbols": {
        "name": "symbols",
        "in": "query",
        "description": "Max 5 symbols can be sent; separated by ','",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "BTCUSDT,BNBUSDT,ADAUSDT"
        }
      },
      "arraySymbols": {
        "name": "symbols",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "[\"BTCUSDT\",\"BNBBTC\"]"
        }
      },
      "permissions": {
        "name": "permissions",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "'SPOT' or ['MARGIN','LEVERAGED']"
        }
      },
      "transactionType": {
        "name": "transactionType",
        "in": "query",
        "description": "* `0` - deposit\n* `1` - withdraw",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "0",
          "enum": [
            "0",
            "1"
          ]
        }
      },
      "beginTime": {
        "name": "beginTime",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64",
          "example": 1626144956000
        }
      },
      "page": {
        "name": "page",
        "in": "query",
        "description": "Default 1",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      "rows": {
        "name": "rows",
        "in": "query",
        "description": "Default 100, max 500",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 300
        }
      },
      "quoteOrderQty": {
        "name": "quoteOrderQty",
        "in": "query",
        "description": "Quote quantity",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "number",
          "format": "double"
        }
      },
      "icebergQty": {
        "name": "icebergQty",
        "in": "query",
        "description": "Used with LIMIT, STOP_LOSS_LIMIT, and TAKE_PROFIT_LIMIT to create an iceberg order.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "number",
          "format": "double"
        }
      },
      "flexibleProductStatus": {
        "name": "status",
        "in": "query",
        "description": "Default `ALL`",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "ALL",
            "SUBSCRIBABLE",
            "UNSUBSCRIBABLE"
          ]
        }
      },
      "optionalFlexibleProductStatus": {
        "name": "status",
        "in": "query",
        "description": "Default `ALL`",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "ALL",
            "SUBSCRIBABLE",
            "UNSUBSCRIBABLE"
          ]
        }
      },
      "optionalFixedAndActivityProductStatus": {
        "name": "status",
        "in": "query",
        "description": "Default `ALL`",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "ALL",
            "SUBSCRIBABLE",
            "UNSUBSCRIBABLE"
          ]
        }
      },
      "featured": {
        "name": "featured",
        "in": "query",
        "description": "Default `ALL`",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "ALL",
            "TRUE"
          ]
        }
      },
      "flexibleProductId": {
        "name": "productId",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "fixedAndActivityProjectId": {
        "name": "projectId",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "flexibleProductType": {
        "name": "type",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "FAST",
            "NORMAL"
          ]
        }
      },
      "fixedAndActivityProductType": {
        "name": "type",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "ACTIVITY",
            "CUSTOMIZED_FIXED"
          ]
        }
      },
      "sortBy": {
        "name": "sortBy",
        "in": "query",
        "description": "Default `START_TIME`",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "START_TIME",
            "LOT_SIZE",
            "INTEREST_RATE",
            "DURATION"
          ]
        }
      },
      "isSortAsc": {
        "name": "isSortAsc",
        "in": "query",
        "description": "default \"true\"",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "boolean"
        }
      },
      "projectId": {
        "name": "projectId",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "lot": {
        "name": "lot",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "needBtcValuation": {
        "name": "needBtcValuation",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "true",
            "false"
          ]
        }
      },
      "lendingType": {
        "name": "lendingType",
        "in": "query",
        "description": "* `DAILY` - for flexible\n* `ACTIVITY` - for activity\n* `CUSTOMIZED_FIXED` for fixed",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "DAILY",
            "ACTIVITY",
            "CUSTOMIZED_FIXED"
          ]
        }
      },
      "optionalPositionId": {
        "name": "positionId",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "positionId": {
        "name": "positionId",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "positionStatus": {
        "name": "status",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "HOLDING",
            "REDEEMED"
          ]
        }
      },
      "userName": {
        "name": "userName",
        "in": "query",
        "description": "Mining Account",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "algo": {
        "name": "algo",
        "in": "query",
        "description": "Algorithm(sha256)",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "pageIndex": {
        "name": "pageIndex",
        "in": "query",
        "description": "Page number, default is first page, start form 1",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "sort": {
        "name": "sort",
        "in": "query",
        "description": "sort sequence（default=0）0 positive sequence, 1 negative sequence",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "sortColumn": {
        "name": "sortColumn",
        "in": "query",
        "description": "Sort by( default 1): 1: miner name, 2: real-time computing power, 3: daily average computing power, 4: real-time rejection rate, 5: last submission time",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "workerStatus": {
        "name": "workerStatus",
        "in": "query",
        "description": "miners status（default=0）0 all, 1 valid, 2 invalid, 3 failure",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "startDate": {
        "name": "startDate",
        "in": "query",
        "description": "Search date, millisecond timestamp, while empty query all",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "endDate": {
        "name": "endDate",
        "in": "query",
        "description": "Search date, millisecond timestamp, while empty query all",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "pageSize": {
        "name": "pageSize",
        "in": "query",
        "description": "Number of pages, minimum 10, maximum 200",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "configId": {
        "name": "configId",
        "in": "query",
        "description": "Mining ID",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "toPoolUser": {
        "name": "toPoolUser",
        "in": "query",
        "description": "Mining Account",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "hashRate": {
        "name": "hashRate",
        "in": "query",
        "description": "Resale hashrate h/s must be transferred (BTC is greater than 500000000000 ETH is greater than 500000)",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "workerName": {
        "name": "workerName",
        "in": "query",
        "description": "Miner’s name",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "blvtTokenName": {
        "name": "tokenName",
        "in": "query",
        "description": "BTCDOWN, BTCUP",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "optionalBlvtTokenName": {
        "name": "tokenName",
        "in": "query",
        "description": "BTCDOWN, BTCUP",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "poolId": {
        "name": "poolId",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "optionalPoolId": {
        "name": "poolId",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "quoteAsset": {
        "name": "quoteAsset",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "USDT"
        }
      },
      "baseAsset": {
        "name": "baseAsset",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "BUSD"
        }
      },
      "quoteQty": {
        "name": "quoteQty",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "number",
          "format": "double"
        }
      },
      "subAccountEmail": {
        "name": "email",
        "in": "query",
        "description": "Sub-account email",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "optionalSubAccountEmail": {
        "name": "email",
        "in": "query",
        "description": "Sub-account email",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "optionalSubAccountFromEmail": {
        "name": "fromEmail",
        "in": "query",
        "description": "Sub-account email",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "optionalSubAccountToEmail": {
        "name": "toEmail",
        "in": "query",
        "description": "Sub-account email",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "subAccountFromEmail": {
        "name": "fromEmail",
        "in": "query",
        "description": "Sender email",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "subAccountToEmail": {
        "name": "toEmail",
        "in": "query",
        "description": "Recipient email",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "fromSymbol": {
        "name": "fromSymbol",
        "in": "query",
        "description": "Must be sent when type are ISOLATEDMARGIN_MARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "BNBUSDT"
        }
      },
      "toSymbol": {
        "name": "toSymbol",
        "in": "query",
        "description": "Must be sent when type are MARGIN_ISOLATEDMARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "BNBUSDT"
        }
      },
      "isolatedSymbol": {
        "name": "isolatedSymbol",
        "in": "query",
        "description": "Isolated symbol",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "archived": {
        "name": "archived",
        "in": "query",
        "description": "Default: false. Set to true for archived data from 6 months ago",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "sideEffectType": {
        "name": "sideEffectType",
        "in": "query",
        "description": "Default `NO_SIDE_EFFECT`",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "NO_SIDE_EFFECT",
            "MARGIN_BUY",
            "AUTO_REPAY"
          ]
        }
      },
      "limitClientOrderId": {
        "name": "limitClientOrderId",
        "in": "query",
        "description": "A unique Id for the limit order",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "limitStrategyId": {
        "name": "limitStrategyId",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "limitStrategyType": {
        "name": "limitStrategyType",
        "in": "query",
        "description": "The value cannot be less than 1000000.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "limitIcebergQty": {
        "name": "limitIcebergQty",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "number",
          "format": "double"
        }
      },
      "stopClientOrderId": {
        "name": "stopClientOrderId",
        "in": "query",
        "description": "A unique Id for the stop loss/stop loss limit leg",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "stopStrategyId": {
        "name": "stopStrategyId",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "stopStrategyType": {
        "name": "stopStrategyType",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "ocoStopPrice": {
        "name": "stopPrice",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "number",
          "format": "double"
        }
      },
      "stopLimitPrice": {
        "name": "stopLimitPrice",
        "in": "query",
        "description": "If provided, stopLimitTimeInForce is required.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "number",
          "format": "double"
        }
      },
      "stopIcebergQty": {
        "name": "stopIcebergQty",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "number",
          "format": "double"
        }
      },
      "stopLimitTimeInForce": {
        "name": "stopLimitTimeInForce",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "GTC",
            "FOK",
            "IOC"
          ]
        }
      },
      "subAccountApiKey": {
        "name": "subAccountApiKey",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "ipRestrict": {
        "name": "ipRestrict",
        "in": "query",
        "description": "true or false",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "boolean"
        }
      },
      "thirdParty": {
        "name": "thirdParty",
        "in": "query",
        "description": "true or false",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "boolean"
        }
      },
      "thirdPartyName": {
        "name": "thirdPartyName",
        "in": "query",
        "description": "third party IP list name",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "ipAddress": {
        "name": "ipAddress",
        "in": "query",
        "description": "Can be added in batches, separated by commas",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "optionalIpAddress": {
        "name": "ipAddress",
        "in": "query",
        "description": "Can be added in batches, separated by commas",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "vipLevel": {
        "name": "vipLevel",
        "in": "query",
        "description": "Defaults to user's vip level",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      "clientTranId": {
        "name": "clientTranId",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "bswapClaimType": {
        "name": "type",
        "in": "query",
        "description": "0: Swap rewards, 1: Liquidity rewards, default to 0",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 0
        }
      },
      "optionalTrailingDelta": {
        "name": "trailingDelta",
        "in": "query",
        "description": "Used with STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, and TAKE_PROFIT_LIMIT orders.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "number",
          "format": "double"
        }
      },
      "product": {
        "name": "product",
        "in": "query",
        "description": "* `STAKING` - for Locked Staking\n* `F_DEFI` - for flexible DeFi Staking\n* `L_DEFI` - for locked DeFi Staking",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "productId": {
        "name": "productId",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "optionalIsIsolated": {
        "name": "isIsolated",
        "in": "query",
        "description": "* `TRUE` - For isolated margin\n* `FALSE` - Default, not for isolated margin",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "description": "Binance Public API Key",
        "name": "X-MBX-APIKEY",
        "in": "header"
      }
    }
  }
}
